/*! jQuery v1.7.1 jquery.com | jquery.org/license */
(function(a, b) {
    function cy(a) {
        return f.isWindow(a) ? a : a.nodeType === 9 ? a.defaultView || a.parentWindow : !1
    }

    function cv(a) {
        if (!ck[a]) {
            var b = c.body,
                d = f("<" + a + ">").appendTo(b),
                e = d.css("display");
            d.remove();
            if (e === "none" || e === "") {
                cl || (cl = c.createElement("iframe"), cl.frameBorder = cl.width = cl.height = 0), b.appendChild(cl);
                if (!cm || !cl.createElement) {
                    cm = (cl.contentWindow || cl.contentDocument).document, cm.write((c.compatMode === "CSS1Compat" ? "<!doctype html>" : "") + "<html><body>"), cm.close()
                }
                d = cm.createElement(a), cm.body.appendChild(d), e = f.css(d, "display"), b.removeChild(cl)
            }
            ck[a] = e
        }
        return ck[a]
    }

    function cu(a, b) {
        var c = {};
        f.each(cq.concat.apply([], cq.slice(0, b)), function() {
            c[this] = a
        });
        return c
    }

    function ct() {
        cr = b
    }

    function cs() {
        setTimeout(ct, 0);
        return cr = f.now()
    }

    function cj() {
        try {
            return new a.ActiveXObject("Microsoft.XMLHTTP")
        } catch (b) {}
    }

    function ci() {
        try {
            return new a.XMLHttpRequest
        } catch (b) {}
    }

    function cc(a, c) {
        a.dataFilter && (c = a.dataFilter(c, a.dataType));
        var d = a.dataTypes,
            e = {},
            g, h, i = d.length,
            j, k = d[0],
            l, m, n, o, p;
        for (g = 1; g < i; g++) {
            if (g === 1) {
                for (h in a.converters) {
                    typeof h == "string" && (e[h.toLowerCase()] = a.converters[h])
                }
            }
            l = k, k = d[g];
            if (k === "*") {
                k = l
            } else {
                if (l !== "*" && l !== k) {
                    m = l + " " + k, n = e[m] || e["* " + k];
                    if (!n) {
                        p = b;
                        for (o in e) {
                            j = o.split(" ");
                            if (j[0] === l || j[0] === "*") {
                                p = e[j[1] + " " + k];
                                if (p) {
                                    o = e[o], o === !0 ? n = p : p === !0 && (n = o);
                                    break
                                }
                            }
                        }
                    }!n && !p && f.error("No conversion from " + m.replace(" ", " to ")), n !== !0 && (c = n ? n(c) : p(o(c)))
                }
            }
        }
        return c
    }

    function cb(a, c, d) {
        var e = a.contents,
            f = a.dataTypes,
            g = a.responseFields,
            h, i, j, k;
        for (i in g) {
            i in d && (c[g[i]] = d[i])
        }
        while (f[0] === "*") {
            f.shift(), h === b && (h = a.mimeType || c.getResponseHeader("content-type"))
        }
        if (h) {
            for (i in e) {
                if (e[i] && e[i].test(h)) {
                    f.unshift(i);
                    break
                }
            }
        }
        if (f[0] in d) {
            j = f[0]
        } else {
            for (i in d) {
                if (!f[0] || a.converters[i + " " + f[0]]) {
                    j = i;
                    break
                }
                k || (k = i)
            }
            j = j || k
        }
        if (j) {
            j !== f[0] && f.unshift(j);
            return d[j]
        }
    }

    function ca(a, b, c, d) {
        if (f.isArray(b)) {
            f.each(b, function(b, e) {
                c || bE.test(a) ? d(a, e) : ca(a + "[" + (typeof e == "object" || f.isArray(e) ? b : "") + "]", e, c, d)
            })
        } else {
            if (!c && b != null && typeof b == "object") {
                for (var e in b) {
                    ca(a + "[" + e + "]", b[e], c, d)
                }
            } else {
                d(a, b)
            }
        }
    }

    function b_(a, c) {
        var d, e, g = f.ajaxSettings.flatOptions || {};
        for (d in c) {
            c[d] !== b && ((g[d] ? a : e || (e = {}))[d] = c[d])
        }
        e && f.extend(!0, a, e)
    }

    function b$(a, c, d, e, f, g) {
        f = f || c.dataTypes[0], g = g || {}, g[f] = !0;
        var h = a[f],
            i = 0,
            j = h ? h.length : 0,
            k = a === bT,
            l;
        for (; i < j && (k || !l); i++) {
            l = h[i](c, d, e), typeof l == "string" && (!k || g[l] ? l = b : (c.dataTypes.unshift(l), l = b$(a, c, d, e, l, g)))
        }(k || !l) && !g["*"] && (l = b$(a, c, d, e, "*", g));
        return l
    }

    function bZ(a) {
        return function(b, c) {
            typeof b != "string" && (c = b, b = "*");
            if (f.isFunction(c)) {
                var d = b.toLowerCase().split(bP),
                    e = 0,
                    g = d.length,
                    h, i, j;
                for (; e < g; e++) {
                    h = d[e], j = /^\+/.test(h), j && (h = h.substr(1) || "*"), i = a[h] = a[h] || [], i[j ? "unshift" : "push"](c)
                }
            }
        }
    }

    function bC(a, b, c) {
        var d = b === "width" ? a.offsetWidth : a.offsetHeight,
            e = b === "width" ? bx : by,
            g = 0,
            h = e.length;
        if (d > 0) {
            if (c !== "border") {
                for (; g < h; g++) {
                    c || (d -= parseFloat(f.css(a, "padding" + e[g])) || 0), c === "margin" ? d += parseFloat(f.css(a, c + e[g])) || 0 : d -= parseFloat(f.css(a, "border" + e[g] + "Width")) || 0
                }
            }
            return d + "px"
        }
        d = bz(a, b, b);
        if (d < 0 || d == null) {
            d = a.style[b] || 0
        }
        d = parseFloat(d) || 0;
        if (c) {
            for (; g < h; g++) {
                d += parseFloat(f.css(a, "padding" + e[g])) || 0, c !== "padding" && (d += parseFloat(f.css(a, "border" + e[g] + "Width")) || 0), c === "margin" && (d += parseFloat(f.css(a, c + e[g])) || 0)
            }
        }
        return d + "px"
    }

    function bp(a, b) {
        b.src ? f.ajax({
            url: b.src,
            async: !1,
            dataType: "script"
        }) : f.globalEval((b.text || b.textContent || b.innerHTML || "").replace(bf, "/*$0*/")), b.parentNode && b.parentNode.removeChild(b)
    }

    function bo(a) {
        var b = c.createElement("div");
        bh.appendChild(b), b.innerHTML = a.outerHTML;
        return b.firstChild
    }

    function bn(a) {
        var b = (a.nodeName || "").toLowerCase();
        b === "input" ? bm(a) : b !== "script" && typeof a.getElementsByTagName != "" && f.grep(a.getElementsByTagName("input"), bm)
    }

    function bm(a) {
        if (a.type === "checkbox" || a.type === "radio") {
            a.defaultChecked = a.checked
        }
    }

    function bl(a) {
        return typeof a.getElementsByTagName != "" ? a.getElementsByTagName("*") : typeof a.querySelectorAll != "" ? a.querySelectorAll("*") : []
    }

    function bk(a, b) {
        var c;
        if (b.nodeType === 1) {
            b.clearAttributes && b.clearAttributes(), b.mergeAttributes && b.mergeAttributes(a), c = b.nodeName.toLowerCase();
            if (c === "object") {
                b.outerHTML = a.outerHTML
            } else {
                if (c !== "input" || a.type !== "checkbox" && a.type !== "radio") {
                    if (c === "option") {
                        b.selected = a.defaultSelected
                    } else {
                        if (c === "input" || c === "textarea") {
                            b.defaultValue = a.defaultValue
                        }
                    }
                } else {
                    a.checked && (b.defaultChecked = b.checked = a.checked), b.value !== a.value && (b.value = a.value)
                }
            }
            b.removeAttribute(f.expando)
        }
    }

    function bj(a, b) {
        if (b.nodeType === 1 && !!f.hasData(a)) {
            var c, d, e, g = f._data(a),
                h = f._data(b, g),
                i = g.events;
            if (i) {
                delete h.handle, h.events = {};
                for (c in i) {
                    for (d = 0, e = i[c].length; d < e; d++) {
                        f.event.add(b, c + (i[c][d].namespace ? "." : "") + i[c][d].namespace, i[c][d], i[c][d].data)
                    }
                }
            }
            h.data && (h.data = f.extend({}, h.data))
        }
    }

    function bi(a, b) {
        return f.nodeName(a, "table") ? a.getElementsByTagName("tbody")[0] || a.appendChild(a.ownerDocument.createElement("tbody")) : a
    }

    function U(a) {
        var b = V.split("|"),
            c = a.createDocumentFragment();
        if (c.createElement) {
            while (b.length) {
                c.createElement(b.pop())
            }
        }
        return c
    }

    function T(a, b, c) {
        b = b || 0;
        if (f.isFunction(b)) {
            return f.grep(a, function(a, d) {
                var e = !!b.call(a, d, a);
                return e === c
            })
        }
        if (b.nodeType) {
            return f.grep(a, function(a, d) {
                return a === b === c
            })
        }
        if (typeof b == "string") {
            var d = f.grep(a, function(a) {
                return a.nodeType === 1
            });
            if (O.test(b)) {
                return f.filter(b, d, !c)
            }
            b = f.filter(b, d)
        }
        return f.grep(a, function(a, d) {
            return f.inArray(a, b) >= 0 === c
        })
    }

    function S(a) {
        return !a || !a.parentNode || a.parentNode.nodeType === 11
    }

    function K() {
        return !0
    }

    function J() {
        return !1
    }

    function n(a, b, c) {
        var d = b + "defer",
            e = b + "queue",
            g = b + "mark",
            h = f._data(a, d);
        h && (c === "queue" || !f._data(a, e)) && (c === "mark" || !f._data(a, g)) && setTimeout(function() {
            !f._data(a, e) && !f._data(a, g) && (f.removeData(a, d, !0), h.fire())
        }, 0)
    }

    function m(a) {
        for (var b in a) {
            if (b === "data" && f.isEmptyObject(a[b])) {
                continue
            }
            if (b !== "toJSON") {
                return !1
            }
        }
        return !0
    }

    function l(a, c, d) {
        if (d === b && a.nodeType === 1) {
            var e = "data-" + c.replace(k, "-$1").toLowerCase();
            d = a.getAttribute(e);
            if (typeof d == "string") {
                try {
                    d = d === "true" ? !0 : d === "false" ? !1 : d === "null" ? null : f.isNumeric(d) ? parseFloat(d) : j.test(d) ? f.parseJSON(d) : d
                } catch (g) {}
                f.data(a, c, d)
            } else {
                d = b
            }
        }
        return d
    }

    function h(a) {
        var b = g[a] = {},
            c, d;
        a = a.split(/\s+/);
        for (c = 0, d = a.length; c < d; c++) {
            b[a[c]] = !0
        }
        return b
    }
    var c = a.document,
        d = a.navigator,
        e = a.location,
        f = function() {
            function J() {
                if (!e.isReady) {
                    try {
                        c.documentElement.doScroll("left")
                    } catch (a) {
                        setTimeout(J, 1);
                        return
                    }
                    e.ready()
                }
            }
            var e = function(a, b) {
                    return new e.fn.init(a, b, h)
                },
                f = a.jQuery,
                g = a.$,
                h, i = /^(?:[^#<]*(<[\w\W]+>)[^>]*$|#([\w\-]*)$)/,
                j = /\S/,
                k = /^\s+/,
                l = /\s+$/,
                m = /^<(\w+)\s*\/?>(?:<\/\1>)?$/,
                n = /^[\],:{}\s]*$/,
                o = /\\(?:["\\\/bfnrt]|u[0-9a-fA-F]{4})/g,
                p = /"[^"\\\n\r]*"|true|false|null|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?/g,
                q = /(?:^|:|,)(?:\s*\[)+/g,
                r = /(webkit)[ \/]([\w.]+)/,
                s = /(opera)(?:.*version)?[ \/]([\w.]+)/,
                t = /(msie) ([\w.]+)/,
                u = /(mozilla)(?:.*? rv:([\w.]+))?/,
                v = /-([a-z]|[0-9])/ig,
                w = /^-ms-/,
                x = function(a, b) {
                    return (b + "").toUpperCase()
                },
                y = d.userAgent,
                z, A, B, C = Object.prototype.toString,
                D = Object.prototype.hasOwnProperty,
                E = Array.prototype.push,
                F = Array.prototype.slice,
                G = String.prototype.trim,
                H = Array.prototype.indexOf,
                I = {};
            e.fn = e.prototype = {
                constructor: e,
                init: function(a, d, f) {
                    var g, h, j, k;
                    if (!a) {
                        return this
                    }
                    if (a.nodeType) {
                        this.context = this[0] = a, this.length = 1;
                        return this
                    }
                    if (a === "body" && !d && c.body) {
                        this.context = c, this[0] = c.body, this.selector = a, this.length = 1;
                        return this
                    }
                    if (typeof a == "string") {
                        a.charAt(0) !== "<" || a.charAt(a.length - 1) !== ">" || a.length < 3 ? g = i.exec(a) : g = [null, a, null];
                        if (g && (g[1] || !d)) {
                            if (g[1]) {
                                d = d instanceof e ? d[0] : d, k = d ? d.ownerDocument || d : c, j = m.exec(a), j ? e.isPlainObject(d) ? (a = [c.createElement(j[1])], e.fn.attr.call(a, d, !0)) : a = [k.createElement(j[1])] : (j = e.buildFragment([g[1]], [k]), a = (j.cacheable ? e.clone(j.fragment) : j.fragment).childNodes);
                                return e.merge(this, a)
                            }
                            h = c.getElementById(g[2]);
                            if (h && h.parentNode) {
                                if (h.id !== g[2]) {
                                    return f.find(a)
                                }
                                this.length = 1, this[0] = h
                            }
                            this.context = c, this.selector = a;
                            return this
                        }
                        return !d || d.jquery ? (d || f).find(a) : this.constructor(d).find(a)
                    }
                    if (e.isFunction(a)) {
                        return f.ready(a)
                    }
                    a.selector !== b && (this.selector = a.selector, this.context = a.context);
                    return e.makeArray(a, this)
                },
                selector: "",
                jquery: "1.7.1",
                length: 0,
                size: function() {
                    return this.length
                },
                toArray: function() {
                    return F.call(this, 0)
                },
                get: function(a) {
                    return a == null ? this.toArray() : a < 0 ? this[this.length + a] : this[a]
                },
                pushStack: function(a, b, c) {
                    var d = this.constructor();
                    e.isArray(a) ? E.apply(d, a) : e.merge(d, a), d.prevObject = this, d.context = this.context, b === "find" ? d.selector = this.selector + (this.selector ? " " : "") + c : b && (d.selector = this.selector + "." + b + "(" + c + ")");
                    return d
                },
                each: function(a, b) {
                    return e.each(this, a, b)
                },
                ready: function(a) {
                    e.bindReady(), A.add(a);
                    return this
                },
                eq: function(a) {
                    a = +a;
                    return a === -1 ? this.slice(a) : this.slice(a, a + 1)
                },
                first: function() {
                    return this.eq(0)
                },
                last: function() {
                    return this.eq(-1)
                },
                slice: function() {
                    return this.pushStack(F.apply(this, arguments), "slice", F.call(arguments).join(","))
                },
                map: function(a) {
                    return this.pushStack(e.map(this, function(b, c) {
                        return a.call(b, c, b)
                    }))
                },
                end: function() {
                    return this.prevObject || this.constructor(null)
                },
                push: E,
                sort: [].sort,
                splice: [].splice
            }, e.fn.init.prototype = e.fn, e.extend = e.fn.extend = function() {
                var a, c, d, f, g, h, i = arguments[0] || {},
                    j = 1,
                    k = arguments.length,
                    l = !1;
                typeof i == "boolean" && (l = i, i = arguments[1] || {}, j = 2), typeof i != "object" && !e.isFunction(i) && (i = {}), k === j && (i = this, --j);
                for (; j < k; j++) {
                    if ((a = arguments[j]) != null) {
                        for (c in a) {
                            d = i[c], f = a[c];
                            if (i === f) {
                                continue
                            }
                            l && f && (e.isPlainObject(f) || (g = e.isArray(f))) ? (g ? (g = !1, h = d && e.isArray(d) ? d : []) : h = d && e.isPlainObject(d) ? d : {}, i[c] = e.extend(l, h, f)) : f !== b && (i[c] = f)
                        }
                    }
                }
                return i
            }, e.extend({
                noConflict: function(b) {
                    a.$ === e && (a.$ = g), b && a.jQuery === e && (a.jQuery = f);
                    return e
                },
                isReady: !1,
                readyWait: 1,
                holdReady: function(a) {
                    a ? e.readyWait++ : e.ready(!0)
                },
                ready: function(a) {
                    if (a === !0 && !--e.readyWait || a !== !0 && !e.isReady) {
                        if (!c.body) {
                            return setTimeout(e.ready, 1)
                        }
                        e.isReady = !0;
                        if (a !== !0 && --e.readyWait > 0) {
                            return
                        }
                        A.fireWith(c, [e]), e.fn.trigger && e(c).trigger("ready").off("ready")
                    }
                },
                bindReady: function() {
                    if (!A) {
                        A = e.Callbacks("once memory");
                        if (c.readyState === "complete") {
                            return setTimeout(e.ready, 1)
                        }
                        if (c.addEventListener) {
                            c.addEventListener("DOMContentLoaded", B, !1), a.addEventListener("load", e.ready, !1)
                        } else {
                            if (c.attachEvent) {
                                c.attachEvent("onreadystatechange", B), a.attachEvent("onload", e.ready);
                                var b = !1;
                                try {
                                    b = a.frameElement == null
                                } catch (d) {}
                                c.documentElement.doScroll && b && J()
                            }
                        }
                    }
                },
                isFunction: function(a) {
                    return e.type(a) === "function"
                },
                isArray: Array.isArray || function(a) {
                    return e.type(a) === "array"
                },
                isWindow: function(a) {
                    return a && typeof a == "object" && "setInterval" in a
                },
                isNumeric: function(a) {
                    return !isNaN(parseFloat(a)) && isFinite(a)
                },
                type: function(a) {
                    return a == null ? String(a) : I[C.call(a)] || "object"
                },
                isPlainObject: function(a) {
                    if (!a || e.type(a) !== "object" || a.nodeType || e.isWindow(a)) {
                        return !1
                    }
                    try {
                        if (a.constructor && !D.call(a, "constructor") && !D.call(a.constructor.prototype, "isPrototypeOf")) {
                            return !1
                        }
                    } catch (c) {
                        return !1
                    }
                    var d;
                    for (d in a) {}
                    return d === b || D.call(a, d)
                },
                isEmptyObject: function(a) {
                    for (var b in a) {
                        return !1
                    }
                    return !0
                },
                error: function(a) {
                    throw new Error(a)
                },
                parseJSON: function(b) {
                    if (typeof b != "string" || !b) {
                        return null
                    }
                    b = e.trim(b);
                    if (a.JSON && a.JSON.parse) {
                        return a.JSON.parse(b)
                    }
                    if (n.test(b.replace(o, "@").replace(p, "]").replace(q, ""))) {
                        return (new Function("return " + b))()
                    }
                    e.error("Invalid JSON: " + b)
                },
                parseXML: function(c) {
                    var d, f;
                    try {
                        a.DOMParser ? (f = new DOMParser, d = f.parseFromString(c, "text/xml")) : (d = new ActiveXObject("Microsoft.XMLDOM"), d.async = "false", d.loadXML(c))
                    } catch (g) {
                        d = b
                    }(!d || !d.documentElement || d.getElementsByTagName("parsererror").length) && e.error("Invalid XML: " + c);
                    return d
                },
                noop: function() {},
                globalEval: function(b) {
                    b && j.test(b) && (a.execScript || function(b) {
                        a.eval.call(a, b)
                    })(b)
                },
                camelCase: function(a) {
                    return a.replace(w, "ms-").replace(v, x)
                },
                nodeName: function(a, b) {
                    return a.nodeName && a.nodeName.toUpperCase() === b.toUpperCase()
                },
                each: function(a, c, d) {
                    var f, g = 0,
                        h = a.length,
                        i = h === b || e.isFunction(a);
                    if (d) {
                        if (i) {
                            for (f in a) {
                                if (c.apply(a[f], d) === !1) {
                                    break
                                }
                            }
                        } else {
                            for (; g < h;) {
                                if (c.apply(a[g++], d) === !1) {
                                    break
                                }
                            }
                        }
                    } else {
                        if (i) {
                            for (f in a) {
                                if (c.call(a[f], f, a[f]) === !1) {
                                    break
                                }
                            }
                        } else {
                            for (; g < h;) {
                                if (c.call(a[g], g, a[g++]) === !1) {
                                    break
                                }
                            }
                        }
                    }
                    return a
                },
                trim: G ? function(a) {
                    return a == null ? "" : G.call(a)
                } : function(a) {
                    return a == null ? "" : (a + "").replace(k, "").replace(l, "")
                },
                makeArray: function(a, b) {
                    var c = b || [];
                    if (a != null) {
                        var d = e.type(a);
                        a.length == null || d === "string" || d === "function" || d === "regexp" || e.isWindow(a) ? E.call(c, a) : e.merge(c, a)
                    }
                    return c
                },
                inArray: function(a, b, c) {
                    var d;
                    if (b) {
                        if (H) {
                            return H.call(b, a, c)
                        }
                        d = b.length, c = c ? c < 0 ? Math.max(0, d + c) : c : 0;
                        for (; c < d; c++) {
                            if (c in b && b[c] === a) {
                                return c
                            }
                        }
                    }
                    return -1
                },
                merge: function(a, c) {
                    var d = a.length,
                        e = 0;
                    if (typeof c.length == "number") {
                        for (var f = c.length; e < f; e++) {
                            a[d++] = c[e]
                        }
                    } else {
                        while (c[e] !== b) {
                            a[d++] = c[e++]
                        }
                    }
                    a.length = d;
                    return a
                },
                grep: function(a, b, c) {
                    var d = [],
                        e;
                    c = !!c;
                    for (var f = 0, g = a.length; f < g; f++) {
                        e = !!b(a[f], f), c !== e && d.push(a[f])
                    }
                    return d
                },
                map: function(a, c, d) {
                    var f, g, h = [],
                        i = 0,
                        j = a.length,
                        k = a instanceof e || j !== b && typeof j == "number" && (j > 0 && a[0] && a[j - 1] || j === 0 || e.isArray(a));
                    if (k) {
                        for (; i < j; i++) {
                            f = c(a[i], i, d), f != null && (h[h.length] = f)
                        }
                    } else {
                        for (g in a) {
                            f = c(a[g], g, d), f != null && (h[h.length] = f)
                        }
                    }
                    return h.concat.apply([], h)
                },
                guid: 1,
                proxy: function(a, c) {
                    if (typeof c == "string") {
                        var d = a[c];
                        c = a, a = d
                    }
                    if (!e.isFunction(a)) {
                        return b
                    }
                    var f = F.call(arguments, 2),
                        g = function() {
                            return a.apply(c, f.concat(F.call(arguments)))
                        };
                    g.guid = a.guid = a.guid || g.guid || e.guid++;
                    return g
                },
                access: function(a, c, d, f, g, h) {
                    var i = a.length;
                    if (typeof c == "object") {
                        for (var j in c) {
                            e.access(a, j, c[j], f, g, d)
                        }
                        return a
                    }
                    if (d !== b) {
                        f = !h && f && e.isFunction(d);
                        for (var k = 0; k < i; k++) {
                            g(a[k], c, f ? d.call(a[k], k, g(a[k], c)) : d, h)
                        }
                        return a
                    }
                    return i ? g(a[0], c) : b
                },
                now: function() {
                    return (new Date).getTime()
                },
                uaMatch: function(a) {
                    a = a.toLowerCase();
                    var b = r.exec(a) || s.exec(a) || t.exec(a) || a.indexOf("compatible") < 0 && u.exec(a) || [];
                    return {
                        browser: b[1] || "",
                        version: b[2] || "0"
                    }
                },
                sub: function() {
                    function a(b, c) {
                        return new a.fn.init(b, c)
                    }
                    e.extend(!0, a, this), a.superclass = this, a.fn = a.prototype = this(), a.fn.constructor = a, a.sub = this.sub, a.fn.init = function(d, f) {
                        f && f instanceof e && !(f instanceof a) && (f = a(f));
                        return e.fn.init.call(this, d, f, b)
                    }, a.fn.init.prototype = a.fn;
                    var b = a(c);
                    return a
                },
                browser: {}
            }), e.each("Boolean Number String Function Array Date RegExp Object".split(" "), function(a, b) {
                I["[object " + b + "]"] = b.toLowerCase()
            }), z = e.uaMatch(y), z.browser && (e.browser[z.browser] = !0, e.browser.version = z.version), e.browser.webkit && (e.browser.safari = !0), j.test(" ") && (k = /^[\s\xA0]+/, l = /[\s\xA0]+$/), h = e(c), c.addEventListener ? B = function() {
                c.removeEventListener("DOMContentLoaded", B, !1), e.ready()
            } : c.attachEvent && (B = function() {
                c.readyState === "complete" && (c.detachEvent("onreadystatechange", B), e.ready())
            });
            return e
        }(),
        g = {};
    f.Callbacks = function(a) {
        a = a ? g[a] || h(a) : {};
        var c = [],
            d = [],
            e, i, j, k, l, m = function(b) {
                var d, e, g, h, i;
                for (d = 0, e = b.length; d < e; d++) {
                    g = b[d], h = f.type(g), h === "array" ? m(g) : h === "function" && (!a.unique || !o.has(g)) && c.push(g)
                }
            },
            n = function(b, f) {
                f = f || [], e = !a.memory || [b, f], i = !0, l = j || 0, j = 0, k = c.length;
                for (; c && l < k; l++) {
                    if (c[l].apply(b, f) === !1 && a.stopOnFalse) {
                        e = !0;
                        break
                    }
                }
                i = !1, c && (a.once ? e === !0 ? o.disable() : c = [] : d && d.length && (e = d.shift(), o.fireWith(e[0], e[1])))
            },
            o = {
                add: function() {
                    if (c) {
                        var a = c.length;
                        m(arguments), i ? k = c.length : e && e !== !0 && (j = a, n(e[0], e[1]))
                    }
                    return this
                },
                remove: function() {
                    if (c) {
                        var b = arguments,
                            d = 0,
                            e = b.length;
                        for (; d < e; d++) {
                            for (var f = 0; f < c.length; f++) {
                                if (b[d] === c[f]) {
                                    i && f <= k && (k--, f <= l && l--), c.splice(f--, 1);
                                    if (a.unique) {
                                        break
                                    }
                                }
                            }
                        }
                    }
                    return this
                },
                has: function(a) {
                    if (c) {
                        var b = 0,
                            d = c.length;
                        for (; b < d; b++) {
                            if (a === c[b]) {
                                return !0
                            }
                        }
                    }
                    return !1
                },
                empty: function() {
                    c = [];
                    return this
                },
                disable: function() {
                    c = d = e = b;
                    return this
                },
                disabled: function() {
                    return !c
                },
                lock: function() {
                    d = b, (!e || e === !0) && o.disable();
                    return this
                },
                locked: function() {
                    return !d
                },
                fireWith: function(b, c) {
                    d && (i ? a.once || d.push([b, c]) : (!a.once || !e) && n(b, c));
                    return this
                },
                fire: function() {
                    o.fireWith(this, arguments);
                    return this
                },
                fired: function() {
                    return !!e
                }
            };
        return o
    };
    var i = [].slice;
    f.extend({
        Deferred: function(a) {
            var b = f.Callbacks("once memory"),
                c = f.Callbacks("once memory"),
                d = f.Callbacks("memory"),
                e = "pending",
                g = {
                    resolve: b,
                    reject: c,
                    notify: d
                },
                h = {
                    done: b.add,
                    fail: c.add,
                    progress: d.add,
                    state: function() {
                        return e
                    },
                    isResolved: b.fired,
                    isRejected: c.fired,
                    then: function(a, b, c) {
                        i.done(a).fail(b).progress(c);
                        return this
                    },
                    always: function() {
                        i.done.apply(i, arguments).fail.apply(i, arguments);
                        return this
                    },
                    pipe: function(a, b, c) {
                        return f.Deferred(function(d) {
                            f.each({
                                done: [a, "resolve"],
                                fail: [b, "reject"],
                                progress: [c, "notify"]
                            }, function(a, b) {
                                var c = b[0],
                                    e = b[1],
                                    g;
                                f.isFunction(c) ? i[a](function() {
                                    g = c.apply(this, arguments), g && f.isFunction(g.promise) ? g.promise().then(d.resolve, d.reject, d.notify) : d[e + "With"](this === i ? d : this, [g])
                                }) : i[a](d[e])
                            })
                        }).promise()
                    },
                    promise: function(a) {
                        if (a == null) {
                            a = h
                        } else {
                            for (var b in h) {
                                a[b] = h[b]
                            }
                        }
                        return a
                    }
                },
                i = h.promise({}),
                j;
            for (j in g) {
                i[j] = g[j].fire, i[j + "With"] = g[j].fireWith
            }
            i.done(function() {
                e = "resolved"
            }, c.disable, d.lock).fail(function() {
                e = "rejected"
            }, b.disable, d.lock), a && a.call(i, i);
            return i
        },
        when: function(a) {
            function m(a) {
                return function(b) {
                    e[a] = arguments.length > 1 ? i.call(arguments, 0) : b, j.notifyWith(k, e)
                }
            }

            function l(a) {
                return function(c) {
                    b[a] = arguments.length > 1 ? i.call(arguments, 0) : c, --g || j.resolveWith(j, b)
                }
            }
            var b = i.call(arguments, 0),
                c = 0,
                d = b.length,
                e = Array(d),
                g = d,
                h = d,
                j = d <= 1 && a && f.isFunction(a.promise) ? a : f.Deferred(),
                k = j.promise();
            if (d > 1) {
                for (; c < d; c++) {
                    b[c] && b[c].promise && f.isFunction(b[c].promise) ? b[c].promise().then(l(c), j.reject, m(c)) : --g
                }
                g || j.resolveWith(j, b)
            } else {
                j !== a && j.resolveWith(j, d ? [a] : [])
            }
            return k
        }
    }), f.support = function() {
        var b, d, e, g, h, i, j, k, l, m, n, o, p, q = c.createElement("div"),
            r = c.documentElement;
        q.setAttribute("className", "t"), q.innerHTML = "   <link/><table></table><a href='/a' style='top:1px;float:left;opacity:.55;'>a</a><input type='checkbox'/>", d = q.getElementsByTagName("*"), e = q.getElementsByTagName("a")[0];
        if (!d || !d.length || !e) {
            return {}
        }
        g = c.createElement("select"), h = g.appendChild(c.createElement("option")), i = q.getElementsByTagName("input")[0], b = {
            leadingWhitespace: q.firstChild.nodeType === 3,
            tbody: !q.getElementsByTagName("tbody").length,
            htmlSerialize: !!q.getElementsByTagName("link").length,
            style: /top/.test(e.getAttribute("style")),
            hrefNormalized: e.getAttribute("href") === "/a",
            opacity: /^0.55/.test(e.style.opacity),
            cssFloat: !!e.style.cssFloat,
            checkOn: i.value === "on",
            optSelected: h.selected,
            getSetAttribute: q.className !== "t",
            enctype: !!c.createElement("form").enctype,
            html5Clone: c.createElement("nav").cloneNode(!0).outerHTML !== "<:nav></:nav>",
            submitBubbles: !0,
            changeBubbles: !0,
            focusinBubbles: !1,
            deleteExpando: !0,
            noCloneEvent: !0,
            inlineBlockNeedsLayout: !1,
            shrinkWrapBlocks: !1,
            reliableMarginRight: !0
        }, i.checked = !0, b.noCloneChecked = i.cloneNode(!0).checked, g.disabled = !0, b.optDisabled = !h.disabled;
        try {
            delete q.test
        } catch (s) {
            b.deleteExpando = !1
        }!q.addEventListener && q.attachEvent && q.fireEvent && (q.attachEvent("onclick", function() {
            b.noCloneEvent = !1
        }), q.cloneNode(!0).fireEvent("onclick")), i = c.createElement("input"), i.value = "t", i.setAttribute("type", "radio"), b.radioValue = i.value === "t", i.setAttribute("checked", "checked"), q.appendChild(i), k = c.createDocumentFragment(), k.appendChild(q.lastChild), b.checkClone = k.cloneNode(!0).cloneNode(!0).lastChild.checked, b.appendChecked = i.checked, k.removeChild(i), k.appendChild(q), q.innerHTML = "", a.getComputedStyle && (j = c.createElement("div"), j.style.width = "0", j.style.marginRight = "0", q.style.width = "2px", q.appendChild(j), b.reliableMarginRight = (parseInt((a.getComputedStyle(j, null) || {
            marginRight: 0
        }).marginRight, 10) || 0) === 0);
        if (q.attachEvent) {
            for (o in {
                    submit: 1,
                    change: 1,
                    focusin: 1
                }) {
                n = "on" + o, p = n in q, p || (q.setAttribute(n, "return;"), p = typeof q[n] == "function"), b[o + "Bubbles"] = p
            }
        }
        k.removeChild(q), k = g = h = j = q = i = null, f(function() {
            var a, d, e, g, h, i, j, k, m, n, o, r = c.getElementsByTagName("body")[0];
            !r || (j = 1, k = "position:absolute;top:0;left:0;width:1px;height:1px;margin:0;", m = "visibility:hidden;border:0;", n = "style='" + k + "border:5px solid #000;padding:0;'", o = "<div " + n + "><div></div></div><table " + n + " cellpadding='0' cellspacing='0'><tr><td></td></tr></table>", a = c.createElement("div"), a.style.cssText = m + "width:0;height:0;position:static;top:0;margin-top:" + j + "px", r.insertBefore(a, r.firstChild), q = c.createElement("div"), a.appendChild(q), q.innerHTML = "<table><tr><td style='padding:0;border:0;display:none'></td><td>t</td></tr></table>", l = q.getElementsByTagName("td"), p = l[0].offsetHeight === 0, l[0].style.display = "", l[1].style.display = "none", b.reliableHiddenOffsets = p && l[0].offsetHeight === 0, q.innerHTML = "", q.style.width = q.style.paddingLeft = "1px", f.boxModel = b.boxModel = q.offsetWidth === 2, typeof q.style.zoom != "" && (q.style.display = "inline", q.style.zoom = 1, b.inlineBlockNeedsLayout = q.offsetWidth === 2, q.style.display = "", q.innerHTML = "<div style='width:4px;'></div>", b.shrinkWrapBlocks = q.offsetWidth !== 2), q.style.cssText = k + m, q.innerHTML = o, d = q.firstChild, e = d.firstChild, h = d.nextSibling.firstChild.firstChild, i = {
                doesNotAddBorder: e.offsetTop !== 5,
                doesAddBorderForTableAndCells: h.offsetTop === 5
            }, e.style.position = "fixed", e.style.top = "20px", i.fixedPosition = e.offsetTop === 20 || e.offsetTop === 15, e.style.position = e.style.top = "", d.style.overflow = "hidden", d.style.position = "relative", i.subtractsBorderForOverflowNotVisible = e.offsetTop === -5, i.doesNotIncludeMarginInBodyOffset = r.offsetTop !== j, r.removeChild(a), q = a = null, f.extend(b, i))
        });
        return b
    }();
    var j = /^(?:\{.*\}|\[.*\])$/,
        k = /([A-Z])/g;
    f.extend({
        cache: {},
        uuid: 0,
        expando: "jQuery" + (f.fn.jquery + Math.random()).replace(/\D/g, ""),
        noData: {
            embed: !0,
            object: "clsid:D27CDB6E-AE6D-11cf-96B8-444553540000",
            applet: !0
        },
        hasData: function(a) {
            a = a.nodeType ? f.cache[a[f.expando]] : a[f.expando];
            return !!a && !m(a)
        },
        data: function(a, c, d, e) {
            if (!!f.acceptData(a)) {
                var g, h, i, j = f.expando,
                    k = typeof c == "string",
                    l = a.nodeType,
                    m = l ? f.cache : a,
                    n = l ? a[j] : a[j] && j,
                    o = c === "events";
                if ((!n || !m[n] || !o && !e && !m[n].data) && k && d === b) {
                    return
                }
                n || (l ? a[j] = n = ++f.uuid : n = j), m[n] || (m[n] = {}, l || (m[n].toJSON = f.noop));
                if (typeof c == "object" || typeof c == "function") {
                    e ? m[n] = f.extend(m[n], c) : m[n].data = f.extend(m[n].data, c)
                }
                g = h = m[n], e || (h.data || (h.data = {}), h = h.data), d !== b && (h[f.camelCase(c)] = d);
                if (o && !h[c]) {
                    return g.events
                }
                k ? (i = h[c], i == null && (i = h[f.camelCase(c)])) : i = h;
                return i
            }
        },
        removeData: function(a, b, c) {
            if (!!f.acceptData(a)) {
                var d, e, g, h = f.expando,
                    i = a.nodeType,
                    j = i ? f.cache : a,
                    k = i ? a[h] : h;
                if (!j[k]) {
                    return
                }
                if (b) {
                    d = c ? j[k] : j[k].data;
                    if (d) {
                        f.isArray(b) || (b in d ? b = [b] : (b = f.camelCase(b), b in d ? b = [b] : b = b.split(" ")));
                        for (e = 0, g = b.length; e < g; e++) {
                            delete d[b[e]]
                        }
                        if (!(c ? m : f.isEmptyObject)(d)) {
                            return
                        }
                    }
                }
                if (!c) {
                    delete j[k].data;
                    if (!m(j[k])) {
                        return
                    }
                }
                f.support.deleteExpando || !j.setInterval ? delete j[k] : j[k] = null, i && (f.support.deleteExpando ? delete a[h] : a.removeAttribute ? a.removeAttribute(h) : a[h] = null)
            }
        },
        _data: function(a, b, c) {
            return f.data(a, b, c, !0)
        },
        acceptData: function(a) {
            if (a.nodeName) {
                var b = f.noData[a.nodeName.toLowerCase()];
                if (b) {
                    return b !== !0 && a.getAttribute("classid") === b
                }
            }
            return !0
        }
    }), f.fn.extend({
        data: function(a, c) {
            var d, e, g, h = null;
            if (typeof a == "") {
                if (this.length) {
                    h = f.data(this[0]);
                    if (this[0].nodeType === 1 && !f._data(this[0], "parsedAttrs")) {
                        e = this[0].attributes;
                        for (var i = 0, j = e.length; i < j; i++) {
                            g = e[i].name, g.indexOf("data-") === 0 && (g = f.camelCase(g.substring(5)), l(this[0], g, h[g]))
                        }
                        f._data(this[0], "parsedAttrs", !0)
                    }
                }
                return h
            }
            if (typeof a == "object") {
                return this.each(function() {
                    f.data(this, a)
                })
            }
            d = a.split("."), d[1] = d[1] ? "." + d[1] : "";
            if (c === b) {
                h = this.triggerHandler("getData" + d[1] + "!", [d[0]]), h === b && this.length && (h = f.data(this[0], a), h = l(this[0], a, h));
                return h === b && d[1] ? this.data(d[0]) : h
            }
            return this.each(function() {
                var b = f(this),
                    e = [d[0], c];
                b.triggerHandler("setData" + d[1] + "!", e), f.data(this, a, c), b.triggerHandler("changeData" + d[1] + "!", e)
            })
        },
        removeData: function(a) {
            return this.each(function() {
                f.removeData(this, a)
            })
        }
    }), f.extend({
        _mark: function(a, b) {
            a && (b = (b || "fx") + "mark", f._data(a, b, (f._data(a, b) || 0) + 1))
        },
        _unmark: function(a, b, c) {
            a !== !0 && (c = b, b = a, a = !1);
            if (b) {
                c = c || "fx";
                var d = c + "mark",
                    e = a ? 0 : (f._data(b, d) || 1) - 1;
                e ? f._data(b, d, e) : (f.removeData(b, d, !0), n(b, c, "mark"))
            }
        },
        queue: function(a, b, c) {
            var d;
            if (a) {
                b = (b || "fx") + "queue", d = f._data(a, b), c && (!d || f.isArray(c) ? d = f._data(a, b, f.makeArray(c)) : d.push(c));
                return d || []
            }
        },
        dequeue: function(a, b) {
            b = b || "fx";
            var c = f.queue(a, b),
                d = c.shift(),
                e = {};
            d === "inprogress" && (d = c.shift()), d && (b === "fx" && c.unshift("inprogress"), f._data(a, b + ".run", e), d.call(a, function() {
                f.dequeue(a, b)
            }, e)), c.length || (f.removeData(a, b + "queue " + b + ".run", !0), n(a, b, "queue"))
        }
    }), f.fn.extend({
        queue: function(a, c) {
            typeof a != "string" && (c = a, a = "fx");
            if (c === b) {
                return f.queue(this[0], a)
            }
            return this.each(function() {
                var b = f.queue(this, a, c);
                a === "fx" && b[0] !== "inprogress" && f.dequeue(this, a)
            })
        },
        dequeue: function(a) {
            return this.each(function() {
                f.dequeue(this, a)
            })
        },
        delay: function(a, b) {
            a = f.fx ? f.fx.speeds[a] || a : a, b = b || "fx";
            return this.queue(b, function(b, c) {
                var d = setTimeout(b, a);
                c.stop = function() {
                    clearTimeout(d)
                }
            })
        },
        clearQueue: function(a) {
            return this.queue(a || "fx", [])
        },
        promise: function(a, c) {
            function m() {
                --h || d.resolveWith(e, [e])
            }
            typeof a != "string" && (c = a, a = b), a = a || "fx";
            var d = f.Deferred(),
                e = this,
                g = e.length,
                h = 1,
                i = a + "defer",
                j = a + "queue",
                k = a + "mark",
                l;
            while (g--) {
                if (l = f.data(e[g], i, b, !0) || (f.data(e[g], j, b, !0) || f.data(e[g], k, b, !0)) && f.data(e[g], i, f.Callbacks("once memory"), !0)) {
                    h++, l.add(m)
                }
            }
            m();
            return d.promise()
        }
    });
    var o = /[\n\t\r]/g,
        p = /\s+/,
        q = /\r/g,
        r = /^(?:button|input)$/i,
        s = /^(?:button|input|object|select|textarea)$/i,
        t = /^a(?:rea)?$/i,
        u = /^(?:autofocus|autoplay|async|checked|controls|defer|disabled|hidden|loop|multiple|open|readonly|required|scoped|selected)$/i,
        v = f.support.getSetAttribute,
        w, x, y;
    f.fn.extend({
        attr: function(a, b) {
            return f.access(this, a, b, !0, f.attr)
        },
        removeAttr: function(a) {
            return this.each(function() {
                f.removeAttr(this, a)
            })
        },
        prop: function(a, b) {
            return f.access(this, a, b, !0, f.prop)
        },
        removeProp: function(a) {
            a = f.propFix[a] || a;
            return this.each(function() {
                try {
                    this[a] = b, delete this[a]
                } catch (c) {}
            })
        },
        addClass: function(a) {
            var b, c, d, e, g, h, i;
            if (f.isFunction(a)) {
                return this.each(function(b) {
                    f(this).addClass(a.call(this, b, this.className))
                })
            }
            if (a && typeof a == "string") {
                b = a.split(p);
                for (c = 0, d = this.length; c < d; c++) {
                    e = this[c];
                    if (e.nodeType === 1) {
                        if (!e.className && b.length === 1) {
                            e.className = a
                        } else {
                            g = " " + e.className + " ";
                            for (h = 0, i = b.length; h < i; h++) {
                                ~g.indexOf(" " + b[h] + " ") || (g += b[h] + " ")
                            }
                            e.className = f.trim(g)
                        }
                    }
                }
            }
            return this
        },
        removeClass: function(a) {
            var c, d, e, g, h, i, j;
            if (f.isFunction(a)) {
                return this.each(function(b) {
                    f(this).removeClass(a.call(this, b, this.className))
                })
            }
            if (a && typeof a == "string" || a === b) {
                c = (a || "").split(p);
                for (d = 0, e = this.length; d < e; d++) {
                    g = this[d];
                    if (g.nodeType === 1 && g.className) {
                        if (a) {
                            h = (" " + g.className + " ").replace(o, " ");
                            for (i = 0, j = c.length; i < j; i++) {
                                h = h.replace(" " + c[i] + " ", " ")
                            }
                            g.className = f.trim(h)
                        } else {
                            g.className = ""
                        }
                    }
                }
            }
            return this
        },
        toggleClass: function(a, b) {
            var c = typeof a,
                d = typeof b == "boolean";
            if (f.isFunction(a)) {
                return this.each(function(c) {
                    f(this).toggleClass(a.call(this, c, this.className, b), b)
                })
            }
            return this.each(function() {
                if (c === "string") {
                    var e, g = 0,
                        h = f(this),
                        i = b,
                        j = a.split(p);
                    while (e = j[g++]) {
                        i = d ? i : !h.hasClass(e), h[i ? "addClass" : "removeClass"](e)
                    }
                } else {
                    if (c === "" || c === "boolean") {
                        this.className && f._data(this, "__className__", this.className), this.className = this.className || a === !1 ? "" : f._data(this, "__className__") || ""
                    }
                }
            })
        },
        hasClass: function(a) {
            var b = " " + a + " ",
                c = 0,
                d = this.length;
            for (; c < d; c++) {
                if (this[c].nodeType === 1 && (" " + this[c].className + " ").replace(o, " ").indexOf(b) > -1) {
                    return !0
                }
            }
            return !1
        },
        val: function(a) {
            var c, d, e, g = this[0];
            if (!!arguments.length) {
                e = f.isFunction(a);
                return this.each(function(d) {
                    var g = f(this),
                        h;
                    if (this.nodeType === 1) {
                        e ? h = a.call(this, d, g.val()) : h = a, h == null ? h = "" : typeof h == "number" ? h += "" : f.isArray(h) && (h = f.map(h, function(a) {
                            return a == null ? "" : a + ""
                        })), c = f.valHooks[this.nodeName.toLowerCase()] || f.valHooks[this.type];
                        if (!c || !("set" in c) || c.set(this, h, "value") === b) {
                            this.value = h
                        }
                    }
                })
            }
            if (g) {
                c = f.valHooks[g.nodeName.toLowerCase()] || f.valHooks[g.type];
                if (c && "get" in c && (d = c.get(g, "value")) !== b) {
                    return d
                }
                d = g.value;
                return typeof d == "string" ? d.replace(q, "") : d == null ? "" : d
            }
        }
    }), f.extend({
        valHooks: {
            option: {
                get: function(a) {
                    var b = a.attributes.value;
                    return !b || b.specified ? a.value : a.text
                }
            },
            select: {
                get: function(a) {
                    var b, c, d, e, g = a.selectedIndex,
                        h = [],
                        i = a.options,
                        j = a.type === "select-one";
                    if (g < 0) {
                        return null
                    }
                    c = j ? g : 0, d = j ? g + 1 : i.length;
                    for (; c < d; c++) {
                        e = i[c];
                        if (e.selected && (f.support.optDisabled ? !e.disabled : e.getAttribute("disabled") === null) && (!e.parentNode.disabled || !f.nodeName(e.parentNode, "optgroup"))) {
                            b = f(e).val();
                            if (j) {
                                return b
                            }
                            h.push(b)
                        }
                    }
                    if (j && !h.length && i.length) {
                        return f(i[g]).val()
                    }
                    return h
                },
                set: function(a, b) {
                    var c = f.makeArray(b);
                    f(a).find("option").each(function() {
                        this.selected = f.inArray(f(this).val(), c) >= 0
                    }), c.length || (a.selectedIndex = -1);
                    return c
                }
            }
        },
        attrFn: {
            val: !0,
            css: !0,
            html: !0,
            text: !0,
            data: !0,
            width: !0,
            height: !0,
            offset: !0
        },
        attr: function(a, c, d, e) {
            var g, h, i, j = a.nodeType;
            if (!!a && j !== 3 && j !== 8 && j !== 2) {
                if (e && c in f.attrFn) {
                    return f(a)[c](d)
                }
                if (typeof a.getAttribute == "") {
                    return f.prop(a, c, d)
                }
                i = j !== 1 || !f.isXMLDoc(a), i && (c = c.toLowerCase(), h = f.attrHooks[c] || (u.test(c) ? x : w));
                if (d !== b) {
                    if (d === null) {
                        f.removeAttr(a, c);
                        return
                    }
                    if (h && "set" in h && i && (g = h.set(a, d, c)) !== b) {
                        return g
                    }
                    a.setAttribute(c, "" + d);
                    return d
                }
                if (h && "get" in h && i && (g = h.get(a, c)) !== null) {
                    return g
                }
                g = a.getAttribute(c);
                return g === null ? b : g
            }
        },
        removeAttr: function(a, b) {
            var c, d, e, g, h = 0;
            if (b && a.nodeType === 1) {
                d = b.toLowerCase().split(p), g = d.length;
                for (; h < g; h++) {
                    e = d[h], e && (c = f.propFix[e] || e, f.attr(a, e, ""), a.removeAttribute(v ? e : c), u.test(e) && c in a && (a[c] = !1))
                }
            }
        },
        attrHooks: {
            type: {
                set: function(a, b) {
                    if (r.test(a.nodeName) && a.parentNode) {
                        f.error("type property can't be changed")
                    } else {
                        if (!f.support.radioValue && b === "radio" && f.nodeName(a, "input")) {
                            var c = a.value;
                            a.setAttribute("type", b), c && (a.value = c);
                            return b
                        }
                    }
                }
            },
            value: {
                get: function(a, b) {
                    if (w && f.nodeName(a, "button")) {
                        return w.get(a, b)
                    }
                    return b in a ? a.value : null
                },
                set: function(a, b, c) {
                    if (w && f.nodeName(a, "button")) {
                        return w.set(a, b, c)
                    }
                    a.value = b
                }
            }
        },
        propFix: {
            tabindex: "tabIndex",
            readonly: "readOnly",
            "for": "htmlFor",
            "class": "className",
            maxlength: "maxLength",
            cellspacing: "cellSpacing",
            cellpadding: "cellPadding",
            rowspan: "rowSpan",
            colspan: "colSpan",
            usemap: "useMap",
            frameborder: "frameBorder",
            contenteditable: "contentEditable"
        },
        prop: function(a, c, d) {
            var e, g, h, i = a.nodeType;
            if (!!a && i !== 3 && i !== 8 && i !== 2) {
                h = i !== 1 || !f.isXMLDoc(a), h && (c = f.propFix[c] || c, g = f.propHooks[c]);
                return d !== b ? g && "set" in g && (e = g.set(a, d, c)) !== b ? e : a[c] = d : g && "get" in g && (e = g.get(a, c)) !== null ? e : a[c]
            }
        },
        propHooks: {
            tabIndex: {
                get: function(a) {
                    var c = a.getAttributeNode("tabindex");
                    return c && c.specified ? parseInt(c.value, 10) : s.test(a.nodeName) || t.test(a.nodeName) && a.href ? 0 : b
                }
            }
        }
    }), f.attrHooks.tabindex = f.propHooks.tabIndex, x = {
        get: function(a, c) {
            var d, e = f.prop(a, c);
            return e === !0 || typeof e != "boolean" && (d = a.getAttributeNode(c)) && d.nodeValue !== !1 ? c.toLowerCase() : b
        },
        set: function(a, b, c) {
            var d;
            b === !1 ? f.removeAttr(a, c) : (d = f.propFix[c] || c, d in a && (a[d] = !0), a.setAttribute(c, c.toLowerCase()));
            return c
        }
    }, v || (y = {
        name: !0,
        id: !0
    }, w = f.valHooks.button = {
        get: function(a, c) {
            var d;
            d = a.getAttributeNode(c);
            return d && (y[c] ? d.nodeValue !== "" : d.specified) ? d.nodeValue : b
        },
        set: function(a, b, d) {
            var e = a.getAttributeNode(d);
            e || (e = c.createAttribute(d), a.setAttributeNode(e));
            return e.nodeValue = b + ""
        }
    }, f.attrHooks.tabindex.set = w.set, f.each(["width", "height"], function(a, b) {
        f.attrHooks[b] = f.extend(f.attrHooks[b], {
            set: function(a, c) {
                if (c === "") {
                    a.setAttribute(b, "auto");
                    return c
                }
            }
        })
    }), f.attrHooks.contenteditable = {
        get: w.get,
        set: function(a, b, c) {
            b === "" && (b = "false"), w.set(a, b, c)
        }
    }), f.support.hrefNormalized || f.each(["href", "src", "width", "height"], function(a, c) {
        f.attrHooks[c] = f.extend(f.attrHooks[c], {
            get: function(a) {
                var d = a.getAttribute(c, 2);
                return d === null ? b : d
            }
        })
    }), f.support.style || (f.attrHooks.style = {
        get: function(a) {
            return a.style.cssText.toLowerCase() || b
        },
        set: function(a, b) {
            return a.style.cssText = "" + b
        }
    }), f.support.optSelected || (f.propHooks.selected = f.extend(f.propHooks.selected, {
        get: function(a) {
            var b = a.parentNode;
            b && (b.selectedIndex, b.parentNode && b.parentNode.selectedIndex);
            return null
        }
    })), f.support.enctype || (f.propFix.enctype = "encoding"), f.support.checkOn || f.each(["radio", "checkbox"], function() {
        f.valHooks[this] = {
            get: function(a) {
                return a.getAttribute("value") === null ? "on" : a.value
            }
        }
    }), f.each(["radio", "checkbox"], function() {
        f.valHooks[this] = f.extend(f.valHooks[this], {
            set: function(a, b) {
                if (f.isArray(b)) {
                    return a.checked = f.inArray(f(a).val(), b) >= 0
                }
            }
        })
    });
    var z = /^(?:textarea|input|select)$/i,
        A = /^([^\.]*)?(?:\.(.+))?$/,
        B = /\bhover(\.\S+)?\b/,
        C = /^key/,
        D = /^(?:mouse|contextmenu)|click/,
        E = /^(?:focusinfocus|focusoutblur)$/,
        F = /^(\w*)(?:#([\w\-]+))?(?:\.([\w\-]+))?$/,
        G = function(a) {
            var b = F.exec(a);
            b && (b[1] = (b[1] || "").toLowerCase(), b[3] = b[3] && new RegExp("(?:^|\\s)" + b[3] + "(?:\\s|$)"));
            return b
        },
        H = function(a, b) {
            var c = a.attributes || {};
            return (!b[1] || a.nodeName.toLowerCase() === b[1]) && (!b[2] || (c.id || {}).value === b[2]) && (!b[3] || b[3].test((c["class"] || {}).value))
        },
        I = function(a) {
            return f.event.special.hover ? a : a.replace(B, "mouseenter$1 mouseleave$1")
        };
    f.event = {
            add: function(a, c, d, e, g) {
                var h, i, j, k, l, m, n, o, p, q, r, s;
                if (!(a.nodeType === 3 || a.nodeType === 8 || !c || !d || !(h = f._data(a)))) {
                    d.handler && (p = d, d = p.handler), d.guid || (d.guid = f.guid++), j = h.events, j || (h.events = j = {}), i = h.handle, i || (h.handle = i = function(a) {
                        return typeof f != "" && (!a || f.event.triggered !== a.type) ? f.event.dispatch.apply(i.elem, arguments) : b
                    }, i.elem = a), c = f.trim(I(c)).split(" ");
                    for (k = 0; k < c.length; k++) {
                        l = A.exec(c[k]) || [], m = l[1], n = (l[2] || "").split(".").sort(), s = f.event.special[m] || {}, m = (g ? s.delegateType : s.bindType) || m, s = f.event.special[m] || {}, o = f.extend({
                            type: m,
                            origType: l[1],
                            data: e,
                            handler: d,
                            guid: d.guid,
                            selector: g,
                            quick: G(g),
                            namespace: n.join(".")
                        }, p), r = j[m];
                        if (!r) {
                            r = j[m] = [], r.delegateCount = 0;
                            if (!s.setup || s.setup.call(a, e, n, i) === !1) {
                                a.addEventListener ? a.addEventListener(m, i, !1) : a.attachEvent && a.attachEvent("on" + m, i)
                            }
                        }
                        s.add && (s.add.call(a, o), o.handler.guid || (o.handler.guid = d.guid)), g ? r.splice(r.delegateCount++, 0, o) : r.push(o), f.event.global[m] = !0
                    }
                    a = null
                }
            },
            global: {},
            remove: function(a, b, c, d, e) {
                var g = f.hasData(a) && f._data(a),
                    h, i, j, k, l, m, n, o, p, q, r, s;
                if (!!g && !!(o = g.events)) {
                    b = f.trim(I(b || "")).split(" ");
                    for (h = 0; h < b.length; h++) {
                        i = A.exec(b[h]) || [], j = k = i[1], l = i[2];
                        if (!j) {
                            for (j in o) {
                                f.event.remove(a, j + b[h], c, d, !0)
                            }
                            continue
                        }
                        p = f.event.special[j] || {}, j = (d ? p.delegateType : p.bindType) || j, r = o[j] || [], m = r.length, l = l ? new RegExp("(^|\\.)" + l.split(".").sort().join("\\.(?:.*\\.)?") + "(\\.|$)") : null;
                        for (n = 0; n < r.length; n++) {
                            s = r[n], (e || k === s.origType) && (!c || c.guid === s.guid) && (!l || l.test(s.namespace)) && (!d || d === s.selector || d === "**" && s.selector) && (r.splice(n--, 1), s.selector && r.delegateCount--, p.remove && p.remove.call(a, s))
                        }
                        r.length === 0 && m !== r.length && ((!p.teardown || p.teardown.call(a, l) === !1) && f.removeEvent(a, j, g.handle), delete o[j])
                    }
                    f.isEmptyObject(o) && (q = g.handle, q && (q.elem = null), f.removeData(a, ["events", "handle"], !0))
                }
            },
            customEvent: {
                getData: !0,
                setData: !0,
                changeData: !0
            },
            trigger: function(c, d, e, g) {
                if (!e || e.nodeType !== 3 && e.nodeType !== 8) {
                    var h = c.type || c,
                        i = [],
                        j, k, l, m, n, o, p, q, r, s;
                    if (E.test(h + f.event.triggered)) {
                        return
                    }
                    h.indexOf("!") >= 0 && (h = h.slice(0, -1), k = !0), h.indexOf(".") >= 0 && (i = h.split("."), h = i.shift(), i.sort());
                    if ((!e || f.event.customEvent[h]) && !f.event.global[h]) {
                        return
                    }
                    c = typeof c == "object" ? c[f.expando] ? c : new f.Event(h, c) : new f.Event(h), c.type = h, c.isTrigger = !0, c.exclusive = k, c.namespace = i.join("."), c.namespace_re = c.namespace ? new RegExp("(^|\\.)" + i.join("\\.(?:.*\\.)?") + "(\\.|$)") : null, o = h.indexOf(":") < 0 ? "on" + h : "";
                    if (!e) {
                        j = f.cache;
                        for (l in j) {
                            j[l].events && j[l].events[h] && f.event.trigger(c, d, j[l].handle.elem, !0)
                        }
                        return
                    }
                    c.result = b, c.target || (c.target = e), d = d != null ? f.makeArray(d) : [], d.unshift(c), p = f.event.special[h] || {};
                    if (p.trigger && p.trigger.apply(e, d) === !1) {
                        return
                    }
                    r = [
                        [e, p.bindType || h]
                    ];
                    if (!g && !p.noBubble && !f.isWindow(e)) {
                        s = p.delegateType || h, m = E.test(s + h) ? e : e.parentNode, n = null;
                        for (; m; m = m.parentNode) {
                            r.push([m, s]), n = m
                        }
                        n && n === e.ownerDocument && r.push([n.defaultView || n.parentWindow || a, s])
                    }
                    for (l = 0; l < r.length && !c.isPropagationStopped(); l++) {
                        m = r[l][0], c.type = r[l][1], q = (f._data(m, "events") || {})[c.type] && f._data(m, "handle"), q && q.apply(m, d), q = o && m[o], q && f.acceptData(m) && q.apply(m, d) === !1 && c.preventDefault()
                    }
                    c.type = h, !g && !c.isDefaultPrevented() && (!p._default || p._default.apply(e.ownerDocument, d) === !1) && (h !== "click" || !f.nodeName(e, "a")) && f.acceptData(e) && o && e[h] && (h !== "focus" && h !== "blur" || c.target.offsetWidth !== 0) && !f.isWindow(e) && (n = e[o], n && (e[o] = null), f.event.triggered = h, e[h](), f.event.triggered = b, n && (e[o] = n));
                    return c.result
                }
            },
            dispatch: function(c) {
                c = f.event.fix(c || a.event);
                var d = (f._data(this, "events") || {})[c.type] || [],
                    e = d.delegateCount,
                    g = [].slice.call(arguments, 0),
                    h = !c.exclusive && !c.namespace,
                    i = [],
                    j, k, l, m, n, o, p, q, r, s, t;
                g[0] = c, c.delegateTarget = this;
                if (e && !c.target.disabled && (!c.button || c.type !== "click")) {
                    m = f(this), m.context = this.ownerDocument || this;
                    for (l = c.target; l != this; l = l.parentNode || this) {
                        o = {}, q = [], m[0] = l;
                        for (j = 0; j < e; j++) {
                            r = d[j], s = r.selector, o[s] === b && (o[s] = r.quick ? H(l, r.quick) : m.is(s)), o[s] && q.push(r)
                        }
                        q.length && i.push({
                            elem: l,
                            matches: q
                        })
                    }
                }
                d.length > e && i.push({
                    elem: this,
                    matches: d.slice(e)
                });
                for (j = 0; j < i.length && !c.isPropagationStopped(); j++) {
                    p = i[j], c.currentTarget = p.elem;
                    for (k = 0; k < p.matches.length && !c.isImmediatePropagationStopped(); k++) {
                        r = p.matches[k];
                        if (h || !c.namespace && !r.namespace || c.namespace_re && c.namespace_re.test(r.namespace)) {
                            c.data = r.data, c.handleObj = r, n = ((f.event.special[r.origType] || {}).handle || r.handler).apply(p.elem, g), n !== b && (c.result = n, n === !1 && (c.preventDefault(), c.stopPropagation()))
                        }
                    }
                }
                return c.result
            },
            props: "attrChange attrName relatedNode srcElement altKey bubbles cancelable ctrlKey currentTarget eventPhase metaKey relatedTarget shiftKey target timeStamp view which".split(" "),
            fixHooks: {},
            keyHooks: {
                props: "char charCode key keyCode".split(" "),
                filter: function(a, b) {
                    a.which == null && (a.which = b.charCode != null ? b.charCode : b.keyCode);
                    return a
                }
            },
            mouseHooks: {
                props: "button buttons clientX clientY fromElement offsetX offsetY pageX pageY screenX screenY toElement".split(" "),
                filter: function(a, d) {
                    var e, f, g, h = d.button,
                        i = d.fromElement;
                    a.pageX == null && d.clientX != null && (e = a.target.ownerDocument || c, f = e.documentElement, g = e.body, a.pageX = d.clientX + (f && f.scrollLeft || g && g.scrollLeft || 0) - (f && f.clientLeft || g && g.clientLeft || 0), a.pageY = d.clientY + (f && f.scrollTop || g && g.scrollTop || 0) - (f && f.clientTop || g && g.clientTop || 0)), !a.relatedTarget && i && (a.relatedTarget = i === a.target ? d.toElement : i), !a.which && h !== b && (a.which = h & 1 ? 1 : h & 2 ? 3 : h & 4 ? 2 : 0);
                    return a
                }
            },
            fix: function(a) {
                if (a[f.expando]) {
                    return a
                }
                var d, e, g = a,
                    h = f.event.fixHooks[a.type] || {},
                    i = h.props ? this.props.concat(h.props) : this.props;
                a = f.Event(g);
                for (d = i.length; d;) {
                    e = i[--d], a[e] = g[e]
                }
                a.target || (a.target = g.srcElement || c), a.target.nodeType === 3 && (a.target = a.target.parentNode), a.metaKey === b && (a.metaKey = a.ctrlKey);
                return h.filter ? h.filter(a, g) : a
            },
            special: {
                ready: {
                    setup: f.bindReady
                },
                load: {
                    noBubble: !0
                },
                focus: {
                    delegateType: "focusin"
                },
                blur: {
                    delegateType: "focusout"
                },
                beforeunload: {
                    setup: function(a, b, c) {
                        f.isWindow(this) && (this.onbeforeunload = c)
                    },
                    teardown: function(a, b) {
                        this.onbeforeunload === b && (this.onbeforeunload = null)
                    }
                }
            },
            simulate: function(a, b, c, d) {
                var e = f.extend(new f.Event, c, {
                    type: a,
                    isSimulated: !0,
                    originalEvent: {}
                });
                d ? f.event.trigger(e, null, b) : f.event.dispatch.call(b, e), e.isDefaultPrevented() && c.preventDefault()
            }
        }, f.event.handle = f.event.dispatch, f.removeEvent = c.removeEventListener ? function(a, b, c) {
            a.removeEventListener && a.removeEventListener(b, c, !1)
        } : function(a, b, c) {
            a.detachEvent && a.detachEvent("on" + b, c)
        }, f.Event = function(a, b) {
            if (!(this instanceof f.Event)) {
                return new f.Event(a, b)
            }
            a && a.type ? (this.originalEvent = a, this.type = a.type, this.isDefaultPrevented = a.defaultPrevented || a.returnValue === !1 || a.getPreventDefault && a.getPreventDefault() ? K : J) : this.type = a, b && f.extend(this, b), this.timeStamp = a && a.timeStamp || f.now(), this[f.expando] = !0
        }, f.Event.prototype = {
            preventDefault: function() {
                this.isDefaultPrevented = K;
                var a = this.originalEvent;
                !a || (a.preventDefault ? a.preventDefault() : a.returnValue = !1)
            },
            stopPropagation: function() {
                this.isPropagationStopped = K;
                var a = this.originalEvent;
                !a || (a.stopPropagation && a.stopPropagation(), a.cancelBubble = !0)
            },
            stopImmediatePropagation: function() {
                this.isImmediatePropagationStopped = K, this.stopPropagation()
            },
            isDefaultPrevented: J,
            isPropagationStopped: J,
            isImmediatePropagationStopped: J
        }, f.each({
            mouseenter: "mouseover",
            mouseleave: "mouseout"
        }, function(a, b) {
            f.event.special[a] = {
                delegateType: b,
                bindType: b,
                handle: function(a) {
                    var c = this,
                        d = a.relatedTarget,
                        e = a.handleObj,
                        g = e.selector,
                        h;
                    if (!d || d !== c && !f.contains(c, d)) {
                        a.type = e.origType, h = e.handler.apply(this, arguments), a.type = b
                    }
                    return h
                }
            }
        }), f.support.submitBubbles || (f.event.special.submit = {
            setup: function() {
                if (f.nodeName(this, "form")) {
                    return !1
                }
                f.event.add(this, "click._submit keypress._submit", function(a) {
                    var c = a.target,
                        d = f.nodeName(c, "input") || f.nodeName(c, "button") ? c.form : b;
                    d && !d._submit_attached && (f.event.add(d, "submit._submit", function(a) {
                        this.parentNode && !a.isTrigger && f.event.simulate("submit", this.parentNode, a, !0)
                    }), d._submit_attached = !0)
                })
            },
            teardown: function() {
                if (f.nodeName(this, "form")) {
                    return !1
                }
                f.event.remove(this, "._submit")
            }
        }), f.support.changeBubbles || (f.event.special.change = {
            setup: function() {
                if (z.test(this.nodeName)) {
                    if (this.type === "checkbox" || this.type === "radio") {
                        f.event.add(this, "propertychange._change", function(a) {
                            a.originalEvent.propertyName === "checked" && (this._just_changed = !0)
                        }), f.event.add(this, "click._change", function(a) {
                            this._just_changed && !a.isTrigger && (this._just_changed = !1, f.event.simulate("change", this, a, !0))
                        })
                    }
                    return !1
                }
                f.event.add(this, "beforeactivate._change", function(a) {
                    var b = a.target;
                    z.test(b.nodeName) && !b._change_attached && (f.event.add(b, "change._change", function(a) {
                        this.parentNode && !a.isSimulated && !a.isTrigger && f.event.simulate("change", this.parentNode, a, !0)
                    }), b._change_attached = !0)
                })
            },
            handle: function(a) {
                var b = a.target;
                if (this !== b || a.isSimulated || a.isTrigger || b.type !== "radio" && b.type !== "checkbox") {
                    return a.handleObj.handler.apply(this, arguments)
                }
            },
            teardown: function() {
                f.event.remove(this, "._change");
                return z.test(this.nodeName)
            }
        }), f.support.focusinBubbles || f.each({
            focus: "focusin",
            blur: "focusout"
        }, function(a, b) {
            var d = 0,
                e = function(a) {
                    f.event.simulate(b, a.target, f.event.fix(a), !0)
                };
            f.event.special[b] = {
                setup: function() {
                    d++ === 0 && c.addEventListener(a, e, !0)
                },
                teardown: function() {
                    --d === 0 && c.removeEventListener(a, e, !0)
                }
            }
        }), f.fn.extend({
            on: function(a, c, d, e, g) {
                var h, i;
                if (typeof a == "object") {
                    typeof c != "string" && (d = c, c = b);
                    for (i in a) {
                        this.on(i, c, d, a[i], g)
                    }
                    return this
                }
                d == null && e == null ? (e = c, d = c = b) : e == null && (typeof c == "string" ? (e = d, d = b) : (e = d, d = c, c = b));
                if (e === !1) {
                    e = J
                } else {
                    if (!e) {
                        return this
                    }
                }
                g === 1 && (h = e, e = function(a) {
                    f().off(a);
                    return h.apply(this, arguments)
                }, e.guid = h.guid || (h.guid = f.guid++));
                return this.each(function() {
                    f.event.add(this, a, e, d, c)
                })
            },
            one: function(a, b, c, d) {
                return this.on.call(this, a, b, c, d, 1)
            },
            off: function(a, c, d) {
                if (a && a.preventDefault && a.handleObj) {
                    var e = a.handleObj;
                    f(a.delegateTarget).off(e.namespace ? e.type + "." + e.namespace : e.type, e.selector, e.handler);
                    return this
                }
                if (typeof a == "object") {
                    for (var g in a) {
                        this.off(g, c, a[g])
                    }
                    return this
                }
                if (c === !1 || typeof c == "function") {
                    d = c, c = b
                }
                d === !1 && (d = J);
                return this.each(function() {
                    f.event.remove(this, a, d, c)
                })
            },
            bind: function(a, b, c) {
                return this.on(a, null, b, c)
            },
            unbind: function(a, b) {
                return this.off(a, null, b)
            },
            live: function(a, b, c) {
                f(this.context).on(a, this.selector, b, c);
                return this
            },
            die: function(a, b) {
                f(this.context).off(a, this.selector || "**", b);
                return this
            },
            delegate: function(a, b, c, d) {
                return this.on(b, a, c, d)
            },
            undelegate: function(a, b, c) {
                return arguments.length == 1 ? this.off(a, "**") : this.off(b, a, c)
            },
            trigger: function(a, b) {
                return this.each(function() {
                    f.event.trigger(a, b, this)
                })
            },
            triggerHandler: function(a, b) {
                if (this[0]) {
                    return f.event.trigger(a, b, this[0], !0)
                }
            },
            toggle: function(a) {
                var b = arguments,
                    c = a.guid || f.guid++,
                    d = 0,
                    e = function(c) {
                        var e = (f._data(this, "lastToggle" + a.guid) || 0) % d;
                        f._data(this, "lastToggle" + a.guid, e + 1), c.preventDefault();
                        return b[e].apply(this, arguments) || !1
                    };
                e.guid = c;
                while (d < b.length) {
                    b[d++].guid = c
                }
                return this.click(e)
            },
            hover: function(a, b) {
                return this.mouseenter(a).mouseleave(b || a)
            }
        }), f.each("blur focus focusin focusout load resize scroll unload click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup error contextmenu".split(" "), function(a, b) {
            f.fn[b] = function(a, c) {
                c == null && (c = a, a = null);
                return arguments.length > 0 ? this.on(b, null, a, c) : this.trigger(b)
            }, f.attrFn && (f.attrFn[b] = !0), C.test(b) && (f.event.fixHooks[b] = f.event.keyHooks), D.test(b) && (f.event.fixHooks[b] = f.event.mouseHooks)
        }),
        function() {
            function x(a, b, c, e, f, g) {
                for (var h = 0, i = e.length; h < i; h++) {
                    var j = e[h];
                    if (j) {
                        var k = !1;
                        j = j[a];
                        while (j) {
                            if (j[d] === c) {
                                k = e[j.sizset];
                                break
                            }
                            if (j.nodeType === 1) {
                                g || (j[d] = c, j.sizset = h);
                                if (typeof b != "string") {
                                    if (j === b) {
                                        k = !0;
                                        break
                                    }
                                } else {
                                    if (m.filter(b, [j]).length > 0) {
                                        k = j;
                                        break
                                    }
                                }
                            }
                            j = j[a]
                        }
                        e[h] = k
                    }
                }
            }

            function w(a, b, c, e, f, g) {
                for (var h = 0, i = e.length; h < i; h++) {
                    var j = e[h];
                    if (j) {
                        var k = !1;
                        j = j[a];
                        while (j) {
                            if (j[d] === c) {
                                k = e[j.sizset];
                                break
                            }
                            j.nodeType === 1 && !g && (j[d] = c, j.sizset = h);
                            if (j.nodeName.toLowerCase() === b) {
                                k = j;
                                break
                            }
                            j = j[a]
                        }
                        e[h] = k
                    }
                }
            }
            var a = /((?:\((?:\([^()]+\)|[^()]+)+\)|\[(?:\[[^\[\]]*\]|['"][^'"]*['"]|[^\[\]'"]+)+\]|\\.|[^ >+~,(\[\\]+)+|[>+~])(\s*,\s*)?((?:.|\r|\n)*)/g,
                d = "sizcache" + (Math.random() + "").replace(".", ""),
                e = 0,
                g = Object.prototype.toString,
                h = !1,
                i = !0,
                j = /\\/g,
                k = /\r\n/g,
                l = /\W/;
            [0, 0].sort(function() {
                i = !1;
                return 0
            });
            var m = function(b, d, e, f) {
                e = e || [], d = d || c;
                var h = d;
                if (d.nodeType !== 1 && d.nodeType !== 9) {
                    return []
                }
                if (!b || typeof b != "string") {
                    return e
                }
                var i, j, k, l, n, q, r, t, u = !0,
                    v = m.isXML(d),
                    w = [],
                    x = b;
                do {
                    a.exec(""), i = a.exec(x);
                    if (i) {
                        x = i[3], w.push(i[1]);
                        if (i[2]) {
                            l = i[3];
                            break
                        }
                    }
                } while (i);
                if (w.length > 1 && p.exec(b)) {
                    if (w.length === 2 && o.relative[w[0]]) {
                        j = y(w[0] + w[1], d, f)
                    } else {
                        j = o.relative[w[0]] ? [d] : m(w.shift(), d);
                        while (w.length) {
                            b = w.shift(), o.relative[b] && (b += w.shift()), j = y(b, j, f)
                        }
                    }
                } else {
                    !f && w.length > 1 && d.nodeType === 9 && !v && o.match.ID.test(w[0]) && !o.match.ID.test(w[w.length - 1]) && (n = m.find(w.shift(), d, v), d = n.expr ? m.filter(n.expr, n.set)[0] : n.set[0]);
                    if (d) {
                        n = f ? {
                            expr: w.pop(),
                            set: s(f)
                        } : m.find(w.pop(), w.length === 1 && (w[0] === "~" || w[0] === "+") && d.parentNode ? d.parentNode : d, v), j = n.expr ? m.filter(n.expr, n.set) : n.set, w.length > 0 ? k = s(j) : u = !1;
                        while (w.length) {
                            q = w.pop(), r = q, o.relative[q] ? r = w.pop() : q = "", r == null && (r = d), o.relative[q](k, r, v)
                        }
                    } else {
                        k = w = []
                    }
                }
                k || (k = j), k || m.error(q || b);
                if (g.call(k) === "[object Array]") {
                    if (!u) {
                        e.push.apply(e, k)
                    } else {
                        if (d && d.nodeType === 1) {
                            for (t = 0; k[t] != null; t++) {
                                k[t] && (k[t] === !0 || k[t].nodeType === 1 && m.contains(d, k[t])) && e.push(j[t])
                            }
                        } else {
                            for (t = 0; k[t] != null; t++) {
                                k[t] && k[t].nodeType === 1 && e.push(j[t])
                            }
                        }
                    }
                } else {
                    s(k, e)
                }
                l && (m(l, h, e, f), m.uniqueSort(e));
                return e
            };
            m.uniqueSort = function(a) {
                if (u) {
                    h = i, a.sort(u);
                    if (h) {
                        for (var b = 1; b < a.length; b++) {
                            a[b] === a[b - 1] && a.splice(b--, 1)
                        }
                    }
                }
                return a
            }, m.matches = function(a, b) {
                return m(a, null, null, b)
            }, m.matchesSelector = function(a, b) {
                return m(b, null, null, [a]).length > 0
            }, m.find = function(a, b, c) {
                var d, e, f, g, h, i;
                if (!a) {
                    return []
                }
                for (e = 0, f = o.order.length; e < f; e++) {
                    h = o.order[e];
                    if (g = o.leftMatch[h].exec(a)) {
                        i = g[1], g.splice(1, 1);
                        if (i.substr(i.length - 1) !== "\\") {
                            g[1] = (g[1] || "").replace(j, ""), d = o.find[h](g, b, c);
                            if (d != null) {
                                a = a.replace(o.match[h], "");
                                break
                            }
                        }
                    }
                }
                d || (d = typeof b.getElementsByTagName != "" ? b.getElementsByTagName("*") : []);
                return {
                    set: d,
                    expr: a
                }
            }, m.filter = function(a, c, d, e) {
                var f, g, h, i, j, k, l, n, p, q = a,
                    r = [],
                    s = c,
                    t = c && c[0] && m.isXML(c[0]);
                while (a && c.length) {
                    for (h in o.filter) {
                        if ((f = o.leftMatch[h].exec(a)) != null && f[2]) {
                            k = o.filter[h], l = f[1], g = !1, f.splice(1, 1);
                            if (l.substr(l.length - 1) === "\\") {
                                continue
                            }
                            s === r && (r = []);
                            if (o.preFilter[h]) {
                                f = o.preFilter[h](f, s, d, r, e, t);
                                if (!f) {
                                    g = i = !0
                                } else {
                                    if (f === !0) {
                                        continue
                                    }
                                }
                            }
                            if (f) {
                                for (n = 0;
                                    (j = s[n]) != null; n++) {
                                    j && (i = k(j, f, n, s), p = e ^ i, d && i != null ? p ? g = !0 : s[n] = !1 : p && (r.push(j), g = !0))
                                }
                            }
                            if (i !== b) {
                                d || (s = r), a = a.replace(o.match[h], "");
                                if (!g) {
                                    return []
                                }
                                break
                            }
                        }
                    }
                    if (a === q) {
                        if (g == null) {
                            m.error(a)
                        } else {
                            break
                        }
                    }
                    q = a
                }
                return s
            }, m.error = function(a) {
                throw new Error("Syntax error, unrecognized expression: " + a)
            };
            var n = m.getText = function(a) {
                    var b, c, d = a.nodeType,
                        e = "";
                    if (d) {
                        if (d === 1 || d === 9) {
                            if (typeof a.textContent == "string") {
                                return a.textContent
                            }
                            if (typeof a.innerText == "string") {
                                return a.innerText.replace(k, "")
                            }
                            for (a = a.firstChild; a; a = a.nextSibling) {
                                e += n(a)
                            }
                        } else {
                            if (d === 3 || d === 4) {
                                return a.nodeValue
                            }
                        }
                    } else {
                        for (b = 0; c = a[b]; b++) {
                            c.nodeType !== 8 && (e += n(c))
                        }
                    }
                    return e
                },
                o = m.selectors = {
                    order: ["ID", "NAME", "TAG"],
                    match: {
                        ID: /#((?:[\w\u00c0-\uFFFF\-]|\\.)+)/,
                        CLASS: /\.((?:[\w\u00c0-\uFFFF\-]|\\.)+)/,
                        NAME: /\[name=['"]*((?:[\w\u00c0-\uFFFF\-]|\\.)+)['"]*\]/,
                        ATTR: /\[\s*((?:[\w\u00c0-\uFFFF\-]|\\.)+)\s*(?:(\S?=)\s*(?:(['"])(.*?)\3|(#?(?:[\w\u00c0-\uFFFF\-]|\\.)*)|)|)\s*\]/,
                        TAG: /^((?:[\w\u00c0-\uFFFF\*\-]|\\.)+)/,
                        CHILD: /:(only|nth|last|first)-child(?:\(\s*(even|odd|(?:[+\-]?\d+|(?:[+\-]?\d*)?n\s*(?:[+\-]\s*\d+)?))\s*\))?/,
                        POS: /:(nth|eq|gt|lt|first|last|even|odd)(?:\((\d*)\))?(?=[^\-]|$)/,
                        PSEUDO: /:((?:[\w\u00c0-\uFFFF\-]|\\.)+)(?:\((['"]?)((?:\([^\)]+\)|[^\(\)]*)+)\2\))?/
                    },
                    leftMatch: {},
                    attrMap: {
                        "class": "className",
                        "for": "htmlFor"
                    },
                    attrHandle: {
                        href: function(a) {
                            return a.getAttribute("href")
                        },
                        type: function(a) {
                            return a.getAttribute("type")
                        }
                    },
                    relative: {
                        "+": function(a, b) {
                            var c = typeof b == "string",
                                d = c && !l.test(b),
                                e = c && !d;
                            d && (b = b.toLowerCase());
                            for (var f = 0, g = a.length, h; f < g; f++) {
                                if (h = a[f]) {
                                    while ((h = h.previousSibling) && h.nodeType !== 1) {}
                                    a[f] = e || h && h.nodeName.toLowerCase() === b ? h || !1 : h === b
                                }
                            }
                            e && m.filter(b, a, !0)
                        },
                        ">": function(a, b) {
                            var c, d = typeof b == "string",
                                e = 0,
                                f = a.length;
                            if (d && !l.test(b)) {
                                b = b.toLowerCase();
                                for (; e < f; e++) {
                                    c = a[e];
                                    if (c) {
                                        var g = c.parentNode;
                                        a[e] = g.nodeName.toLowerCase() === b ? g : !1
                                    }
                                }
                            } else {
                                for (; e < f; e++) {
                                    c = a[e], c && (a[e] = d ? c.parentNode : c.parentNode === b)
                                }
                                d && m.filter(b, a, !0)
                            }
                        },
                        "": function(a, b, c) {
                            var d, f = e++,
                                g = x;
                            typeof b == "string" && !l.test(b) && (b = b.toLowerCase(), d = b, g = w), g("parentNode", b, f, a, d, c)
                        },
                        "~": function(a, b, c) {
                            var d, f = e++,
                                g = x;
                            typeof b == "string" && !l.test(b) && (b = b.toLowerCase(), d = b, g = w), g("previousSibling", b, f, a, d, c)
                        }
                    },
                    find: {
                        ID: function(a, b, c) {
                            if (typeof b.getElementById != "" && !c) {
                                var d = b.getElementById(a[1]);
                                return d && d.parentNode ? [d] : []
                            }
                        },
                        NAME: function(a, b) {
                            if (typeof b.getElementsByName != "") {
                                var c = [],
                                    d = b.getElementsByName(a[1]);
                                for (var e = 0, f = d.length; e < f; e++) {
                                    d[e].getAttribute("name") === a[1] && c.push(d[e])
                                }
                                return c.length === 0 ? null : c
                            }
                        },
                        TAG: function(a, b) {
                            if (typeof b.getElementsByTagName != "") {
                                return b.getElementsByTagName(a[1])
                            }
                        }
                    },
                    preFilter: {
                        CLASS: function(a, b, c, d, e, f) {
                            a = " " + a[1].replace(j, "") + " ";
                            if (f) {
                                return a
                            }
                            for (var g = 0, h;
                                (h = b[g]) != null; g++) {
                                h && (e ^ (h.className && (" " + h.className + " ").replace(/[\t\n\r]/g, " ").indexOf(a) >= 0) ? c || d.push(h) : c && (b[g] = !1))
                            }
                            return !1
                        },
                        ID: function(a) {
                            return a[1].replace(j, "")
                        },
                        TAG: function(a, b) {
                            return a[1].replace(j, "").toLowerCase()
                        },
                        CHILD: function(a) {
                            if (a[1] === "nth") {
                                a[2] || m.error(a[0]), a[2] = a[2].replace(/^\+|\s*/g, "");
                                var b = /(-?)(\d*)(?:n([+\-]?\d*))?/.exec(a[2] === "even" && "2n" || a[2] === "odd" && "2n+1" || !/\D/.test(a[2]) && "0n+" + a[2] || a[2]);
                                a[2] = b[1] + (b[2] || 1) - 0, a[3] = b[3] - 0
                            } else {
                                a[2] && m.error(a[0])
                            }
                            a[0] = e++;
                            return a
                        },
                        ATTR: function(a, b, c, d, e, f) {
                            var g = a[1] = a[1].replace(j, "");
                            !f && o.attrMap[g] && (a[1] = o.attrMap[g]), a[4] = (a[4] || a[5] || "").replace(j, ""), a[2] === "~=" && (a[4] = " " + a[4] + " ");
                            return a
                        },
                        PSEUDO: function(b, c, d, e, f) {
                            if (b[1] === "not") {
                                if ((a.exec(b[3]) || "").length > 1 || /^\w/.test(b[3])) {
                                    b[3] = m(b[3], null, null, c)
                                } else {
                                    var g = m.filter(b[3], c, d, !0 ^ f);
                                    d || e.push.apply(e, g);
                                    return !1
                                }
                            } else {
                                if (o.match.POS.test(b[0]) || o.match.CHILD.test(b[0])) {
                                    return !0
                                }
                            }
                            return b
                        },
                        POS: function(a) {
                            a.unshift(!0);
                            return a
                        }
                    },
                    filters: {
                        enabled: function(a) {
                            return a.disabled === !1 && a.type !== "hidden"
                        },
                        disabled: function(a) {
                            return a.disabled === !0
                        },
                        checked: function(a) {
                            return a.checked === !0
                        },
                        selected: function(a) {
                            a.parentNode && a.parentNode.selectedIndex;
                            return a.selected === !0
                        },
                        parent: function(a) {
                            return !!a.firstChild
                        },
                        empty: function(a) {
                            return !a.firstChild
                        },
                        has: function(a, b, c) {
                            return !!m(c[3], a).length
                        },
                        header: function(a) {
                            return /h\d/i.test(a.nodeName)
                        },
                        text: function(a) {
                            var b = a.getAttribute("type"),
                                c = a.type;
                            return a.nodeName.toLowerCase() === "input" && "text" === c && (b === c || b === null)
                        },
                        radio: function(a) {
                            return a.nodeName.toLowerCase() === "input" && "radio" === a.type
                        },
                        checkbox: function(a) {
                            return a.nodeName.toLowerCase() === "input" && "checkbox" === a.type
                        },
                        file: function(a) {
                            return a.nodeName.toLowerCase() === "input" && "file" === a.type
                        },
                        password: function(a) {
                            return a.nodeName.toLowerCase() === "input" && "password" === a.type
                        },
                        submit: function(a) {
                            var b = a.nodeName.toLowerCase();
                            return (b === "input" || b === "button") && "submit" === a.type
                        },
                        image: function(a) {
                            return a.nodeName.toLowerCase() === "input" && "image" === a.type
                        },
                        reset: function(a) {
                            var b = a.nodeName.toLowerCase();
                            return (b === "input" || b === "button") && "reset" === a.type
                        },
                        button: function(a) {
                            var b = a.nodeName.toLowerCase();
                            return b === "input" && "button" === a.type || b === "button"
                        },
                        input: function(a) {
                            return /input|select|textarea|button/i.test(a.nodeName)
                        },
                        focus: function(a) {
                            return a === a.ownerDocument.activeElement
                        }
                    },
                    setFilters: {
                        first: function(a, b) {
                            return b === 0
                        },
                        last: function(a, b, c, d) {
                            return b === d.length - 1
                        },
                        even: function(a, b) {
                            return b % 2 === 0
                        },
                        odd: function(a, b) {
                            return b % 2 === 1
                        },
                        lt: function(a, b, c) {
                            return b < c[3] - 0
                        },
                        gt: function(a, b, c) {
                            return b > c[3] - 0
                        },
                        nth: function(a, b, c) {
                            return c[3] - 0 === b
                        },
                        eq: function(a, b, c) {
                            return c[3] - 0 === b
                        }
                    },
                    filter: {
                        PSEUDO: function(a, b, c, d) {
                            var e = b[1],
                                f = o.filters[e];
                            if (f) {
                                return f(a, c, b, d)
                            }
                            if (e === "contains") {
                                return (a.textContent || a.innerText || n([a]) || "").indexOf(b[3]) >= 0
                            }
                            if (e === "not") {
                                var g = b[3];
                                for (var h = 0, i = g.length; h < i; h++) {
                                    if (g[h] === a) {
                                        return !1
                                    }
                                }
                                return !0
                            }
                            m.error(e)
                        },
                        CHILD: function(a, b) {
                            var c, e, f, g, h, i, j, k = b[1],
                                l = a;
                            switch (k) {
                                case "only":
                                case "first":
                                    while (l = l.previousSibling) {
                                        if (l.nodeType === 1) {
                                            return !1
                                        }
                                    }
                                    if (k === "first") {
                                        return !0
                                    }
                                    l = a;
                                case "last":
                                    while (l = l.nextSibling) {
                                        if (l.nodeType === 1) {
                                            return !1
                                        }
                                    }
                                    return !0;
                                case "nth":
                                    c = b[2], e = b[3];
                                    if (c === 1 && e === 0) {
                                        return !0
                                    }
                                    f = b[0], g = a.parentNode;
                                    if (g && (g[d] !== f || !a.nodeIndex)) {
                                        i = 0;
                                        for (l = g.firstChild; l; l = l.nextSibling) {
                                            l.nodeType === 1 && (l.nodeIndex = ++i)
                                        }
                                        g[d] = f
                                    }
                                    j = a.nodeIndex - e;
                                    return c === 0 ? j === 0 : j % c === 0 && j / c >= 0
                            }
                        },
                        ID: function(a, b) {
                            return a.nodeType === 1 && a.getAttribute("id") === b
                        },
                        TAG: function(a, b) {
                            return b === "*" && a.nodeType === 1 || !!a.nodeName && a.nodeName.toLowerCase() === b
                        },
                        CLASS: function(a, b) {
                            return (" " + (a.className || a.getAttribute("class")) + " ").indexOf(b) > -1
                        },
                        ATTR: function(a, b) {
                            var c = b[1],
                                d = m.attr ? m.attr(a, c) : o.attrHandle[c] ? o.attrHandle[c](a) : a[c] != null ? a[c] : a.getAttribute(c),
                                e = d + "",
                                f = b[2],
                                g = b[4];
                            return d == null ? f === "!=" : !f && m.attr ? d != null : f === "=" ? e === g : f === "*=" ? e.indexOf(g) >= 0 : f === "~=" ? (" " + e + " ").indexOf(g) >= 0 : g ? f === "!=" ? e !== g : f === "^=" ? e.indexOf(g) === 0 : f === "$=" ? e.substr(e.length - g.length) === g : f === "|=" ? e === g || e.substr(0, g.length + 1) === g + "-" : !1 : e && d !== !1
                        },
                        POS: function(a, b, c, d) {
                            var e = b[2],
                                f = o.setFilters[e];
                            if (f) {
                                return f(a, c, b, d)
                            }
                        }
                    }
                },
                p = o.match.POS,
                q = function(a, b) {
                    return "\\" + (b - 0 + 1)
                };
            for (var r in o.match) {
                o.match[r] = new RegExp(o.match[r].source + /(?![^\[]*\])(?![^\(]*\))/.source), o.leftMatch[r] = new RegExp(/(^(?:.|\r|\n)*?)/.source + o.match[r].source.replace(/\\(\d+)/g, q))
            }
            var s = function(a, b) {
                a = Array.prototype.slice.call(a, 0);
                if (b) {
                    b.push.apply(b, a);
                    return b
                }
                return a
            };
            try {
                Array.prototype.slice.call(c.documentElement.childNodes, 0)[0].nodeType
            } catch (t) {
                s = function(a, b) {
                    var c = 0,
                        d = b || [];
                    if (g.call(a) === "[object Array]") {
                        Array.prototype.push.apply(d, a)
                    } else {
                        if (typeof a.length == "number") {
                            for (var e = a.length; c < e; c++) {
                                d.push(a[c])
                            }
                        } else {
                            for (; a[c]; c++) {
                                d.push(a[c])
                            }
                        }
                    }
                    return d
                }
            }
            var u, v;
            c.documentElement.compareDocumentPosition ? u = function(a, b) {
                    if (a === b) {
                        h = !0;
                        return 0
                    }
                    if (!a.compareDocumentPosition || !b.compareDocumentPosition) {
                        return a.compareDocumentPosition ? -1 : 1
                    }
                    return a.compareDocumentPosition(b) & 4 ? -1 : 1
                } : (u = function(a, b) {
                    if (a === b) {
                        h = !0;
                        return 0
                    }
                    if (a.sourceIndex && b.sourceIndex) {
                        return a.sourceIndex - b.sourceIndex
                    }
                    var c, d, e = [],
                        f = [],
                        g = a.parentNode,
                        i = b.parentNode,
                        j = g;
                    if (g === i) {
                        return v(a, b)
                    }
                    if (!g) {
                        return -1
                    }
                    if (!i) {
                        return 1
                    }
                    while (j) {
                        e.unshift(j), j = j.parentNode
                    }
                    j = i;
                    while (j) {
                        f.unshift(j), j = j.parentNode
                    }
                    c = e.length, d = f.length;
                    for (var k = 0; k < c && k < d; k++) {
                        if (e[k] !== f[k]) {
                            return v(e[k], f[k])
                        }
                    }
                    return k === c ? v(a, f[k], -1) : v(e[k], b, 1)
                }, v = function(a, b, c) {
                    if (a === b) {
                        return c
                    }
                    var d = a.nextSibling;
                    while (d) {
                        if (d === b) {
                            return -1
                        }
                        d = d.nextSibling
                    }
                    return 1
                }),
                function() {
                    var a = c.createElement("div"),
                        d = "script" + (new Date).getTime(),
                        e = c.documentElement;
                    a.innerHTML = "<a name='" + d + "'/>", e.insertBefore(a, e.firstChild), c.getElementById(d) && (o.find.ID = function(a, c, d) {
                        if (typeof c.getElementById != "" && !d) {
                            var e = c.getElementById(a[1]);
                            return e ? e.id === a[1] || typeof e.getAttributeNode != "" && e.getAttributeNode("id").nodeValue === a[1] ? [e] : b : []
                        }
                    }, o.filter.ID = function(a, b) {
                        var c = typeof a.getAttributeNode != "" && a.getAttributeNode("id");
                        return a.nodeType === 1 && c && c.nodeValue === b
                    }), e.removeChild(a), e = a = null
                }(),
                function() {
                    var a = c.createElement("div");
                    a.appendChild(c.createComment("")), a.getElementsByTagName("*").length > 0 && (o.find.TAG = function(a, b) {
                        var c = b.getElementsByTagName(a[1]);
                        if (a[1] === "*") {
                            var d = [];
                            for (var e = 0; c[e]; e++) {
                                c[e].nodeType === 1 && d.push(c[e])
                            }
                            c = d
                        }
                        return c
                    }), a.innerHTML = "<a href='#'></a>", a.firstChild && typeof a.firstChild.getAttribute != "" && a.firstChild.getAttribute("href") !== "#" && (o.attrHandle.href = function(a) {
                        return a.getAttribute("href", 2)
                    }), a = null
                }(), c.querySelectorAll && function() {
                    var a = m,
                        b = c.createElement("div"),
                        d = "__sizzle__";
                    b.innerHTML = "<p class='TEST'></p>";
                    if (!b.querySelectorAll || b.querySelectorAll(".TEST").length !== 0) {
                        m = function(b, e, f, g) {
                            e = e || c;
                            if (!g && !m.isXML(e)) {
                                var h = /^(\w+$)|^\.([\w\-]+$)|^#([\w\-]+$)/.exec(b);
                                if (h && (e.nodeType === 1 || e.nodeType === 9)) {
                                    if (h[1]) {
                                        return s(e.getElementsByTagName(b), f)
                                    }
                                    if (h[2] && o.find.CLASS && e.getElementsByClassName) {
                                        return s(e.getElementsByClassName(h[2]), f)
                                    }
                                }
                                if (e.nodeType === 9) {
                                    if (b === "body" && e.body) {
                                        return s([e.body], f)
                                    }
                                    if (h && h[3]) {
                                        var i = e.getElementById(h[3]);
                                        if (!i || !i.parentNode) {
                                            return s([], f)
                                        }
                                        if (i.id === h[3]) {
                                            return s([i], f)
                                        }
                                    }
                                    try {
                                        return s(e.querySelectorAll(b), f)
                                    } catch (j) {}
                                } else {
                                    if (e.nodeType === 1 && e.nodeName.toLowerCase() !== "object") {
                                        var k = e,
                                            l = e.getAttribute("id"),
                                            n = l || d,
                                            p = e.parentNode,
                                            q = /^\s*[+~]/.test(b);
                                        l ? n = n.replace(/'/g, "\\$&") : e.setAttribute("id", n), q && p && (e = e.parentNode);
                                        try {
                                            if (!q || p) {
                                                return s(e.querySelectorAll("[id='" + n + "'] " + b), f)
                                            }
                                        } catch (r) {} finally {
                                            l || k.removeAttribute("id")
                                        }
                                    }
                                }
                            }
                            return a(b, e, f, g)
                        };
                        for (var e in a) {
                            m[e] = a[e]
                        }
                        b = null
                    }
                }(),
                function() {
                    var a = c.documentElement,
                        b = a.matchesSelector || a.mozMatchesSelector || a.webkitMatchesSelector || a.msMatchesSelector;
                    if (b) {
                        var d = !b.call(c.createElement("div"), "div"),
                            e = !1;
                        try {
                            b.call(c.documentElement, "[test!='']:sizzle")
                        } catch (f) {
                            e = !0
                        }
                        m.matchesSelector = function(a, c) {
                            c = c.replace(/\=\s*([^'"\]]*)\s*\]/g, "='$1']");
                            if (!m.isXML(a)) {
                                try {
                                    if (e || !o.match.PSEUDO.test(c) && !/!=/.test(c)) {
                                        var f = b.call(a, c);
                                        if (f || !d || a.document && a.document.nodeType !== 11) {
                                            return f
                                        }
                                    }
                                } catch (g) {}
                            }
                            return m(c, null, null, [a]).length > 0
                        }
                    }
                }(),
                function() {
                    var a = c.createElement("div");
                    a.innerHTML = "<div class='test e'></div><div class='test'></div>";
                    if (!!a.getElementsByClassName && a.getElementsByClassName("e").length !== 0) {
                        a.lastChild.className = "e";
                        if (a.getElementsByClassName("e").length === 1) {
                            return
                        }
                        o.order.splice(1, 0, "CLASS"), o.find.CLASS = function(a, b, c) {
                            if (typeof b.getElementsByClassName != "" && !c) {
                                return b.getElementsByClassName(a[1])
                            }
                        }, a = null
                    }
                }(), c.documentElement.contains ? m.contains = function(a, b) {
                    return a !== b && (a.contains ? a.contains(b) : !0)
                } : c.documentElement.compareDocumentPosition ? m.contains = function(a, b) {
                    return !!(a.compareDocumentPosition(b) & 16)
                } : m.contains = function() {
                    return !1
                }, m.isXML = function(a) {
                    var b = (a ? a.ownerDocument || a : 0).documentElement;
                    return b ? b.nodeName !== "HTML" : !1
                };
            var y = function(a, b, c) {
                var d, e = [],
                    f = "",
                    g = b.nodeType ? [b] : b;
                while (d = o.match.PSEUDO.exec(a)) {
                    f += d[0], a = a.replace(o.match.PSEUDO, "")
                }
                a = o.relative[a] ? a + "*" : a;
                for (var h = 0, i = g.length; h < i; h++) {
                    m(a, g[h], e, c)
                }
                return m.filter(f, e)
            };
            m.attr = f.attr, m.selectors.attrMap = {}, f.find = m, f.expr = m.selectors, f.expr[":"] = f.expr.filters, f.unique = m.uniqueSort, f.text = m.getText, f.isXMLDoc = m.isXML, f.contains = m.contains
        }();
    var L = /Until$/,
        M = /^(?:parents|prevUntil|prevAll)/,
        N = /,/,
        O = /^.[^:#\[\.,]*$/,
        P = Array.prototype.slice,
        Q = f.expr.match.POS,
        R = {
            children: !0,
            contents: !0,
            next: !0,
            prev: !0
        };
    f.fn.extend({
        find: function(a) {
            var b = this,
                c, d;
            if (typeof a != "string") {
                return f(a).filter(function() {
                    for (c = 0, d = b.length; c < d; c++) {
                        if (f.contains(b[c], this)) {
                            return !0
                        }
                    }
                })
            }
            var e = this.pushStack("", "find", a),
                g, h, i;
            for (c = 0, d = this.length; c < d; c++) {
                g = e.length, f.find(a, this[c], e);
                if (c > 0) {
                    for (h = g; h < e.length; h++) {
                        for (i = 0; i < g; i++) {
                            if (e[i] === e[h]) {
                                e.splice(h--, 1);
                                break
                            }
                        }
                    }
                }
            }
            return e
        },
        has: function(a) {
            var b = f(a);
            return this.filter(function() {
                for (var a = 0, c = b.length; a < c; a++) {
                    if (f.contains(this, b[a])) {
                        return !0
                    }
                }
            })
        },
        not: function(a) {
            return this.pushStack(T(this, a, !1), "not", a)
        },
        filter: function(a) {
            return this.pushStack(T(this, a, !0), "filter", a)
        },
        is: function(a) {
            return !!a && (typeof a == "string" ? Q.test(a) ? f(a, this.context).index(this[0]) >= 0 : f.filter(a, this).length > 0 : this.filter(a).length > 0)
        },
        closest: function(a, b) {
            var c = [],
                d, e, g = this[0];
            if (f.isArray(a)) {
                var h = 1;
                while (g && g.ownerDocument && g !== b) {
                    for (d = 0; d < a.length; d++) {
                        f(g).is(a[d]) && c.push({
                            selector: a[d],
                            elem: g,
                            level: h
                        })
                    }
                    g = g.parentNode, h++
                }
                return c
            }
            var i = Q.test(a) || typeof a != "string" ? f(a, b || this.context) : 0;
            for (d = 0, e = this.length; d < e; d++) {
                g = this[d];
                while (g) {
                    if (i ? i.index(g) > -1 : f.find.matchesSelector(g, a)) {
                        c.push(g);
                        break
                    }
                    g = g.parentNode;
                    if (!g || !g.ownerDocument || g === b || g.nodeType === 11) {
                        break
                    }
                }
            }
            c = c.length > 1 ? f.unique(c) : c;
            return this.pushStack(c, "closest", a)
        },
        index: function(a) {
            if (!a) {
                return this[0] && this[0].parentNode ? this.prevAll().length : -1
            }
            if (typeof a == "string") {
                return f.inArray(this[0], f(a))
            }
            return f.inArray(a.jquery ? a[0] : a, this)
        },
        add: function(a, b) {
            var c = typeof a == "string" ? f(a, b) : f.makeArray(a && a.nodeType ? [a] : a),
                d = f.merge(this.get(), c);
            return this.pushStack(S(c[0]) || S(d[0]) ? d : f.unique(d))
        },
        andSelf: function() {
            return this.add(this.prevObject)
        }
    }), f.each({
        parent: function(a) {
            var b = a.parentNode;
            return b && b.nodeType !== 11 ? b : null
        },
        parents: function(a) {
            return f.dir(a, "parentNode")
        },
        parentsUntil: function(a, b, c) {
            return f.dir(a, "parentNode", c)
        },
        next: function(a) {
            return f.nth(a, 2, "nextSibling")
        },
        prev: function(a) {
            return f.nth(a, 2, "previousSibling")
        },
        nextAll: function(a) {
            return f.dir(a, "nextSibling")
        },
        prevAll: function(a) {
            return f.dir(a, "previousSibling")
        },
        nextUntil: function(a, b, c) {
            return f.dir(a, "nextSibling", c)
        },
        prevUntil: function(a, b, c) {
            return f.dir(a, "previousSibling", c)
        },
        siblings: function(a) {
            return f.sibling(a.parentNode.firstChild, a)
        },
        children: function(a) {
            return f.sibling(a.firstChild)
        },
        contents: function(a) {
            return f.nodeName(a, "iframe") ? a.contentDocument || a.contentWindow.document : f.makeArray(a.childNodes)
        }
    }, function(a, b) {
        f.fn[a] = function(c, d) {
            var e = f.map(this, b, c);
            L.test(a) || (d = c), d && typeof d == "string" && (e = f.filter(d, e)), e = this.length > 1 && !R[a] ? f.unique(e) : e, (this.length > 1 || N.test(d)) && M.test(a) && (e = e.reverse());
            return this.pushStack(e, a, P.call(arguments).join(","))
        }
    }), f.extend({
        filter: function(a, b, c) {
            c && (a = ":not(" + a + ")");
            return b.length === 1 ? f.find.matchesSelector(b[0], a) ? [b[0]] : [] : f.find.matches(a, b)
        },
        dir: function(a, c, d) {
            var e = [],
                g = a[c];
            while (g && g.nodeType !== 9 && (d === b || g.nodeType !== 1 || !f(g).is(d))) {
                g.nodeType === 1 && e.push(g), g = g[c]
            }
            return e
        },
        nth: function(a, b, c, d) {
            b = b || 1;
            var e = 0;
            for (; a; a = a[c]) {
                if (a.nodeType === 1 && ++e === b) {
                    break
                }
            }
            return a
        },
        sibling: function(a, b) {
            var c = [];
            for (; a; a = a.nextSibling) {
                a.nodeType === 1 && a !== b && c.push(a)
            }
            return c
        }
    });
    var V = "abbr|article|aside|audio|canvas|datalist|details|figcaption|figure|footer|header|hgroup|mark|meter|nav|output|progress|section|summary|time|video",
        W = / jQuery\d+="(?:\d+|null)"/g,
        X = /^\s+/,
        Y = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\w:]+)[^>]*)\/>/ig,
        Z = /<([\w:]+)/,
        $ = /<tbody/i,
        _ = /<|&#?\w+;/,
        ba = /<(?:script|style)/i,
        bb = /<(?:script|object|embed|option|style)/i,
        bc = new RegExp("<(?:" + V + ")", "i"),
        bd = /checked\s*(?:[^=]|=\s*.checked.)/i,
        be = /\/(java|ecma)script/i,
        bf = /^\s*<!(?:\[CDATA\[|\-\-)/,
        bg = {
            option: [1, "<select multiple='multiple'>", "</select>"],
            legend: [1, "<fieldset>", "</fieldset>"],
            thead: [1, "<table>", "</table>"],
            tr: [2, "<table><tbody>", "</tbody></table>"],
            td: [3, "<table><tbody><tr>", "</tr></tbody></table>"],
            col: [2, "<table><tbody></tbody><colgroup>", "</colgroup></table>"],
            area: [1, "<map>", "</map>"],
            _default: [0, "", ""]
        },
        bh = U(c);
    bg.optgroup = bg.option, bg.tbody = bg.tfoot = bg.colgroup = bg.caption = bg.thead, bg.th = bg.td, f.support.htmlSerialize || (bg._default = [1, "div<div>", "</div>"]), f.fn.extend({
        text: function(a) {
            if (f.isFunction(a)) {
                return this.each(function(b) {
                    var c = f(this);
                    c.text(a.call(this, b, c.text()))
                })
            }
            if (typeof a != "object" && a !== b) {
                return this.empty().append((this[0] && this[0].ownerDocument || c).createTextNode(a))
            }
            return f.text(this)
        },
        wrapAll: function(a) {
            if (f.isFunction(a)) {
                return this.each(function(b) {
                    f(this).wrapAll(a.call(this, b))
                })
            }
            if (this[0]) {
                var b = f(a, this[0].ownerDocument).eq(0).clone(!0);
                this[0].parentNode && b.insertBefore(this[0]), b.map(function() {
                    var a = this;
                    while (a.firstChild && a.firstChild.nodeType === 1) {
                        a = a.firstChild
                    }
                    return a
                }).append(this)
            }
            return this
        },
        wrapInner: function(a) {
            if (f.isFunction(a)) {
                return this.each(function(b) {
                    f(this).wrapInner(a.call(this, b))
                })
            }
            return this.each(function() {
                var b = f(this),
                    c = b.contents();
                c.length ? c.wrapAll(a) : b.append(a)
            })
        },
        wrap: function(a) {
            var b = f.isFunction(a);
            return this.each(function(c) {
                f(this).wrapAll(b ? a.call(this, c) : a)
            })
        },
        unwrap: function() {
            return this.parent().each(function() {
                f.nodeName(this, "body") || f(this).replaceWith(this.childNodes)
            }).end()
        },
        append: function() {
            return this.domManip(arguments, !0, function(a) {
                this.nodeType === 1 && this.appendChild(a)
            })
        },
        prepend: function() {
            return this.domManip(arguments, !0, function(a) {
                this.nodeType === 1 && this.insertBefore(a, this.firstChild)
            })
        },
        before: function() {
            if (this[0] && this[0].parentNode) {
                return this.domManip(arguments, !1, function(a) {
                    this.parentNode.insertBefore(a, this)
                })
            }
            if (arguments.length) {
                var a = f.clean(arguments);
                a.push.apply(a, this.toArray());
                return this.pushStack(a, "before", arguments)
            }
        },
        after: function() {
            if (this[0] && this[0].parentNode) {
                return this.domManip(arguments, !1, function(a) {
                    this.parentNode.insertBefore(a, this.nextSibling)
                })
            }
            if (arguments.length) {
                var a = this.pushStack(this, "after", arguments);
                a.push.apply(a, f.clean(arguments));
                return a
            }
        },
        remove: function(a, b) {
            for (var c = 0, d;
                (d = this[c]) != null; c++) {
                if (!a || f.filter(a, [d]).length) {
                    !b && d.nodeType === 1 && (f.cleanData(d.getElementsByTagName("*")), f.cleanData([d])), d.parentNode && d.parentNode.removeChild(d)
                }
            }
            return this
        },
        empty: function() {
            for (var a = 0, b;
                (b = this[a]) != null; a++) {
                b.nodeType === 1 && f.cleanData(b.getElementsByTagName("*"));
                while (b.firstChild) {
                    b.removeChild(b.firstChild)
                }
            }
            return this
        },
        clone: function(a, b) {
            a = a == null ? !1 : a, b = b == null ? a : b;
            return this.map(function() {
                return f.clone(this, a, b)
            })
        },
        html: function(a) {
            if (a === b) {
                return this[0] && this[0].nodeType === 1 ? this[0].innerHTML.replace(W, "") : null
            }
            if (typeof a == "string" && !ba.test(a) && (f.support.leadingWhitespace || !X.test(a)) && !bg[(Z.exec(a) || ["", ""])[1].toLowerCase()]) {
                a = a.replace(Y, "<$1></$2>");
                try {
                    for (var c = 0, d = this.length; c < d; c++) {
                        this[c].nodeType === 1 && (f.cleanData(this[c].getElementsByTagName("*")), this[c].innerHTML = a)
                    }
                } catch (e) {
                    this.empty().append(a)
                }
            } else {
                f.isFunction(a) ? this.each(function(b) {
                    var c = f(this);
                    c.html(a.call(this, b, c.html()))
                }) : this.empty().append(a)
            }
            return this
        },
        replaceWith: function(a) {
            if (this[0] && this[0].parentNode) {
                if (f.isFunction(a)) {
                    return this.each(function(b) {
                        var c = f(this),
                            d = c.html();
                        c.replaceWith(a.call(this, b, d))
                    })
                }
                typeof a != "string" && (a = f(a).detach());
                return this.each(function() {
                    var b = this.nextSibling,
                        c = this.parentNode;
                    f(this).remove(), b ? f(b).before(a) : f(c).append(a)
                })
            }
            return this.length ? this.pushStack(f(f.isFunction(a) ? a() : a), "replaceWith", a) : this
        },
        detach: function(a) {
            return this.remove(a, !0)
        },
        domManip: function(a, c, d) {
            var e, g, h, i, j = a[0],
                k = [];
            if (!f.support.checkClone && arguments.length === 3 && typeof j == "string" && bd.test(j)) {
                return this.each(function() {
                    f(this).domManip(a, c, d, !0)
                })
            }
            if (f.isFunction(j)) {
                return this.each(function(e) {
                    var g = f(this);
                    a[0] = j.call(this, e, c ? g.html() : b), g.domManip(a, c, d)
                })
            }
            if (this[0]) {
                i = j && j.parentNode, f.support.parentNode && i && i.nodeType === 11 && i.childNodes.length === this.length ? e = {
                    fragment: i
                } : e = f.buildFragment(a, this, k), h = e.fragment, h.childNodes.length === 1 ? g = h = h.firstChild : g = h.firstChild;
                if (g) {
                    c = c && f.nodeName(g, "tr");
                    for (var l = 0, m = this.length, n = m - 1; l < m; l++) {
                        d.call(c ? bi(this[l], g) : this[l], e.cacheable || m > 1 && l < n ? f.clone(h, !0, !0) : h)
                    }
                }
                k.length && f.each(k, bp)
            }
            return this
        }
    }), f.buildFragment = function(a, b, d) {
        var e, g, h, i, j = a[0];
        b && b[0] && (i = b[0].ownerDocument || b[0]), i.createDocumentFragment || (i = c), a.length === 1 && typeof j == "string" && j.length < 512 && i === c && j.charAt(0) === "<" && !bb.test(j) && (f.support.checkClone || !bd.test(j)) && (f.support.html5Clone || !bc.test(j)) && (g = !0, h = f.fragments[j], h && h !== 1 && (e = h)), e || (e = i.createDocumentFragment(), f.clean(a, i, e, d)), g && (f.fragments[j] = h ? e : 1);
        return {
            fragment: e,
            cacheable: g
        }
    }, f.fragments = {}, f.each({
        appendTo: "append",
        prependTo: "prepend",
        insertBefore: "before",
        insertAfter: "after",
        replaceAll: "replaceWith"
    }, function(a, b) {
        f.fn[a] = function(c) {
            var d = [],
                e = f(c),
                g = this.length === 1 && this[0].parentNode;
            if (g && g.nodeType === 11 && g.childNodes.length === 1 && e.length === 1) {
                e[b](this[0]);
                return this
            }
            for (var h = 0, i = e.length; h < i; h++) {
                var j = (h > 0 ? this.clone(!0) : this).get();
                f(e[h])[b](j), d = d.concat(j)
            }
            return this.pushStack(d, a, e.selector)
        }
    }), f.extend({
        clone: function(a, b, c) {
            var d, e, g, h = f.support.html5Clone || !bc.test("<" + a.nodeName) ? a.cloneNode(!0) : bo(a);
            if ((!f.support.noCloneEvent || !f.support.noCloneChecked) && (a.nodeType === 1 || a.nodeType === 11) && !f.isXMLDoc(a)) {
                bk(a, h), d = bl(a), e = bl(h);
                for (g = 0; d[g]; ++g) {
                    e[g] && bk(d[g], e[g])
                }
            }
            if (b) {
                bj(a, h);
                if (c) {
                    d = bl(a), e = bl(h);
                    for (g = 0; d[g]; ++g) {
                        bj(d[g], e[g])
                    }
                }
            }
            d = e = null;
            return h
        },
        clean: function(a, b, d, e) {
            var g;
            b = b || c, typeof b.createElement == "" && (b = b.ownerDocument || b[0] && b[0].ownerDocument || c);
            var h = [],
                i;
            for (var j = 0, k;
                (k = a[j]) != null; j++) {
                typeof k == "number" && (k += "");
                if (!k) {
                    continue
                }
                if (typeof k == "string") {
                    if (!_.test(k)) {
                        k = b.createTextNode(k)
                    } else {
                        k = k.replace(Y, "<$1></$2>");
                        var l = (Z.exec(k) || ["", ""])[1].toLowerCase(),
                            m = bg[l] || bg._default,
                            n = m[0],
                            o = b.createElement("div");
                        b === c ? bh.appendChild(o) : U(b).appendChild(o), o.innerHTML = m[1] + k + m[2];
                        while (n--) {
                            o = o.lastChild
                        }
                        if (!f.support.tbody) {
                            var p = $.test(k),
                                q = l === "table" && !p ? o.firstChild && o.firstChild.childNodes : m[1] === "<table>" && !p ? o.childNodes : [];
                            for (i = q.length - 1; i >= 0; --i) {
                                f.nodeName(q[i], "tbody") && !q[i].childNodes.length && q[i].parentNode.removeChild(q[i])
                            }
                        }!f.support.leadingWhitespace && X.test(k) && o.insertBefore(b.createTextNode(X.exec(k)[0]), o.firstChild), k = o.childNodes
                    }
                }
                var r;
                if (!f.support.appendChecked) {
                    if (k[0] && typeof(r = k.length) == "number") {
                        for (i = 0; i < r; i++) {
                            bn(k[i])
                        }
                    } else {
                        bn(k)
                    }
                }
                k.nodeType ? h.push(k) : h = f.merge(h, k)
            }
            if (d) {
                g = function(a) {
                    return !a.type || be.test(a.type)
                };
                for (j = 0; h[j]; j++) {
                    if (e && f.nodeName(h[j], "script") && (!h[j].type || h[j].type.toLowerCase() === "text/javascript")) {
                        e.push(h[j].parentNode ? h[j].parentNode.removeChild(h[j]) : h[j])
                    } else {
                        if (h[j].nodeType === 1) {
                            var s = f.grep(h[j].getElementsByTagName("script"), g);
                            h.splice.apply(h, [j + 1, 0].concat(s))
                        }
                        d.appendChild(h[j])
                    }
                }
            }
            return h
        },
        cleanData: function(a) {
            var b, c, d = f.cache,
                e = f.event.special,
                g = f.support.deleteExpando;
            for (var h = 0, i;
                (i = a[h]) != null; h++) {
                if (i.nodeName && f.noData[i.nodeName.toLowerCase()]) {
                    continue
                }
                c = i[f.expando];
                if (c) {
                    b = d[c];
                    if (b && b.events) {
                        for (var j in b.events) {
                            e[j] ? f.event.remove(i, j) : f.removeEvent(i, j, b.handle)
                        }
                        b.handle && (b.handle.elem = null)
                    }
                    g ? delete i[f.expando] : i.removeAttribute && i.removeAttribute(f.expando), delete d[c]
                }
            }
        }
    });
    var bq = /alpha\([^)]*\)/i,
        br = /opacity=([^)]*)/,
        bs = /([A-Z]|^ms)/g,
        bt = /^-?\d+(?:px)?$/i,
        bu = /^-?\d/,
        bv = /^([\-+])=([\-+.\de]+)/,
        bw = {
            position: "absolute",
            visibility: "hidden",
            display: "block"
        },
        bx = ["Left", "Right"],
        by = ["Top", "Bottom"],
        bz, bA, bB;
    f.fn.css = function(a, c) {
        if (arguments.length === 2 && c === b) {
            return this
        }
        return f.access(this, a, c, !0, function(a, c, d) {
            return d !== b ? f.style(a, c, d) : f.css(a, c)
        })
    }, f.extend({
        cssHooks: {
            opacity: {
                get: function(a, b) {
                    if (b) {
                        var c = bz(a, "opacity", "opacity");
                        return c === "" ? "1" : c
                    }
                    return a.style.opacity
                }
            }
        },
        cssNumber: {
            fillOpacity: !0,
            fontWeight: !0,
            lineHeight: !0,
            opacity: !0,
            orphans: !0,
            widows: !0,
            zIndex: !0,
            zoom: !0
        },
        cssProps: {
            "float": f.support.cssFloat ? "cssFloat" : "styleFloat"
        },
        style: function(a, c, d, e) {
            if (!!a && a.nodeType !== 3 && a.nodeType !== 8 && !!a.style) {
                var g, h, i = f.camelCase(c),
                    j = a.style,
                    k = f.cssHooks[i];
                c = f.cssProps[i] || i;
                if (d === b) {
                    if (k && "get" in k && (g = k.get(a, !1, e)) !== b) {
                        return g
                    }
                    return j[c]
                }
                h = typeof d, h === "string" && (g = bv.exec(d)) && (d = +(g[1] + 1) * +g[2] + parseFloat(f.css(a, c)), h = "number");
                if (d == null || h === "number" && isNaN(d)) {
                    return
                }
                h === "number" && !f.cssNumber[i] && (d += "px");
                if (!k || !("set" in k) || (d = k.set(a, d)) !== b) {
                    try {
                        j[c] = d
                    } catch (l) {}
                }
            }
        },
        css: function(a, c, d) {
            var e, g;
            c = f.camelCase(c), g = f.cssHooks[c], c = f.cssProps[c] || c, c === "cssFloat" && (c = "float");
            if (g && "get" in g && (e = g.get(a, !0, d)) !== b) {
                return e
            }
            if (bz) {
                return bz(a, c)
            }
        },
        swap: function(a, b, c) {
            var d = {};
            for (var e in b) {
                d[e] = a.style[e], a.style[e] = b[e]
            }
            c.call(a);
            for (e in b) {
                a.style[e] = d[e]
            }
        }
    }), f.curCSS = f.css, f.each(["height", "width"], function(a, b) {
        f.cssHooks[b] = {
            get: function(a, c, d) {
                var e;
                if (c) {
                    if (a.offsetWidth !== 0) {
                        return bC(a, b, d)
                    }
                    f.swap(a, bw, function() {
                        e = bC(a, b, d)
                    });
                    return e
                }
            },
            set: function(a, b) {
                if (!bt.test(b)) {
                    return b
                }
                b = parseFloat(b);
                if (b >= 0) {
                    return b + "px"
                }
            }
        }
    }), f.support.opacity || (f.cssHooks.opacity = {
        get: function(a, b) {
            return br.test((b && a.currentStyle ? a.currentStyle.filter : a.style.filter) || "") ? parseFloat(RegExp.$1) / 100 + "" : b ? "1" : ""
        },
        set: function(a, b) {
            var c = a.style,
                d = a.currentStyle,
                e = f.isNumeric(b) ? "alpha(opacity=" + b * 100 + ")" : "",
                g = d && d.filter || c.filter || "";
            c.zoom = 1;
            if (b >= 1 && f.trim(g.replace(bq, "")) === "") {
                c.removeAttribute("filter");
                if (d && !d.filter) {
                    return
                }
            }
            c.filter = bq.test(g) ? g.replace(bq, e) : g + " " + e
        }
    }), f(function() {
        f.support.reliableMarginRight || (f.cssHooks.marginRight = {
            get: function(a, b) {
                var c;
                f.swap(a, {
                    display: "inline-block"
                }, function() {
                    b ? c = bz(a, "margin-right", "marginRight") : c = a.style.marginRight
                });
                return c
            }
        })
    }), c.defaultView && c.defaultView.getComputedStyle && (bA = function(a, b) {
        var c, d, e;
        b = b.replace(bs, "-$1").toLowerCase(), (d = a.ownerDocument.defaultView) && (e = d.getComputedStyle(a, null)) && (c = e.getPropertyValue(b), c === "" && !f.contains(a.ownerDocument.documentElement, a) && (c = f.style(a, b)));
        return c
    }), c.documentElement.currentStyle && (bB = function(a, b) {
        var c, d, e, f = a.currentStyle && a.currentStyle[b],
            g = a.style;
        f === null && g && (e = g[b]) && (f = e), !bt.test(f) && bu.test(f) && (c = g.left, d = a.runtimeStyle && a.runtimeStyle.left, d && (a.runtimeStyle.left = a.currentStyle.left), g.left = b === "fontSize" ? "1em" : f || 0, f = g.pixelLeft + "px", g.left = c, d && (a.runtimeStyle.left = d));
        return f === "" ? "auto" : f
    }), bz = bA || bB, f.expr && f.expr.filters && (f.expr.filters.hidden = function(a) {
        var b = a.offsetWidth,
            c = a.offsetHeight;
        return b === 0 && c === 0 || !f.support.reliableHiddenOffsets && (a.style && a.style.display || f.css(a, "display")) === "none"
    }, f.expr.filters.visible = function(a) {
        return !f.expr.filters.hidden(a)
    });
    var bD = /%20/g,
        bE = /\[\]$/,
        bF = /\r?\n/g,
        bG = /#.*$/,
        bH = /^(.*?):[ \t]*([^\r\n]*)\r?$/mg,
        bI = /^(?:color|date|datetime|datetime-local|email|hidden|month|number|password|range|search|tel|text|time|url|week)$/i,
        bJ = /^(?:about|app|app\-storage|.+\-extension|file|res|widget):$/,
        bK = /^(?:GET|HEAD)$/,
        bL = /^\/\//,
        bM = /\?/,
        bN = /<script\b[^<]*(?:(?!<\/script>)<[^<]*)*<\/script>/gi,
        bO = /^(?:select|textarea)/i,
        bP = /\s+/,
        bQ = /([?&])_=[^&]*/,
        bR = /^([\w\+\.\-]+:)(?:\/\/([^\/?#:]*)(?::(\d+))?)?/,
        bS = f.fn.load,
        bT = {},
        bU = {},
        bV, bW, bX = ["*/"] + ["*"];
    try {
        bV = e.href
    } catch (bY) {
        bV = c.createElement("a"), bV.href = "", bV = bV.href
    }
    bW = bR.exec(bV.toLowerCase()) || [], f.fn.extend({
        load: function(a, c, d) {
            if (typeof a != "string" && bS) {
                return bS.apply(this, arguments)
            }
            if (!this.length) {
                return this
            }
            var e = a.indexOf(" ");
            if (e >= 0) {
                var g = a.slice(e, a.length);
                a = a.slice(0, e)
            }
            var h = "GET";
            c && (f.isFunction(c) ? (d = c, c = b) : typeof c == "object" && (c = f.param(c, f.ajaxSettings.traditional), h = "POST"));
            var i = this;
            f.ajax({
                url: a,
                type: h,
                dataType: "html",
                data: c,
                complete: function(a, b, c) {
                    c = a.responseText, a.isResolved() && (a.done(function(a) {
                        c = a
                    }), i.html(g ? f("<div>").append(c.replace(bN, "")).find(g) : c)), d && i.each(d, [c, b, a])
                }
            });
            return this
        },
        serialize: function() {
            return f.param(this.serializeArray())
        },
        serializeArray: function() {
            return this.map(function() {
                return this.elements ? f.makeArray(this.elements) : this
            }).filter(function() {
                return this.name && !this.disabled && (this.checked || bO.test(this.nodeName) || bI.test(this.type))
            }).map(function(a, b) {
                var c = f(this).val();
                return c == null ? null : f.isArray(c) ? f.map(c, function(a, c) {
                    return {
                        name: b.name,
                        value: a.replace(bF, "\r\n")
                    }
                }) : {
                    name: b.name,
                    value: c.replace(bF, "\r\n")
                }
            }).get()
        }
    }), f.each("ajaxStart ajaxStop ajaxComplete ajaxError ajaxSuccess ajaxSend".split(" "), function(a, b) {
        f.fn[b] = function(a) {
            return this.on(b, a)
        }
    }), f.each(["get", "post"], function(a, c) {
        f[c] = function(a, d, e, g) {
            f.isFunction(d) && (g = g || e, e = d, d = b);
            return f.ajax({
                type: c,
                url: a,
                data: d,
                success: e,
                dataType: g
            })
        }
    }), f.extend({
        getScript: function(a, c) {
            return f.get(a, b, c, "script")
        },
        getJSON: function(a, b, c) {
            return f.get(a, b, c, "json")
        },
        ajaxSetup: function(a, b) {
            b ? b_(a, f.ajaxSettings) : (b = a, a = f.ajaxSettings), b_(a, b);
            return a
        },
        ajaxSettings: {
            url: bV,
            isLocal: bJ.test(bW[1]),
            global: !0,
            type: "GET",
            contentType: "application/x-www-form-urlencoded",
            processData: !0,
            async: !0,
            accepts: {
                xml: "application/xml, text/xml",
                html: "text/html",
                text: "text/plain",
                json: "application/json, text/javascript",
                "*": bX
            },
            contents: {
                xml: /xml/,
                html: /html/,
                json: /json/
            },
            responseFields: {
                xml: "responseXML",
                text: "responseText"
            },
            converters: {
                "* text": a.String,
                "text html": !0,
                "text json": f.parseJSON,
                "text xml": f.parseXML
            },
            flatOptions: {
                context: !0,
                url: !0
            }
        },
        ajaxPrefilter: bZ(bT),
        ajaxTransport: bZ(bU),
        ajax: function(a, c) {
            function w(a, c, l, m) {
                if (s !== 2) {
                    s = 2, q && clearTimeout(q), p = b, n = m || "", v.readyState = a > 0 ? 4 : 0;
                    var o, r, u, w = c,
                        x = l ? cb(d, v, l) : b,
                        y, z;
                    if (a >= 200 && a < 300 || a === 304) {
                        if (d.ifModified) {
                            if (y = v.getResponseHeader("Last-Modified")) {
                                f.lastModified[k] = y
                            }
                            if (z = v.getResponseHeader("Etag")) {
                                f.etag[k] = z
                            }
                        }
                        if (a === 304) {
                            w = "notmodified", o = !0
                        } else {
                            try {
                                r = cc(d, x), w = "success", o = !0
                            } catch (A) {
                                w = "parsererror", u = A
                            }
                        }
                    } else {
                        u = w;
                        if (!w || a) {
                            w = "error", a < 0 && (a = 0)
                        }
                    }
                    v.status = a, v.statusText = "" + (c || w), o ? h.resolveWith(e, [r, w, v]) : h.rejectWith(e, [v, w, u]), v.statusCode(j), j = b, t && g.trigger("ajax" + (o ? "Success" : "Error"), [v, d, o ? r : u]), i.fireWith(e, [v, w]), t && (g.trigger("ajaxComplete", [v, d]), --f.active || f.event.trigger("ajaxStop"))
                }
            }
            typeof a == "object" && (c = a, a = b), c = c || {};
            var d = f.ajaxSetup({}, c),
                e = d.context || d,
                g = e !== d && (e.nodeType || e instanceof f) ? f(e) : f.event,
                h = f.Deferred(),
                i = f.Callbacks("once memory"),
                j = d.statusCode || {},
                k, l = {},
                m = {},
                n, o, p, q, r, s = 0,
                t, u, v = {
                    readyState: 0,
                    setRequestHeader: function(a, b) {
                        if (!s) {
                            var c = a.toLowerCase();
                            a = m[c] = m[c] || a, l[a] = b
                        }
                        return this
                    },
                    getAllResponseHeaders: function() {
                        return s === 2 ? n : null
                    },
                    getResponseHeader: function(a) {
                        var c;
                        if (s === 2) {
                            if (!o) {
                                o = {};
                                while (c = bH.exec(n)) {
                                    o[c[1].toLowerCase()] = c[2]
                                }
                            }
                            c = o[a.toLowerCase()]
                        }
                        return c === b ? null : c
                    },
                    overrideMimeType: function(a) {
                        s || (d.mimeType = a);
                        return this
                    },
                    abort: function(a) {
                        a = a || "abort", p && p.abort(a), w(0, a);
                        return this
                    }
                };
            h.promise(v), v.success = v.done, v.error = v.fail, v.complete = i.add, v.statusCode = function(a) {
                if (a) {
                    var b;
                    if (s < 2) {
                        for (b in a) {
                            j[b] = [j[b], a[b]]
                        }
                    } else {
                        b = a[v.status], v.then(b, b)
                    }
                }
                return this
            }, d.url = ((a || d.url) + "").replace(bG, "").replace(bL, bW[1] + "//"), d.dataTypes = f.trim(d.dataType || "*").toLowerCase().split(bP), d.crossDomain == null && (r = bR.exec(d.url.toLowerCase()), d.crossDomain = !(!r || r[1] == bW[1] && r[2] == bW[2] && (r[3] || (r[1] === "http:" ? 80 : 443)) == (bW[3] || (bW[1] === "http:" ? 80 : 443)))), d.data && d.processData && typeof d.data != "string" && (d.data = f.param(d.data, d.traditional)), b$(bT, d, c, v);
            if (s === 2) {
                return !1
            }
            t = d.global, d.type = d.type.toUpperCase(), d.hasContent = !bK.test(d.type), t && f.active++ === 0 && f.event.trigger("ajaxStart");
            if (!d.hasContent) {
                d.data && (d.url += (bM.test(d.url) ? "&" : "?") + d.data, delete d.data), k = d.url;
                if (d.cache === !1) {
                    var x = f.now(),
                        y = d.url.replace(bQ, "$1_=" + x);
                    d.url = y + (y === d.url ? (bM.test(d.url) ? "&" : "?") + "_=" + x : "")
                }
            }(d.data && d.hasContent && d.contentType !== !1 || c.contentType) && v.setRequestHeader("Content-Type", d.contentType), d.ifModified && (k = k || d.url, f.lastModified[k] && v.setRequestHeader("If-Modified-Since", f.lastModified[k]), f.etag[k] && v.setRequestHeader("If-None-Match", f.etag[k])), v.setRequestHeader("Accept", d.dataTypes[0] && d.accepts[d.dataTypes[0]] ? d.accepts[d.dataTypes[0]] + (d.dataTypes[0] !== "*" ? ", " + bX + "; q=0.01" : "") : d.accepts["*"]);
            for (u in d.headers) {
                v.setRequestHeader(u, d.headers[u])
            }
            if (d.beforeSend && (d.beforeSend.call(e, v, d) === !1 || s === 2)) {
                v.abort();
                return !1
            }
            for (u in {
                    success: 1,
                    error: 1,
                    complete: 1
                }) {
                v[u](d[u])
            }
            p = b$(bU, d, c, v);
            if (!p) {
                w(-1, "No Transport")
            } else {
                v.readyState = 1, t && g.trigger("ajaxSend", [v, d]), d.async && d.timeout > 0 && (q = setTimeout(function() {
                    v.abort("timeout")
                }, d.timeout));
                try {
                    s = 1, p.send(l, w)
                } catch (z) {
                    if (s < 2) {
                        w(-1, z)
                    } else {
                        throw z
                    }
                }
            }
            return v
        },
        param: function(a, c) {
            var d = [],
                e = function(a, b) {
                    b = f.isFunction(b) ? b() : b, d[d.length] = encodeURIComponent(a) + "=" + encodeURIComponent(b)
                };
            c === b && (c = f.ajaxSettings.traditional);
            if (f.isArray(a) || a.jquery && !f.isPlainObject(a)) {
                f.each(a, function() {
                    e(this.name, this.value)
                })
            } else {
                for (var g in a) {
                    ca(g, a[g], c, e)
                }
            }
            return d.join("&").replace(bD, "+")
        }
    }), f.extend({
        active: 0,
        lastModified: {},
        etag: {}
    });
    var cd = f.now(),
        ce = /(\=)\?(&|$)|\?\?/i;
    f.ajaxSetup({
        jsonp: "callback",
        jsonpCallback: function() {
            return f.expando + "_" + cd++
        }
    }), f.ajaxPrefilter("json jsonp", function(b, c, d) {
        var e = b.contentType === "application/x-www-form-urlencoded" && typeof b.data == "string";
        if (b.dataTypes[0] === "jsonp" || b.jsonp !== !1 && (ce.test(b.url) || e && ce.test(b.data))) {
            var g, h = b.jsonpCallback = f.isFunction(b.jsonpCallback) ? b.jsonpCallback() : b.jsonpCallback,
                i = a[h],
                j = b.url,
                k = b.data,
                l = "$1" + h + "$2";
            b.jsonp !== !1 && (j = j.replace(ce, l), b.url === j && (e && (k = k.replace(ce, l)), b.data === k && (j += (/\?/.test(j) ? "&" : "?") + b.jsonp + "=" + h))), b.url = j, b.data = k, a[h] = function(a) {
                g = [a]
            }, d.always(function() {
                a[h] = i, g && f.isFunction(i) && a[h](g[0])
            }), b.converters["script json"] = function() {
                g || f.error(h + " was not called");
                return g[0]
            }, b.dataTypes[0] = "json";
            return "script"
        }
    }), f.ajaxSetup({
        accepts: {
            script: "text/javascript, application/javascript, application/ecmascript, application/x-ecmascript"
        },
        contents: {
            script: /javascript|ecmascript/
        },
        converters: {
            "text script": function(a) {
                f.globalEval(a);
                return a
            }
        }
    }), f.ajaxPrefilter("script", function(a) {
        a.cache === b && (a.cache = !1), a.crossDomain && (a.type = "GET", a.global = !1)
    }), f.ajaxTransport("script", function(a) {
        if (a.crossDomain) {
            var d, e = c.head || c.getElementsByTagName("head")[0] || c.documentElement;
            return {
                send: function(f, g) {
                    d = c.createElement("script"), d.async = "async", a.scriptCharset && (d.charset = a.scriptCharset), d.src = a.url, d.onload = d.onreadystatechange = function(a, c) {
                        if (c || !d.readyState || /loaded|complete/.test(d.readyState)) {
                            d.onload = d.onreadystatechange = null, e && d.parentNode && e.removeChild(d), d = b, c || g(200, "success")
                        }
                    }, e.insertBefore(d, e.firstChild)
                },
                abort: function() {
                    d && d.onload(0, 1)
                }
            }
        }
    });
    var cf = a.ActiveXObject ? function() {
            for (var a in ch) {
                ch[a](0, 1)
            }
        } : !1,
        cg = 0,
        ch;
    f.ajaxSettings.xhr = a.ActiveXObject ? function() {
            return !this.isLocal && ci() || cj()
        } : ci,
        function(a) {
            f.extend(f.support, {
                ajax: !!a,
                cors: !!a && "withCredentials" in a
            })
        }(f.ajaxSettings.xhr()), f.support.ajax && f.ajaxTransport(function(c) {
            if (!c.crossDomain || f.support.cors) {
                var d;
                return {
                    send: function(e, g) {
                        var h = c.xhr(),
                            i, j;
                        c.username ? h.open(c.type, c.url, c.async, c.username, c.password) : h.open(c.type, c.url, c.async);
                        if (c.xhrFields) {
                            for (j in c.xhrFields) {
                                h[j] = c.xhrFields[j]
                            }
                        }
                        c.mimeType && h.overrideMimeType && h.overrideMimeType(c.mimeType), !c.crossDomain && !e["X-Requested-With"] && (e["X-Requested-With"] = "XMLHttpRequest");
                        try {
                            for (j in e) {
                                h.setRequestHeader(j, e[j])
                            }
                        } catch (k) {}
                         !c.async || h.readyState === 4 ? d() : (i = ++cg, cf && (ch || (ch = {}, f(a).unload(cf)), ch[i] = d), h.onreadystatechange = d)
                    },
                    abort: function() {
                        d && d(0, 1)
                    }
                }
            }
        });
    var ck = {},
        cl, cm, cn = /^(?:toggle|show|hide)$/,
        co = /^([+\-]=)?([\d+.\-]+)([a-z%]*)$/i,
        cp, cq = [
            ["height", "marginTop", "marginBottom", "paddingTop", "paddingBottom"],
            ["width", "marginLeft", "marginRight", "paddingLeft", "paddingRight"],
            ["opacity"]
        ],
        cr;
    f.fn.extend({
        show: function(a, b, c) {
            var d, e;
            if (a || a === 0) {
                return this.animate(cu("show", 3), a, b, c)
            }
            for (var g = 0, h = this.length; g < h; g++) {
                d = this[g], d.style && (e = d.style.display, !f._data(d, "olddisplay") && e === "none" && (e = d.style.display = ""), e === "" && f.css(d, "display") === "none" && f._data(d, "olddisplay", cv(d.nodeName)))
            }
            for (g = 0; g < h; g++) {
                d = this[g];
                if (d.style) {
                    e = d.style.display;
                    if (e === "" || e === "none") {
                        d.style.display = f._data(d, "olddisplay") || ""
                    }
                }
            }
            return this
        },
        hide: function(a, b, c) {
            if (a || a === 0) {
                return this.animate(cu("hide", 3), a, b, c)
            }
            var d, e, g = 0,
                h = this.length;
            for (; g < h; g++) {
                d = this[g], d.style && (e = f.css(d, "display"), e !== "none" && !f._data(d, "olddisplay") && f._data(d, "olddisplay", e))
            }
            for (g = 0; g < h; g++) {
                this[g].style && (this[g].style.display = "none")
            }
            return this
        },
        _toggle: f.fn.toggle,
        toggle: function(a, b, c) {
            var d = typeof a == "boolean";
            f.isFunction(a) && f.isFunction(b) ? this._toggle.apply(this, arguments) : a == null || d ? this.each(function() {
                var b = d ? a : f(this).is(":hidden");
                f(this)[b ? "show" : "hide"]()
            }) : this.animate(cu("toggle", 3), a, b, c);
            return this
        },
        fadeTo: function(a, b, c, d) {
            return this.filter(":hidden").css("opacity", 0).show().end().animate({
                opacity: b
            }, a, c, d)
        },
        animate: function(a, b, c, d) {
            function g() {
                e.queue === !1 && f._mark(this);
                var b = f.extend({}, e),
                    c = this.nodeType === 1,
                    d = c && f(this).is(":hidden"),
                    g, h, i, j, k, l, m, n, o;
                b.animatedProperties = {};
                for (i in a) {
                    g = f.camelCase(i), i !== g && (a[g] = a[i], delete a[i]), h = a[g], f.isArray(h) ? (b.animatedProperties[g] = h[1], h = a[g] = h[0]) : b.animatedProperties[g] = b.specialEasing && b.specialEasing[g] || b.easing || "swing";
                    if (h === "hide" && d || h === "show" && !d) {
                        return b.complete.call(this)
                    }
                    c && (g === "height" || g === "width") && (b.overflow = [this.style.overflow, this.style.overflowX, this.style.overflowY], f.css(this, "display") === "inline" && f.css(this, "float") === "none" && (!f.support.inlineBlockNeedsLayout || cv(this.nodeName) === "inline" ? this.style.display = "inline-block" : this.style.zoom = 1))
                }
                b.overflow != null && (this.style.overflow = "hidden");
                for (i in a) {
                    j = new f.fx(this, b, i), h = a[i], cn.test(h) ? (o = f._data(this, "toggle" + i) || (h === "toggle" ? d ? "show" : "hide" : 0), o ? (f._data(this, "toggle" + i, o === "show" ? "hide" : "show"), j[o]()) : j[h]()) : (k = co.exec(h), l = j.cur(), k ? (m = parseFloat(k[2]), n = k[3] || (f.cssNumber[i] ? "" : "px"), n !== "px" && (f.style(this, i, (m || 1) + n), l = (m || 1) / j.cur() * l, f.style(this, i, l + n)), k[1] && (m = (k[1] === "-=" ? -1 : 1) * m + l), j.custom(l, m, n)) : j.custom(l, h, ""))
                }
                return !0
            }
            var e = f.speed(b, c, d);
            if (f.isEmptyObject(a)) {
                return this.each(e.complete, [!1])
            }
            a = f.extend({}, a);
            return e.queue === !1 ? this.each(g) : this.queue(e.queue, g)
        },
        stop: function(a, c, d) {
            typeof a != "string" && (d = c, c = a, a = b), c && a !== !1 && this.queue(a || "fx", []);
            return this.each(function() {
                function h(a, b, c) {
                    var e = b[c];
                    f.removeData(a, c, !0), e.stop(d)
                }
                var b, c = !1,
                    e = f.timers,
                    g = f._data(this);
                d || f._unmark(!0, this);
                if (a == null) {
                    for (b in g) {
                        g[b] && g[b].stop && b.indexOf(".run") === b.length - 4 && h(this, g, b)
                    }
                } else {
                    g[b = a + ".run"] && g[b].stop && h(this, g, b)
                }
                for (b = e.length; b--;) {
                    e[b].elem === this && (a == null || e[b].queue === a) && (d ? e[b](!0) : e[b].saveState(), c = !0, e.splice(b, 1))
                }(!d || !c) && f.dequeue(this, a)
            })
        }
    }), f.each({
        slideDown: cu("show", 1),
        slideUp: cu("hide", 1),
        slideToggle: cu("toggle", 1),
        fadeIn: {
            opacity: "show"
        },
        fadeOut: {
            opacity: "hide"
        },
        fadeToggle: {
            opacity: "toggle"
        }
    }, function(a, b) {
        f.fn[a] = function(a, c, d) {
            return this.animate(b, a, c, d)
        }
    }), f.extend({
        speed: function(a, b, c) {
            var d = a && typeof a == "object" ? f.extend({}, a) : {
                complete: c || !c && b || f.isFunction(a) && a,
                duration: a,
                easing: c && b || b && !f.isFunction(b) && b
            };
            d.duration = f.fx.off ? 0 : typeof d.duration == "number" ? d.duration : d.duration in f.fx.speeds ? f.fx.speeds[d.duration] : f.fx.speeds._default;
            if (d.queue == null || d.queue === !0) {
                d.queue = "fx"
            }
            d.old = d.complete, d.complete = function(a) {
                f.isFunction(d.old) && d.old.call(this), d.queue ? f.dequeue(this, d.queue) : a !== !1 && f._unmark(this)
            };
            return d
        },
        easing: {
            linear: function(a, b, c, d) {
                return c + d * a
            },
            swing: function(a, b, c, d) {
                return (-Math.cos(a * Math.PI) / 2 + 0.5) * d + c
            }
        },
        timers: [],
        fx: function(a, b, c) {
            this.options = b, this.elem = a, this.prop = c, b.orig = b.orig || {}
        }
    }), f.fx.prototype = {
        update: function() {
            this.options.step && this.options.step.call(this.elem, this.now, this), (f.fx.step[this.prop] || f.fx.step._default)(this)
        },
        cur: function() {
            if (this.elem[this.prop] != null && (!this.elem.style || this.elem.style[this.prop] == null)) {
                return this.elem[this.prop]
            }
            var a, b = f.css(this.elem, this.prop);
            return isNaN(a = parseFloat(b)) ? !b || b === "auto" ? 0 : b : a
        },
        custom: function(a, c, d) {
            function h(a) {
                return e.step(a)
            }
            var e = this,
                g = f.fx;
            this.startTime = cr || cs(), this.end = c, this.now = this.start = a, this.pos = this.state = 0, this.unit = d || this.unit || (f.cssNumber[this.prop] ? "" : "px"), h.queue = this.options.queue, h.elem = this.elem, h.saveState = function() {
                e.options.hide && f._data(e.elem, "fxshow" + e.prop) === b && f._data(e.elem, "fxshow" + e.prop, e.start)
            }, h() && f.timers.push(h) && !cp && (cp = setInterval(g.tick, g.interval))
        },
        show: function() {
            var a = f._data(this.elem, "fxshow" + this.prop);
            this.options.orig[this.prop] = a || f.style(this.elem, this.prop), this.options.show = !0, a !== b ? this.custom(this.cur(), a) : this.custom(this.prop === "width" || this.prop === "height" ? 1 : 0, this.cur()), f(this.elem).show()
        },
        hide: function() {
            this.options.orig[this.prop] = f._data(this.elem, "fxshow" + this.prop) || f.style(this.elem, this.prop), this.options.hide = !0, this.custom(this.cur(), 0)
        },
        step: function(a) {
            var b, c, d, e = cr || cs(),
                g = !0,
                h = this.elem,
                i = this.options;
            if (a || e >= i.duration + this.startTime) {
                this.now = this.end, this.pos = this.state = 1, this.update(), i.animatedProperties[this.prop] = !0;
                for (b in i.animatedProperties) {
                    i.animatedProperties[b] !== !0 && (g = !1)
                }
                if (g) {
                    i.overflow != null && !f.support.shrinkWrapBlocks && f.each(["", "X", "Y"], function(a, b) {
                        h.style["overflow" + b] = i.overflow[a]
                    }), i.hide && f(h).hide();
                    if (i.hide || i.show) {
                        for (b in i.animatedProperties) {
                            f.style(h, b, i.orig[b]), f.removeData(h, "fxshow" + b, !0), f.removeData(h, "toggle" + b, !0)
                        }
                    }
                    d = i.complete, d && (i.complete = !1, d.call(h))
                }
                return !1
            }
            i.duration == Infinity ? this.now = e : (c = e - this.startTime, this.state = c / i.duration, this.pos = f.easing[i.animatedProperties[this.prop]](this.state, c, 0, 1, i.duration), this.now = this.start + (this.end - this.start) * this.pos), this.update();
            return !0
        }
    }, f.extend(f.fx, {
        tick: function() {
            var a, b = f.timers,
                c = 0;
            for (; c < b.length; c++) {
                a = b[c], !a() && b[c] === a && b.splice(c--, 1)
            }
            b.length || f.fx.stop()
        },
        interval: 13,
        stop: function() {
            clearInterval(cp), cp = null
        },
        speeds: {
            slow: 600,
            fast: 200,
            _default: 400
        },
        step: {
            opacity: function(a) {
                f.style(a.elem, "opacity", a.now)
            },
            _default: function(a) {
                a.elem.style && a.elem.style[a.prop] != null ? a.elem.style[a.prop] = a.now + a.unit : a.elem[a.prop] = a.now
            }
        }
    }), f.each(["width", "height"], function(a, b) {
        f.fx.step[b] = function(a) {
            f.style(a.elem, b, Math.max(0, a.now) + a.unit)
        }
    }), f.expr && f.expr.filters && (f.expr.filters.animated = function(a) {
        return f.grep(f.timers, function(b) {
            return a === b.elem
        }).length
    });
    var cw = /^t(?:able|d|h)$/i,
        cx = /^(?:body|html)$/i;
    "getBoundingClientRect" in c.documentElement ? f.fn.offset = function(a) {
        var b = this[0],
            c;
        if (a) {
            return this.each(function(b) {
                f.offset.setOffset(this, a, b)
            })
        }
        if (!b || !b.ownerDocument) {
            return null
        }
        if (b === b.ownerDocument.body) {
            return f.offset.bodyOffset(b)
        }
        try {
            c = b.getBoundingClientRect()
        } catch (d) {}
        var e = b.ownerDocument,
            g = e.documentElement;
        if (!c || !f.contains(g, b)) {
            return c ? {
                top: c.top,
                left: c.left
            } : {
                top: 0,
                left: 0
            }
        }
        var h = e.body,
            i = cy(e),
            j = g.clientTop || h.clientTop || 0,
            k = g.clientLeft || h.clientLeft || 0,
            l = i.pageYOffset || f.support.boxModel && g.scrollTop || h.scrollTop,
            m = i.pageXOffset || f.support.boxModel && g.scrollLeft || h.scrollLeft,
            n = c.top + l - j,
            o = c.left + m - k;
        return {
            top: n,
            left: o
        }
    } : f.fn.offset = function(a) {
        var b = this[0];
        if (a) {
            return this.each(function(b) {
                f.offset.setOffset(this, a, b)
            })
        }
        if (!b || !b.ownerDocument) {
            return null
        }
        if (b === b.ownerDocument.body) {
            return f.offset.bodyOffset(b)
        }
        var c, d = b.offsetParent,
            e = b,
            g = b.ownerDocument,
            h = g.documentElement,
            i = g.body,
            j = g.defaultView,
            k = j ? j.getComputedStyle(b, null) : b.currentStyle,
            l = b.offsetTop,
            m = b.offsetLeft;
        while ((b = b.parentNode) && b !== i && b !== h) {
            if (f.support.fixedPosition && k.position === "fixed") {
                break
            }
            c = j ? j.getComputedStyle(b, null) : b.currentStyle, l -= b.scrollTop, m -= b.scrollLeft, b === d && (l += b.offsetTop, m += b.offsetLeft, f.support.doesNotAddBorder && (!f.support.doesAddBorderForTableAndCells || !cw.test(b.nodeName)) && (l += parseFloat(c.borderTopWidth) || 0, m += parseFloat(c.borderLeftWidth) || 0), e = d, d = b.offsetParent), f.support.subtractsBorderForOverflowNotVisible && c.overflow !== "visible" && (l += parseFloat(c.borderTopWidth) || 0, m += parseFloat(c.borderLeftWidth) || 0), k = c
        }
        if (k.position === "relative" || k.position === "static") {
            l += i.offsetTop, m += i.offsetLeft
        }
        f.support.fixedPosition && k.position === "fixed" && (l += Math.max(h.scrollTop, i.scrollTop), m += Math.max(h.scrollLeft, i.scrollLeft));
        return {
            top: l,
            left: m
        }
    }, f.offset = {
        bodyOffset: function(a) {
            var b = a.offsetTop,
                c = a.offsetLeft;
            f.support.doesNotIncludeMarginInBodyOffset && (b += parseFloat(f.css(a, "marginTop")) || 0, c += parseFloat(f.css(a, "marginLeft")) || 0);
            return {
                top: b,
                left: c
            }
        },
        setOffset: function(a, b, c) {
            var d = f.css(a, "position");
            d === "static" && (a.style.position = "relative");
            var e = f(a),
                g = e.offset(),
                h = f.css(a, "top"),
                i = f.css(a, "left"),
                j = (d === "absolute" || d === "fixed") && f.inArray("auto", [h, i]) > -1,
                k = {},
                l = {},
                m, n;
            j ? (l = e.position(), m = l.top, n = l.left) : (m = parseFloat(h) || 0, n = parseFloat(i) || 0), f.isFunction(b) && (b = b.call(a, c, g)), b.top != null && (k.top = b.top - g.top + m), b.left != null && (k.left = b.left - g.left + n), "using" in b ? b.using.call(a, k) : e.css(k)
        }
    }, f.fn.extend({
        position: function() {
            if (!this[0]) {
                return null
            }
            var a = this[0],
                b = this.offsetParent(),
                c = this.offset(),
                d = cx.test(b[0].nodeName) ? {
                    top: 0,
                    left: 0
                } : b.offset();
            c.top -= parseFloat(f.css(a, "marginTop")) || 0, c.left -= parseFloat(f.css(a, "marginLeft")) || 0, d.top += parseFloat(f.css(b[0], "borderTopWidth")) || 0, d.left += parseFloat(f.css(b[0], "borderLeftWidth")) || 0;
            return {
                top: c.top - d.top,
                left: c.left - d.left
            }
        },
        offsetParent: function() {
            return this.map(function() {
                var a = this.offsetParent || c.body;
                while (a && !cx.test(a.nodeName) && f.css(a, "position") === "static") {
                    a = a.offsetParent
                }
                return a
            })
        }
    }), f.each(["Left", "Top"], function(a, c) {
        var d = "scroll" + c;
        f.fn[d] = function(c) {
            var e, g;
            if (c === b) {
                e = this[0];
                if (!e) {
                    return null
                }
                g = cy(e);
                return g ? "pageXOffset" in g ? g[a ? "pageYOffset" : "pageXOffset"] : f.support.boxModel && g.document.documentElement[d] || g.document.body[d] : e[d]
            }
            return this.each(function() {
                g = cy(this), g ? g.scrollTo(a ? f(g).scrollLeft() : c, a ? c : f(g).scrollTop()) : this[d] = c
            })
        }
    }), f.each(["Height", "Width"], function(a, c) {
        var d = c.toLowerCase();
        f.fn["inner" + c] = function() {
            var a = this[0];
            return a ? a.style ? parseFloat(f.css(a, d, "padding")) : this[d]() : null
        }, f.fn["outer" + c] = function(a) {
            var b = this[0];
            return b ? b.style ? parseFloat(f.css(b, d, a ? "margin" : "border")) : this[d]() : null
        }, f.fn[d] = function(a) {
            var e = this[0];
            if (!e) {
                return a == null ? null : this
            }
            if (f.isFunction(a)) {
                return this.each(function(b) {
                    var c = f(this);
                    c[d](a.call(this, b, c[d]()))
                })
            }
            if (f.isWindow(e)) {
                var g = e.document.documentElement["client" + c],
                    h = e.document.body;
                return e.document.compatMode === "CSS1Compat" && g || h && h["client" + c] || g
            }
            if (e.nodeType === 9) {
                return Math.max(e.documentElement["client" + c], e.body["scroll" + c], e.documentElement["scroll" + c], e.body["offset" + c], e.documentElement["offset" + c])
            }
            if (a === b) {
                var i = f.css(e, d),
                    j = parseFloat(i);
                return f.isNumeric(j) ? j : i
            }
            return this.css(d, typeof a == "string" ? a : a + "px")
        }
    }), a.jQuery = a.$ = f, typeof define == "function" && define.amd && define.amd.jQuery && define("jquery", [], function() {
        return f
    })
})(window);
(function(g, j) {
    var h = 0,
        k = /^ui-id-\d+$/;
    g.ui = g.ui || {};
    if (g.ui.version) {
        return
    }
    g.extend(g.ui, {
        version: "1.9.1",
        keyCode: {
            BACKSPACE: 8,
            COMMA: 188,
            DELETE: 46,
            DOWN: 40,
            END: 35,
            ENTER: 13,
            ESCAPE: 27,
            HOME: 36,
            LEFT: 37,
            NUMPAD_ADD: 107,
            NUMPAD_DECIMAL: 110,
            NUMPAD_DIVIDE: 111,
            NUMPAD_ENTER: 108,
            NUMPAD_MULTIPLY: 106,
            NUMPAD_SUBTRACT: 109,
            PAGE_DOWN: 34,
            PAGE_UP: 33,
            PERIOD: 190,
            RIGHT: 39,
            SPACE: 32,
            TAB: 9,
            UP: 38
        }
    });
    g.fn.extend({
        _focus: g.fn.focus,
        focus: function(b, a) {
            return typeof b === "number" ? this.each(function() {
                var c = this;
                setTimeout(function() {
                    g(c).focus();
                    if (a) {
                        a.call(c)
                    }
                }, b)
            }) : this._focus.apply(this, arguments)
        },
        scrollParent: function() {
            var a;
            if ((g.ui.ie && (/(static|relative)/).test(this.css("position"))) || (/absolute/).test(this.css("position"))) {
                a = this.parents().filter(function() {
                    return (/(relative|absolute|fixed)/).test(g.css(this, "position")) && (/(auto|scroll)/).test(g.css(this, "overflow") + g.css(this, "overflow-y") + g.css(this, "overflow-x"))
                }).eq(0)
            } else {
                a = this.parents().filter(function() {
                    return (/(auto|scroll)/).test(g.css(this, "overflow") + g.css(this, "overflow-y") + g.css(this, "overflow-x"))
                }).eq(0)
            }
            return (/fixed/).test(this.css("position")) || !a.length ? g(document) : a
        },
        zIndex: function(a) {
            if (a !== j) {
                return this.css("zIndex", a)
            }
            if (this.length) {
                var c = g(this[0]),
                    d, b;
                while (c.length && c[0] !== document) {
                    d = c.css("position");
                    if (d === "absolute" || d === "relative" || d === "fixed") {
                        b = parseInt(c.css("zIndex"), 10);
                        if (!isNaN(b) && b !== 0) {
                            return b
                        }
                    }
                    c = c.parent()
                }
            }
            return 0
        },
        uniqueId: function() {
            return this.each(function() {
                if (!this.id) {
                    this.id = "ui-id-" + (++h)
                }
            })
        },
        removeUniqueId: function() {
            return this.each(function() {
                if (k.test(this.id)) {
                    g(this).removeAttr("id")
                }
            })
        }
    });
    if (!g("<a>").outerWidth(1).jquery) {
        g.each(["Width", "Height"], function(d, f) {
            var e = f === "Width" ? ["Left", "Right"] : ["Top", "Bottom"],
                c = f.toLowerCase(),
                a = {
                    innerWidth: g.fn.innerWidth,
                    innerHeight: g.fn.innerHeight,
                    outerWidth: g.fn.outerWidth,
                    outerHeight: g.fn.outerHeight
                };

            function b(s, u, q, r) {
                g.each(e, function() {
                    u -= parseFloat(g.css(s, "padding" + this)) || 0;
                    if (q) {
                        u -= parseFloat(g.css(s, "border" + this + "Width")) || 0
                    }
                    if (r) {
                        u -= parseFloat(g.css(s, "margin" + this)) || 0
                    }
                });
                return u
            }
            g.fn["inner" + f] = function(n) {
                if (n === j) {
                    return a["inner" + f].call(this)
                }
                return this.each(function() {
                    g(this).css(c, b(this, n) + "px")
                })
            };
            g.fn["outer" + f] = function(o, p) {
                if (typeof o !== "number") {
                    return a["outer" + f].call(this, o)
                }
                return this.each(function() {
                    g(this).css(c, b(this, o, true, p) + "px")
                })
            }
        })
    }

    function l(d, f) {
        var b, c, e, a = d.nodeName.toLowerCase();
        if ("area" === a) {
            b = d.parentNode;
            c = b.name;
            if (!d.href || !c || b.nodeName.toLowerCase() !== "map") {
                return false
            }
            e = g("img[usemap=#" + c + "]")[0];
            return !!e && m(e)
        }
        return (/input|select|textarea|button|object/.test(a) ? !d.disabled : "a" === a ? d.href || f : f) && m(d)
    }

    function m(a) {
        return g.expr.filters.visible(a) && !g(a).parents().andSelf().filter(function() {
            return g.css(this, "visibility") === "hidden"
        }).length
    }
    g.extend(g.expr[":"], {
        data: g.expr.createPseudo ? g.expr.createPseudo(function(a) {
            return function(b) {
                return !!g.data(b, a)
            }
        }) : function(a, b, c) {
            return !!g.data(a, c[3])
        },
        focusable: function(a) {
            return l(a, !isNaN(g.attr(a, "tabindex")))
        },
        tabbable: function(a) {
            var c = g.attr(a, "tabindex"),
                b = isNaN(c);
            return (b || c >= 0) && l(a, !b)
        }
    });
    g(function() {
        var b = document.body,
            a = b.appendChild(a = document.createElement("div"));
        a.offsetHeight;
        g.extend(a.style, {
            minHeight: "100px",
            height: "auto",
            padding: 0,
            borderWidth: 0
        });
        g.support.minHeight = a.offsetHeight === 100;
        g.support.selectstart = "onselectstart" in a;
        b.removeChild(a).style.display = "none"
    });
    (function() {
        var a = /msie ([\w.]+)/.exec(navigator.userAgent.toLowerCase()) || [];
        g.ui.ie = a.length ? true : false;
        g.ui.ie6 = parseFloat(a[1], 10) === 6
    })();
    g.fn.extend({
        disableSelection: function() {
            return this.bind((g.support.selectstart ? "selectstart" : "mousedown") + ".ui-disableSelection", function(a) {
                a.preventDefault()
            })
        },
        enableSelection: function() {
            return this.unbind(".ui-disableSelection")
        }
    });
    g.extend(g.ui, {
        plugin: {
            add: function(d, c, a) {
                var e, b = g.ui[d].prototype;
                for (e in a) {
                    b.plugins[e] = b.plugins[e] || [];
                    b.plugins[e].push([c, a[e]])
                }
            },
            call: function(e, c, d) {
                var b, a = e.plugins[c];
                if (!a || !e.element[0].parentNode || e.element[0].parentNode.nodeType === 11) {
                    return
                }
                for (b = 0; b < a.length; b++) {
                    if (e.options[a[b][0]]) {
                        a[b][1].apply(e.element, d)
                    }
                }
            }
        },
        contains: g.contains,
        hasScroll: function(a, c) {
            if (g(a).css("overflow") === "hidden") {
                return false
            }
            var d = (c && c === "left") ? "scrollLeft" : "scrollTop",
                b = false;
            if (a[d] > 0) {
                return true
            }
            a[d] = 1;
            b = (a[d] > 0);
            a[d] = 0;
            return b
        },
        isOverAxis: function(b, c, a) {
            return (b > c) && (b < (c + a))
        },
        isOver: function(a, e, b, c, f, d) {
            return g.ui.isOverAxis(a, b, f) && g.ui.isOverAxis(e, c, d)
        }
    })
})(jQuery);
(function(f, h) {
    var g = 0,
        j = Array.prototype.slice,
        k = f.cleanData;
    f.cleanData = function(d) {
        for (var c = 0, b;
            (b = d[c]) != null; c++) {
            try {
                f(b).triggerHandler("remove")
            } catch (a) {}
        }
        k(d)
    };
    f.widget = function(o, d, p) {
        var a, b, e, c, n = o.split(".")[0];
        o = o.split(".")[1];
        a = n + "-" + o;
        if (!p) {
            p = d;
            d = f.Widget
        }
        f.expr[":"][a.toLowerCase()] = function(l) {
            return !!f.data(l, a)
        };
        f[n] = f[n] || {};
        b = f[n][o];
        e = f[n][o] = function(m, l) {
            if (!this._createWidget) {
                return new e(m, l)
            }
            if (arguments.length) {
                this._createWidget(m, l)
            }
        };
        f.extend(e, b, {
            version: p.version,
            _proto: f.extend({}, p),
            _childConstructors: []
        });
        c = new d();
        c.options = f.widget.extend({}, c.options);
        f.each(p, function(l, m) {
            if (f.isFunction(m)) {
                p[l] = (function() {
                    var s = function() {
                            return d.prototype[l].apply(this, arguments)
                        },
                        r = function(q) {
                            return d.prototype[l].apply(this, q)
                        };
                    return function() {
                        var q = this._super,
                            v = this._superApply,
                            u;
                        this._super = s;
                        this._superApply = r;
                        u = m.apply(this, arguments);
                        this._super = q;
                        this._superApply = v;
                        return u
                    }
                })()
            }
        });
        e.prototype = f.widget.extend(c, {
            widgetEventPrefix: c.widgetEventPrefix || o
        }, p, {
            constructor: e,
            namespace: n,
            widgetName: o,
            widgetBaseClass: a,
            widgetFullName: a
        });
        if (b) {
            f.each(b._childConstructors, function(m, l) {
                var q = l.prototype;
                f.widget(q.namespace + "." + q.widgetName, e, l._proto)
            });
            delete b._childConstructors
        } else {
            d._childConstructors.push(e)
        }
        f.widget.bridge(o, e)
    };
    f.widget.extend = function(a) {
        var e = j.call(arguments, 1),
            b = 0,
            l = e.length,
            d, c;
        for (; b < l; b++) {
            for (d in e[b]) {
                c = e[b][d];
                if (e[b].hasOwnProperty(d) && c !== h) {
                    if (f.isPlainObject(c)) {
                        a[d] = f.isPlainObject(a[d]) ? f.widget.extend({}, a[d], c) : f.widget.extend({}, c)
                    } else {
                        a[d] = c
                    }
                }
            }
        }
        return a
    };
    f.widget.bridge = function(b, c) {
        var a = c.prototype.widgetFullName;
        f.fn[b] = function(e) {
            var n = typeof e === "string",
                m = j.call(arguments, 1),
                d = this;
            e = !n && m.length ? f.widget.extend.apply(null, [e].concat(m)) : e;
            if (n) {
                this.each(function() {
                    var o, l = f.data(this, a);
                    if (!l) {
                        return f.error("cannot call methods on " + b + " prior to initialization; attempted to call method '" + e + "'")
                    }
                    if (!f.isFunction(l[e]) || e.charAt(0) === "_") {
                        return f.error("no such method '" + e + "' for " + b + " widget instance")
                    }
                    o = l[e].apply(l, m);
                    if (o !== l && o !== h) {
                        d = o && o.jquery ? d.pushStack(o.get()) : o;
                        return false
                    }
                })
            } else {
                this.each(function() {
                    var l = f.data(this, a);
                    if (l) {
                        l.option(e || {})._init()
                    } else {
                        new c(e, this)
                    }
                })
            }
            return d
        }
    };
    f.Widget = function() {};
    f.Widget._childConstructors = [];
    f.Widget.prototype = {
        widgetName: "widget",
        widgetEventPrefix: "",
        defaultElement: "<div>",
        options: {
            disabled: false,
            create: null
        },
        _createWidget: function(b, a) {
            a = f(a || this.defaultElement || this)[0];
            this.element = f(a);
            this.uuid = g++;
            this.eventNamespace = "." + this.widgetName + this.uuid;
            this.options = f.widget.extend({}, this.options, this._getCreateOptions(), b);
            this.bindings = f();
            this.hoverable = f();
            this.focusable = f();
            if (a !== this) {
                f.data(a, this.widgetName, this);
                f.data(a, this.widgetFullName, this);
                this._on(this.element, {
                    remove: function(c) {
                        if (c.target === a) {
                            this.destroy()
                        }
                    }
                });
                this.document = f(a.style ? a.ownerDocument : a.document || a);
                this.window = f(this.document[0].defaultView || this.document[0].parentWindow)
            }
            this._create();
            this._trigger("create", null, this._getCreateEventData());
            this._init()
        },
        _getCreateOptions: f.noop,
        _getCreateEventData: f.noop,
        _create: f.noop,
        _init: f.noop,
        destroy: function() {
            this._destroy();
            this.element.unbind(this.eventNamespace).removeData(this.widgetName).removeData(this.widgetFullName).removeData(f.camelCase(this.widgetFullName));
            this.widget().unbind(this.eventNamespace).removeAttr("aria-disabled").removeClass(this.widgetFullName + "-disabled ui-state-disabled");
            this.bindings.unbind(this.eventNamespace);
            this.hoverable.removeClass("ui-state-hover");
            this.focusable.removeClass("ui-state-focus")
        },
        _destroy: f.noop,
        widget: function() {
            return this.element
        },
        option: function(c, b) {
            var m = c,
                a, d, e;
            if (arguments.length === 0) {
                return f.widget.extend({}, this.options)
            }
            if (typeof c === "string") {
                m = {};
                a = c.split(".");
                c = a.shift();
                if (a.length) {
                    d = m[c] = f.widget.extend({}, this.options[c]);
                    for (e = 0; e < a.length - 1; e++) {
                        d[a[e]] = d[a[e]] || {};
                        d = d[a[e]]
                    }
                    c = a.pop();
                    if (b === h) {
                        return d[c] === h ? null : d[c]
                    }
                    d[c] = b
                } else {
                    if (b === h) {
                        return this.options[c] === h ? null : this.options[c]
                    }
                    m[c] = b
                }
            }
            this._setOptions(m);
            return this
        },
        _setOptions: function(b) {
            var a;
            for (a in b) {
                this._setOption(a, b[a])
            }
            return this
        },
        _setOption: function(b, a) {
            this.options[b] = a;
            if (b === "disabled") {
                this.widget().toggleClass(this.widgetFullName + "-disabled ui-state-disabled", !!a).attr("aria-disabled", a);
                this.hoverable.removeClass("ui-state-hover");
                this.focusable.removeClass("ui-state-focus")
            }
            return this
        },
        enable: function() {
            return this._setOption("disabled", false)
        },
        disable: function() {
            return this._setOption("disabled", true)
        },
        _on: function(b, c) {
            var a, d = this;
            if (!c) {
                c = b;
                b = this.element;
                a = this.widget()
            } else {
                b = a = f(b);
                this.bindings = this.bindings.add(b)
            }
            f.each(c, function(s, u) {
                function p() {
                    if (d.options.disabled === true || f(this).hasClass("ui-state-disabled")) {
                        return
                    }
                    return (typeof u === "string" ? d[u] : u).apply(d, arguments)
                }
                if (typeof u !== "string") {
                    p.guid = u.guid = u.guid || p.guid || f.guid++
                }
                var e = s.match(/^(\w+)\s*(.*)$/),
                    q = e[1] + d.eventNamespace,
                    r = e[2];
                if (r) {
                    a.delegate(r, q, p)
                } else {
                    b.bind(q, p)
                }
            })
        },
        _off: function(a, b) {
            b = (b || "").split(" ").join(this.eventNamespace + " ") + this.eventNamespace;
            a.unbind(b).undelegate(b)
        },
        _delay: function(a, b) {
            function c() {
                return (typeof a === "string" ? d[a] : a).apply(d, arguments)
            }
            var d = this;
            return setTimeout(c, b || 0)
        },
        _hoverable: function(a) {
            this.hoverable = this.hoverable.add(a);
            this._on(a, {
                mouseenter: function(b) {
                    f(b.currentTarget).addClass("ui-state-hover")
                },
                mouseleave: function(b) {
                    f(b.currentTarget).removeClass("ui-state-hover")
                }
            })
        },
        _focusable: function(a) {
            this.focusable = this.focusable.add(a);
            this._on(a, {
                focusin: function(b) {
                    f(b.currentTarget).addClass("ui-state-focus")
                },
                focusout: function(b) {
                    f(b.currentTarget).removeClass("ui-state-focus")
                }
            })
        },
        _trigger: function(l, e, d) {
            var a, b, c = this.options[l];
            d = d || {};
            e = f.Event(e);
            e.type = (l === this.widgetEventPrefix ? l : this.widgetEventPrefix + l).toLowerCase();
            e.target = this.element[0];
            b = e.originalEvent;
            if (b) {
                for (a in b) {
                    if (!(a in e)) {
                        e[a] = b[a]
                    }
                }
            }
            this.element.trigger(e, d);
            return !(f.isFunction(c) && c.apply(this.element[0], [e].concat(d)) === false || e.isDefaultPrevented())
        }
    };
    f.each({
        show: "fadeIn",
        hide: "fadeOut"
    }, function(a, b) {
        f.Widget.prototype["_" + a] = function(e, m, c) {
            if (typeof m === "string") {
                m = {
                    effect: m
                }
            }
            var d, n = !m ? a : m === true || typeof m === "number" ? b : m.effect || b;
            m = m || {};
            if (typeof m === "number") {
                m = {
                    duration: m
                }
            }
            d = !f.isEmptyObject(m);
            m.complete = c;
            if (m.delay) {
                e.delay(m.delay)
            }
            if (d && f.effects && (f.effects.effect[n] || f.uiBackCompat !== false && f.effects[n])) {
                e[a](m)
            } else {
                if (n !== a && e[n]) {
                    e[n](m.duration, m.easing, c)
                } else {
                    e.queue(function(l) {
                        f(this)[a]();
                        if (c) {
                            c.call(e[0])
                        }
                        l()
                    })
                }
            }
        }
    });
    if (f.uiBackCompat !== false) {
        f.Widget.prototype._getCreateOptions = function() {
            return f.metadata && f.metadata.get(this.element[0])[this.widgetName]
        }
    }
})(jQuery);
(function(d, f) {
    var e = false;
    d(document).mouseup(function(a) {
        e = false
    });
    d.widget("ui.mouse", {
        version: "1.9.1",
        options: {
            cancel: "input,textarea,button,select,option",
            distance: 1,
            delay: 0
        },
        _mouseInit: function() {
            var a = this;
            this.element.bind("mousedown." + this.widgetName, function(b) {
                return a._mouseDown(b)
            }).bind("click." + this.widgetName, function(b) {
                if (true === d.data(b.target, a.widgetName + ".preventClickEvent")) {
                    d.removeData(b.target, a.widgetName + ".preventClickEvent");
                    b.stopImmediatePropagation();
                    return false
                }
            });
            this.started = false
        },
        _mouseDestroy: function() {
            this.element.unbind("." + this.widgetName);
            if (this._mouseMoveDelegate) {
                d(document).unbind("mousemove." + this.widgetName, this._mouseMoveDelegate).unbind("mouseup." + this.widgetName, this._mouseUpDelegate)
            }
        },
        _mouseDown: function(b) {
            if (e) {
                return
            }(this._mouseStarted && this._mouseUp(b));
            this._mouseDownEvent = b;
            var c = this,
                a = (b.which === 1),
                h = (typeof this.options.cancel === "string" && b.target.nodeName ? d(b.target).closest(this.options.cancel).length : false);
            if (!a || h || !this._mouseCapture(b)) {
                return true
            }
            this.mouseDelayMet = !this.options.delay;
            if (!this.mouseDelayMet) {
                this._mouseDelayTimer = setTimeout(function() {
                    c.mouseDelayMet = true
                }, this.options.delay)
            }
            if (this._mouseDistanceMet(b) && this._mouseDelayMet(b)) {
                this._mouseStarted = (this._mouseStart(b) !== false);
                if (!this._mouseStarted) {
                    b.preventDefault();
                    return true
                }
            }
            if (true === d.data(b.target, this.widgetName + ".preventClickEvent")) {
                d.removeData(b.target, this.widgetName + ".preventClickEvent")
            }
            this._mouseMoveDelegate = function(g) {
                return c._mouseMove(g)
            };
            this._mouseUpDelegate = function(g) {
                return c._mouseUp(g)
            };
            d(document).bind("mousemove." + this.widgetName, this._mouseMoveDelegate).bind("mouseup." + this.widgetName, this._mouseUpDelegate);
            b.preventDefault();
            e = true;
            return true
        },
        _mouseMove: function(a) {
            if (d.ui.ie && !(document.documentMode >= 9) && !a.button) {
                return this._mouseUp(a)
            }
            if (this._mouseStarted) {
                this._mouseDrag(a);
                return a.preventDefault()
            }
            if (this._mouseDistanceMet(a) && this._mouseDelayMet(a)) {
                this._mouseStarted = (this._mouseStart(this._mouseDownEvent, a) !== false);
                (this._mouseStarted ? this._mouseDrag(a) : this._mouseUp(a))
            }
            return !this._mouseStarted
        },
        _mouseUp: function(a) {
            d(document).unbind("mousemove." + this.widgetName, this._mouseMoveDelegate).unbind("mouseup." + this.widgetName, this._mouseUpDelegate);
            if (this._mouseStarted) {
                this._mouseStarted = false;
                if (a.target === this._mouseDownEvent.target) {
                    d.data(a.target, this.widgetName + ".preventClickEvent", true)
                }
                this._mouseStop(a)
            }
            return false
        },
        _mouseDistanceMet: function(a) {
            return (Math.max(Math.abs(this._mouseDownEvent.pageX - a.pageX), Math.abs(this._mouseDownEvent.pageY - a.pageY)) >= this.options.distance)
        },
        _mouseDelayMet: function(a) {
            return this.mouseDelayMet
        },
        _mouseStart: function(a) {},
        _mouseDrag: function(a) {},
        _mouseStop: function(a) {},
        _mouseCapture: function(a) {
            return true
        }
    })
})(jQuery);
(function(d, c) {
    d.widget("ui.draggable", d.ui.mouse, {
        version: "1.9.1",
        widgetEventPrefix: "drag",
        options: {
            addClasses: true,
            appendTo: "parent",
            axis: false,
            connectToSortable: false,
            containment: false,
            cursor: "auto",
            cursorAt: false,
            grid: false,
            handle: false,
            helper: "original",
            iframeFix: false,
            opacity: false,
            refreshPositions: false,
            revert: false,
            revertDuration: 500,
            scope: "default",
            scroll: true,
            scrollSensitivity: 20,
            scrollSpeed: 20,
            snap: false,
            snapMode: "both",
            snapTolerance: 20,
            stack: false,
            zIndex: false
        },
        _create: function() {
            if (this.options.helper == "original" && !(/^(?:r|a|f)/).test(this.element.css("position"))) {
                this.element[0].style.position = "relative"
            }(this.options.addClasses && this.element.addClass("ui-draggable"));
            (this.options.disabled && this.element.addClass("ui-draggable-disabled"));
            this._mouseInit()
        },
        _destroy: function() {
            this.element.removeClass("ui-draggable ui-draggable-dragging ui-draggable-disabled");
            this._mouseDestroy()
        },
        _mouseCapture: function(b) {
            var a = this.options;
            if (this.helper || a.disabled || d(b.target).is(".ui-resizable-handle")) {
                return false
            }
            this.handle = this._getHandle(b);
            if (!this.handle) {
                return false
            }
            d(a.iframeFix === true ? "iframe" : a.iframeFix).each(function() {
                d('<div class="ui-draggable-iframeFix" style="background: #fff;"></div>').css({
                    width: this.offsetWidth + "px",
                    height: this.offsetHeight + "px",
                    position: "absolute",
                    opacity: "0.001",
                    zIndex: 1000
                }).css(d(this).offset()).appendTo("body")
            });
            return true
        },
        _mouseStart: function(b) {
            var a = this.options;
            this.helper = this._createHelper(b);
            this.helper.addClass("ui-draggable-dragging");
            this._cacheHelperProportions();
            if (d.ui.ddmanager) {
                d.ui.ddmanager.current = this
            }
            this._cacheMargins();
            this.cssPosition = this.helper.css("position");
            this.scrollParent = this.helper.scrollParent();
            this.offset = this.positionAbs = this.element.offset();
            this.offset = {
                top: this.offset.top - this.margins.top,
                left: this.offset.left - this.margins.left
            };
            d.extend(this.offset, {
                click: {
                    left: b.pageX - this.offset.left,
                    top: b.pageY - this.offset.top
                },
                parent: this._getParentOffset(),
                relative: this._getRelativeOffset()
            });
            this.originalPosition = this.position = this._generatePosition(b);
            this.originalPageX = b.pageX;
            this.originalPageY = b.pageY;
            (a.cursorAt && this._adjustOffsetFromHelper(a.cursorAt));
            if (a.containment) {
                this._setContainment()
            }
            if (this._trigger("start", b) === false) {
                this._clear();
                return false
            }
            this._cacheHelperProportions();
            if (d.ui.ddmanager && !a.dropBehaviour) {
                d.ui.ddmanager.prepareOffsets(this, b)
            }
            this._mouseDrag(b, true);
            if (d.ui.ddmanager) {
                d.ui.ddmanager.dragStart(this, b)
            }
            return true
        },
        _mouseDrag: function(f, a) {
            this.position = this._generatePosition(f);
            this.positionAbs = this._convertPositionTo("absolute");
            if (!a) {
                var b = this._uiHash();
                if (this._trigger("drag", f, b) === false) {
                    this._mouseUp({});
                    return false
                }
                this.position = b.position
            }
            if (!this.options.axis || this.options.axis != "y") {
                this.helper[0].style.left = this.position.left + "px"
            }
            if (!this.options.axis || this.options.axis != "x") {
                this.helper[0].style.top = this.position.top + "px"
            }
            if (d.ui.ddmanager) {
                d.ui.ddmanager.drag(this, f)
            }
            return false
        },
        _mouseStop: function(h) {
            var a = false;
            if (d.ui.ddmanager && !this.options.dropBehaviour) {
                a = d.ui.ddmanager.drop(this, h)
            }
            if (this.dropped) {
                a = this.dropped;
                this.dropped = false
            }
            var k = this.element[0],
                b = false;
            while (k && (k = k.parentNode)) {
                if (k == document) {
                    b = true
                }
            }
            if (!b && this.options.helper === "original") {
                return false
            }
            if ((this.options.revert == "invalid" && !a) || (this.options.revert == "valid" && a) || this.options.revert === true || (d.isFunction(this.options.revert) && this.options.revert.call(this.element, a))) {
                var j = this;
                d(this.helper).animate(this.originalPosition, parseInt(this.options.revertDuration, 10), function() {
                    if (j._trigger("stop", h) !== false) {
                        j._clear()
                    }
                })
            } else {
                if (this._trigger("stop", h) !== false) {
                    this._clear()
                }
            }
            return false
        },
        _mouseUp: function(a) {
            d("div.ui-draggable-iframeFix").each(function() {
                this.parentNode.removeChild(this)
            });
            if (d.ui.ddmanager) {
                d.ui.ddmanager.dragStop(this, a)
            }
            return d.ui.mouse.prototype._mouseUp.call(this, a)
        },
        cancel: function() {
            if (this.helper.is(".ui-draggable-dragging")) {
                this._mouseUp({})
            } else {
                this._clear()
            }
            return this
        },
        _getHandle: function(b) {
            var a = !this.options.handle || !d(this.options.handle, this.element).length ? true : false;
            d(this.options.handle, this.element).find("*").andSelf().each(function() {
                if (this == b.target) {
                    a = true
                }
            });
            return a
        },
        _createHelper: function(b) {
            var a = this.options;
            var f = d.isFunction(a.helper) ? d(a.helper.apply(this.element[0], [b])) : (a.helper == "clone" ? this.element.clone().removeAttr("id") : this.element);
            if (!f.parents("body").length) {
                f.appendTo((a.appendTo == "parent" ? this.element[0].parentNode : a.appendTo))
            }
            if (f[0] != this.element[0] && !(/(fixed|absolute)/).test(f.css("position"))) {
                f.css("position", "absolute")
            }
            return f
        },
        _adjustOffsetFromHelper: function(a) {
            if (typeof a == "string") {
                a = a.split(" ")
            }
            if (d.isArray(a)) {
                a = {
                    left: +a[0],
                    top: +a[1] || 0
                }
            }
            if ("left" in a) {
                this.offset.click.left = a.left + this.margins.left
            }
            if ("right" in a) {
                this.offset.click.left = this.helperProportions.width - a.right + this.margins.left
            }
            if ("top" in a) {
                this.offset.click.top = a.top + this.margins.top
            }
            if ("bottom" in a) {
                this.offset.click.top = this.helperProportions.height - a.bottom + this.margins.top
            }
        },
        _getParentOffset: function() {
            this.offsetParent = this.helper.offsetParent();
            var a = this.offsetParent.offset();
            if (this.cssPosition == "absolute" && this.scrollParent[0] != document && d.contains(this.scrollParent[0], this.offsetParent[0])) {
                a.left += this.scrollParent.scrollLeft();
                a.top += this.scrollParent.scrollTop()
            }
            if ((this.offsetParent[0] == document.body) || (this.offsetParent[0].tagName && this.offsetParent[0].tagName.toLowerCase() == "html" && d.ui.ie)) {
                a = {
                    top: 0,
                    left: 0
                }
            }
            return {
                top: a.top + (parseInt(this.offsetParent.css("borderTopWidth"), 10) || 0),
                left: a.left + (parseInt(this.offsetParent.css("borderLeftWidth"), 10) || 0)
            }
        },
        _getRelativeOffset: function() {
            if (this.cssPosition == "relative") {
                var a = this.element.position();
                return {
                    top: a.top - (parseInt(this.helper.css("top"), 10) || 0) + this.scrollParent.scrollTop(),
                    left: a.left - (parseInt(this.helper.css("left"), 10) || 0) + this.scrollParent.scrollLeft()
                }
            } else {
                return {
                    top: 0,
                    left: 0
                }
            }
        },
        _cacheMargins: function() {
            this.margins = {
                left: (parseInt(this.element.css("marginLeft"), 10) || 0),
                top: (parseInt(this.element.css("marginTop"), 10) || 0),
                right: (parseInt(this.element.css("marginRight"), 10) || 0),
                bottom: (parseInt(this.element.css("marginBottom"), 10) || 0)
            }
        },
        _cacheHelperProportions: function() {
            this.helperProportions = {
                width: this.helper.outerWidth(),
                height: this.helper.outerHeight()
            }
        },
        _setContainment: function() {
            var b = this.options;
            if (b.containment == "parent") {
                b.containment = this.helper[0].parentNode
            }
            if (b.containment == "document" || b.containment == "window") {
                this.containment = [b.containment == "document" ? 0 : d(window).scrollLeft() - this.offset.relative.left - this.offset.parent.left, b.containment == "document" ? 0 : d(window).scrollTop() - this.offset.relative.top - this.offset.parent.top, (b.containment == "document" ? 0 : d(window).scrollLeft()) + d(b.containment == "document" ? document : window).width() - this.helperProportions.width - this.margins.left, (b.containment == "document" ? 0 : d(window).scrollTop()) + (d(b.containment == "document" ? document : window).height() || document.body.parentNode.scrollHeight) - this.helperProportions.height - this.margins.top]
            }
            if (!(/^(document|window|parent)$/).test(b.containment) && b.containment.constructor != Array) {
                var a = d(b.containment);
                var k = a[0];
                if (!k) {
                    return
                }
                var j = a.offset();
                var l = (d(k).css("overflow") != "hidden");
                this.containment = [(parseInt(d(k).css("borderLeftWidth"), 10) || 0) + (parseInt(d(k).css("paddingLeft"), 10) || 0), (parseInt(d(k).css("borderTopWidth"), 10) || 0) + (parseInt(d(k).css("paddingTop"), 10) || 0), (l ? Math.max(k.scrollWidth, k.offsetWidth) : k.offsetWidth) - (parseInt(d(k).css("borderLeftWidth"), 10) || 0) - (parseInt(d(k).css("paddingRight"), 10) || 0) - this.helperProportions.width - this.margins.left - this.margins.right, (l ? Math.max(k.scrollHeight, k.offsetHeight) : k.offsetHeight) - (parseInt(d(k).css("borderTopWidth"), 10) || 0) - (parseInt(d(k).css("paddingBottom"), 10) || 0) - this.helperProportions.height - this.margins.top - this.margins.bottom];
                this.relative_container = a
            } else {
                if (b.containment.constructor == Array) {
                    this.containment = b.containment
                }
            }
        },
        _convertPositionTo: function(j, a) {
            if (!a) {
                a = this.position
            }
            var l = j == "absolute" ? 1 : -1;
            var k = this.options,
                m = this.cssPosition == "absolute" && !(this.scrollParent[0] != document && d.contains(this.scrollParent[0], this.offsetParent[0])) ? this.offsetParent : this.scrollParent,
                b = (/(html|body)/i).test(m[0].tagName);
            return {
                top: (a.top + this.offset.relative.top * l + this.offset.parent.top * l - ((this.cssPosition == "fixed" ? -this.scrollParent.scrollTop() : (b ? 0 : m.scrollTop())) * l)),
                left: (a.left + this.offset.relative.left * l + this.offset.parent.left * l - ((this.cssPosition == "fixed" ? -this.scrollParent.scrollLeft() : b ? 0 : m.scrollLeft()) * l))
            }
        },
        _generatePosition: function(s) {
            var r = this.options,
                a = this.cssPosition == "absolute" && !(this.scrollParent[0] != document && d.contains(this.scrollParent[0], this.offsetParent[0])) ? this.offsetParent : this.scrollParent,
                n = (/(html|body)/i).test(a[0].tagName);
            var o = s.pageX;
            var p = s.pageY;
            if (this.originalPosition) {
                var u;
                if (this.containment) {
                    if (this.relative_container) {
                        var b = this.relative_container.offset();
                        u = [this.containment[0] + b.left, this.containment[1] + b.top, this.containment[2] + b.left, this.containment[3] + b.top]
                    } else {
                        u = this.containment
                    }
                    if (s.pageX - this.offset.click.left < u[0]) {
                        o = u[0] + this.offset.click.left
                    }
                    if (s.pageY - this.offset.click.top < u[1]) {
                        p = u[1] + this.offset.click.top
                    }
                    if (s.pageX - this.offset.click.left > u[2]) {
                        o = u[2] + this.offset.click.left
                    }
                    if (s.pageY - this.offset.click.top > u[3]) {
                        p = u[3] + this.offset.click.top
                    }
                }
                if (r.grid) {
                    var m = r.grid[1] ? this.originalPageY + Math.round((p - this.originalPageY) / r.grid[1]) * r.grid[1] : this.originalPageY;
                    p = u ? (!(m - this.offset.click.top < u[1] || m - this.offset.click.top > u[3]) ? m : (!(m - this.offset.click.top < u[1]) ? m - r.grid[1] : m + r.grid[1])) : m;
                    var q = r.grid[0] ? this.originalPageX + Math.round((o - this.originalPageX) / r.grid[0]) * r.grid[0] : this.originalPageX;
                    o = u ? (!(q - this.offset.click.left < u[0] || q - this.offset.click.left > u[2]) ? q : (!(q - this.offset.click.left < u[0]) ? q - r.grid[0] : q + r.grid[0])) : q
                }
            }
            return {
                top: (p - this.offset.click.top - this.offset.relative.top - this.offset.parent.top + ((this.cssPosition == "fixed" ? -this.scrollParent.scrollTop() : (n ? 0 : a.scrollTop())))),
                left: (o - this.offset.click.left - this.offset.relative.left - this.offset.parent.left + ((this.cssPosition == "fixed" ? -this.scrollParent.scrollLeft() : n ? 0 : a.scrollLeft())))
            }
        },
        _clear: function() {
            this.helper.removeClass("ui-draggable-dragging");
            if (this.helper[0] != this.element[0] && !this.cancelHelperRemoval) {
                this.helper.remove()
            }
            this.helper = null;
            this.cancelHelperRemoval = false
        },
        _trigger: function(f, b, a) {
            a = a || this._uiHash();
            d.ui.plugin.call(this, f, [b, a]);
            if (f == "drag") {
                this.positionAbs = this._convertPositionTo("absolute")
            }
            return d.Widget.prototype._trigger.call(this, f, b, a)
        },
        plugins: {},
        _uiHash: function(a) {
            return {
                helper: this.helper,
                position: this.position,
                originalPosition: this.originalPosition,
                offset: this.positionAbs
            }
        }
    });
    d.ui.plugin.add("draggable", "connectToSortable", {
        start: function(j, b) {
            var h = d(this).data("draggable"),
                a = h.options,
                k = d.extend({}, b, {
                    item: h.element
                });
            h.sortables = [];
            d(a.connectToSortable).each(function() {
                var e = d.data(this, "sortable");
                if (e && !e.options.disabled) {
                    h.sortables.push({
                        instance: e,
                        shouldRevert: e.options.revert
                    });
                    e.refreshPositions();
                    e._trigger("activate", j, k)
                }
            })
        },
        stop: function(g, a) {
            var b = d(this).data("draggable"),
                h = d.extend({}, a, {
                    item: b.element
                });
            d.each(b.sortables, function() {
                if (this.instance.isOver) {
                    this.instance.isOver = 0;
                    b.cancelHelperRemoval = true;
                    this.instance.cancelHelperRemoval = false;
                    if (this.shouldRevert) {
                        this.instance.options.revert = true
                    }
                    this.instance._mouseStop(g);
                    this.instance.options.helper = this.instance.options._helper;
                    if (b.options.helper == "original") {
                        this.instance.currentItem.css({
                            top: "auto",
                            left: "auto"
                        })
                    }
                } else {
                    this.instance.cancelHelperRemoval = false;
                    this.instance._trigger("deactivate", g, h)
                }
            })
        },
        drag: function(j, a) {
            var b = d(this).data("draggable"),
                k = this;
            var h = function(u) {
                var f = this.offset.click.top,
                    g = this.offset.click.left;
                var w = this.positionAbs.top,
                    r = this.positionAbs.left;
                var s = u.height,
                    o = u.width;
                var e = u.top,
                    v = u.left;
                return d.ui.isOver(w + f, r + g, e, v, s, o)
            };
            d.each(b.sortables, function(f) {
                var g = false;
                var e = this;
                this.instance.positionAbs = b.positionAbs;
                this.instance.helperProportions = b.helperProportions;
                this.instance.offset.click = b.offset.click;
                if (this.instance._intersectsWith(this.instance.containerCache)) {
                    g = true;
                    d.each(b.sortables, function() {
                        this.instance.positionAbs = b.positionAbs;
                        this.instance.helperProportions = b.helperProportions;
                        this.instance.offset.click = b.offset.click;
                        if (this != e && this.instance._intersectsWith(this.instance.containerCache) && d.ui.contains(e.instance.element[0], this.instance.element[0])) {
                            g = false
                        }
                        return g
                    })
                }
                if (g) {
                    if (!this.instance.isOver) {
                        this.instance.isOver = 1;
                        this.instance.currentItem = d(k).clone().removeAttr("id").appendTo(this.instance.element).data("sortable-item", true);
                        this.instance.options._helper = this.instance.options.helper;
                        this.instance.options.helper = function() {
                            return a.helper[0]
                        };
                        j.target = this.instance.currentItem[0];
                        this.instance._mouseCapture(j, true);
                        this.instance._mouseStart(j, true, true);
                        this.instance.offset.click.top = b.offset.click.top;
                        this.instance.offset.click.left = b.offset.click.left;
                        this.instance.offset.parent.left -= b.offset.parent.left - this.instance.offset.parent.left;
                        this.instance.offset.parent.top -= b.offset.parent.top - this.instance.offset.parent.top;
                        b._trigger("toSortable", j);
                        b.dropped = this.instance.element;
                        b.currentItem = b.element;
                        this.instance.fromOutside = b
                    }
                    if (this.instance.currentItem) {
                        this.instance._mouseDrag(j)
                    }
                } else {
                    if (this.instance.isOver) {
                        this.instance.isOver = 0;
                        this.instance.cancelHelperRemoval = true;
                        this.instance.options.revert = false;
                        this.instance._trigger("out", j, this.instance._uiHash(this.instance));
                        this.instance._mouseStop(j, true);
                        this.instance.options.helper = this.instance.options._helper;
                        this.instance.currentItem.remove();
                        if (this.instance.placeholder) {
                            this.instance.placeholder.remove()
                        }
                        b._trigger("fromSortable", j);
                        b.dropped = false
                    }
                }
            })
        }
    });
    d.ui.plugin.add("draggable", "cursor", {
        start: function(g, b) {
            var h = d("body"),
                a = d(this).data("draggable").options;
            if (h.css("cursor")) {
                a._cursor = h.css("cursor")
            }
            h.css("cursor", a.cursor)
        },
        stop: function(f, b) {
            var a = d(this).data("draggable").options;
            if (a._cursor) {
                d("body").css("cursor", a._cursor)
            }
        }
    });
    d.ui.plugin.add("draggable", "opacity", {
        start: function(g, b) {
            var h = d(b.helper),
                a = d(this).data("draggable").options;
            if (h.css("opacity")) {
                a._opacity = h.css("opacity")
            }
            h.css("opacity", a.opacity)
        },
        stop: function(f, b) {
            var a = d(this).data("draggable").options;
            if (a._opacity) {
                d(b.helper).css("opacity", a._opacity)
            }
        }
    });
    d.ui.plugin.add("draggable", "scroll", {
        start: function(b, a) {
            var f = d(this).data("draggable");
            if (f.scrollParent[0] != document && f.scrollParent[0].tagName != "HTML") {
                f.overflowOffset = f.scrollParent.offset()
            }
        },
        drag: function(h, b) {
            var j = d(this).data("draggable"),
                a = j.options,
                k = false;
            if (j.scrollParent[0] != document && j.scrollParent[0].tagName != "HTML") {
                if (!a.axis || a.axis != "x") {
                    if ((j.overflowOffset.top + j.scrollParent[0].offsetHeight) - h.pageY < a.scrollSensitivity) {
                        j.scrollParent[0].scrollTop = k = j.scrollParent[0].scrollTop + a.scrollSpeed
                    } else {
                        if (h.pageY - j.overflowOffset.top < a.scrollSensitivity) {
                            j.scrollParent[0].scrollTop = k = j.scrollParent[0].scrollTop - a.scrollSpeed
                        }
                    }
                }
                if (!a.axis || a.axis != "y") {
                    if ((j.overflowOffset.left + j.scrollParent[0].offsetWidth) - h.pageX < a.scrollSensitivity) {
                        j.scrollParent[0].scrollLeft = k = j.scrollParent[0].scrollLeft + a.scrollSpeed
                    } else {
                        if (h.pageX - j.overflowOffset.left < a.scrollSensitivity) {
                            j.scrollParent[0].scrollLeft = k = j.scrollParent[0].scrollLeft - a.scrollSpeed
                        }
                    }
                }
            } else {
                if (!a.axis || a.axis != "x") {
                    if (h.pageY - d(document).scrollTop() < a.scrollSensitivity) {
                        k = d(document).scrollTop(d(document).scrollTop() - a.scrollSpeed)
                    } else {
                        if (d(window).height() - (h.pageY - d(document).scrollTop()) < a.scrollSensitivity) {
                            k = d(document).scrollTop(d(document).scrollTop() + a.scrollSpeed)
                        }
                    }
                }
                if (!a.axis || a.axis != "y") {
                    if (h.pageX - d(document).scrollLeft() < a.scrollSensitivity) {
                        k = d(document).scrollLeft(d(document).scrollLeft() - a.scrollSpeed)
                    } else {
                        if (d(window).width() - (h.pageX - d(document).scrollLeft()) < a.scrollSensitivity) {
                            k = d(document).scrollLeft(d(document).scrollLeft() + a.scrollSpeed)
                        }
                    }
                }
            }
            if (k !== false && d.ui.ddmanager && !a.dropBehaviour) {
                d.ui.ddmanager.prepareOffsets(j, h)
            }
        }
    });
    d.ui.plugin.add("draggable", "snap", {
        start: function(g, b) {
            var h = d(this).data("draggable"),
                a = h.options;
            h.snapElements = [];
            d(a.snap.constructor != String ? (a.snap.items || ":data(draggable)") : a.snap).each(function() {
                var e = d(this);
                var f = e.offset();
                if (this != h.element[0]) {
                    h.snapElements.push({
                        item: this,
                        width: e.outerWidth(),
                        height: e.outerHeight(),
                        top: f.top,
                        left: f.left
                    })
                }
            })
        },
        drag: function(B, F) {
            var L = d(this).data("draggable"),
                D = L.options;
            var b = D.snapTolerance;
            var l = F.offset.left,
                o = l + L.helperProportions.width,
                M = F.offset.top,
                N = M + L.helperProportions.height;
            for (var r = L.snapElements.length - 1; r >= 0; r--) {
                var C = L.snapElements[r].left,
                    G = C + L.snapElements[r].width,
                    H = L.snapElements[r].top,
                    E = H + L.snapElements[r].height;
                if (!((C - b < l && l < G + b && H - b < M && M < E + b) || (C - b < l && l < G + b && H - b < N && N < E + b) || (C - b < o && o < G + b && H - b < M && M < E + b) || (C - b < o && o < G + b && H - b < N && N < E + b))) {
                    if (L.snapElements[r].snapping) {
                        (L.options.snap.release && L.options.snap.release.call(L.element, B, d.extend(L._uiHash(), {
                            snapItem: L.snapElements[r].item
                        })))
                    }
                    L.snapElements[r].snapping = false;
                    continue
                }
                if (D.snapMode != "inner") {
                    var O = Math.abs(H - N) <= b;
                    var a = Math.abs(E - M) <= b;
                    var J = Math.abs(C - o) <= b;
                    var I = Math.abs(G - l) <= b;
                    if (O) {
                        F.position.top = L._convertPositionTo("relative", {
                            top: H - L.helperProportions.height,
                            left: 0
                        }).top - L.margins.top
                    }
                    if (a) {
                        F.position.top = L._convertPositionTo("relative", {
                            top: E,
                            left: 0
                        }).top - L.margins.top
                    }
                    if (J) {
                        F.position.left = L._convertPositionTo("relative", {
                            top: 0,
                            left: C - L.helperProportions.width
                        }).left - L.margins.left
                    }
                    if (I) {
                        F.position.left = L._convertPositionTo("relative", {
                            top: 0,
                            left: G
                        }).left - L.margins.left
                    }
                }
                var K = (O || a || J || I);
                if (D.snapMode != "outer") {
                    var O = Math.abs(H - M) <= b;
                    var a = Math.abs(E - N) <= b;
                    var J = Math.abs(C - l) <= b;
                    var I = Math.abs(G - o) <= b;
                    if (O) {
                        F.position.top = L._convertPositionTo("relative", {
                            top: H,
                            left: 0
                        }).top - L.margins.top
                    }
                    if (a) {
                        F.position.top = L._convertPositionTo("relative", {
                            top: E - L.helperProportions.height,
                            left: 0
                        }).top - L.margins.top
                    }
                    if (J) {
                        F.position.left = L._convertPositionTo("relative", {
                            top: 0,
                            left: C
                        }).left - L.margins.left
                    }
                    if (I) {
                        F.position.left = L._convertPositionTo("relative", {
                            top: 0,
                            left: G - L.helperProportions.width
                        }).left - L.margins.left
                    }
                }
                if (!L.snapElements[r].snapping && (O || a || J || I || K)) {
                    (L.options.snap.snap && L.options.snap.snap.call(L.element, B, d.extend(L._uiHash(), {
                        snapItem: L.snapElements[r].item
                    })))
                }
                L.snapElements[r].snapping = (O || a || J || I || K)
            }
        }
    });
    d.ui.plugin.add("draggable", "stack", {
        start: function(j, h) {
            var a = d(this).data("draggable").options;
            var b = d.makeArray(d(a.stack)).sort(function(e, f) {
                return (parseInt(d(e).css("zIndex"), 10) || 0) - (parseInt(d(f).css("zIndex"), 10) || 0)
            });
            if (!b.length) {
                return
            }
            var k = parseInt(b[0].style.zIndex) || 0;
            d(b).each(function(e) {
                this.style.zIndex = k + e
            });
            this[0].style.zIndex = k + b.length
        }
    });
    d.ui.plugin.add("draggable", "zIndex", {
        start: function(g, b) {
            var h = d(b.helper),
                a = d(this).data("draggable").options;
            if (h.css("zIndex")) {
                a._zIndex = h.css("zIndex")
            }
            h.css("zIndex", a.zIndex)
        },
        stop: function(f, b) {
            var a = d(this).data("draggable").options;
            if (a._zIndex) {
                d(b.helper).css("zIndex", a._zIndex)
            }
        }
    })
})(jQuery);
(function(d, c) {
    d.widget("ui.droppable", {
        version: "1.9.1",
        widgetEventPrefix: "drop",
        options: {
            accept: "*",
            activeClass: false,
            addClasses: true,
            greedy: false,
            hoverClass: false,
            scope: "default",
            tolerance: "intersect"
        },
        _create: function() {
            var a = this.options,
                b = a.accept;
            this.isover = 0;
            this.isout = 1;
            this.accept = d.isFunction(b) ? b : function(f) {
                return f.is(b)
            };
            this.proportions = {
                width: this.element[0].offsetWidth,
                height: this.element[0].offsetHeight
            };
            d.ui.ddmanager.droppables[a.scope] = d.ui.ddmanager.droppables[a.scope] || [];
            d.ui.ddmanager.droppables[a.scope].push(this);
            (a.addClasses && this.element.addClass("ui-droppable"))
        },
        _destroy: function() {
            var b = d.ui.ddmanager.droppables[this.options.scope];
            for (var a = 0; a < b.length; a++) {
                if (b[a] == this) {
                    b.splice(a, 1)
                }
            }
            this.element.removeClass("ui-droppable ui-droppable-disabled")
        },
        _setOption: function(b, a) {
            if (b == "accept") {
                this.accept = d.isFunction(a) ? a : function(f) {
                    return f.is(a)
                }
            }
            d.Widget.prototype._setOption.apply(this, arguments)
        },
        _activate: function(a) {
            var b = d.ui.ddmanager.current;
            if (this.options.activeClass) {
                this.element.addClass(this.options.activeClass)
            }(b && this._trigger("activate", a, this.ui(b)))
        },
        _deactivate: function(a) {
            var b = d.ui.ddmanager.current;
            if (this.options.activeClass) {
                this.element.removeClass(this.options.activeClass)
            }(b && this._trigger("deactivate", a, this.ui(b)))
        },
        _over: function(a) {
            var b = d.ui.ddmanager.current;
            if (!b || (b.currentItem || b.element)[0] == this.element[0]) {
                return
            }
            if (this.accept.call(this.element[0], (b.currentItem || b.element))) {
                if (this.options.hoverClass) {
                    this.element.addClass(this.options.hoverClass)
                }
                this._trigger("over", a, this.ui(b))
            }
        },
        _out: function(a) {
            var b = d.ui.ddmanager.current;
            if (!b || (b.currentItem || b.element)[0] == this.element[0]) {
                return
            }
            if (this.accept.call(this.element[0], (b.currentItem || b.element))) {
                if (this.options.hoverClass) {
                    this.element.removeClass(this.options.hoverClass)
                }
                this._trigger("out", a, this.ui(b))
            }
        },
        _drop: function(g, b) {
            var h = b || d.ui.ddmanager.current;
            if (!h || (h.currentItem || h.element)[0] == this.element[0]) {
                return false
            }
            var a = false;
            this.element.find(":data(droppable)").not(".ui-draggable-dragging").each(function() {
                var e = d.data(this, "droppable");
                if (e.options.greedy && !e.options.disabled && e.options.scope == h.options.scope && e.accept.call(e.element[0], (h.currentItem || h.element)) && d.ui.intersect(h, d.extend(e, {
                        offset: e.element.offset()
                    }), e.options.tolerance)) {
                    a = true;
                    return false
                }
            });
            if (a) {
                return false
            }
            if (this.accept.call(this.element[0], (h.currentItem || h.element))) {
                if (this.options.activeClass) {
                    this.element.removeClass(this.options.activeClass)
                }
                if (this.options.hoverClass) {
                    this.element.removeClass(this.options.hoverClass)
                }
                this._trigger("drop", g, this.ui(h));
                return this.element
            }
            return false
        },
        ui: function(a) {
            return {
                draggable: (a.currentItem || a.element),
                helper: a.helper,
                position: a.position,
                offset: a.positionAbs
            }
        }
    });
    d.ui.intersect = function(a, v, l) {
        if (!v.offset) {
            return false
        }
        var A = (a.positionAbs || a.position.absolute).left,
            B = A + a.helperProportions.width,
            r = (a.positionAbs || a.position.absolute).top,
            s = r + a.helperProportions.height;
        var y = v.offset.left,
            C = y + v.proportions.width,
            b = v.offset.top,
            u = b + v.proportions.height;
        switch (l) {
            case "fit":
                return (y <= A && B <= C && b <= r && s <= u);
                break;
            case "intersect":
                return (y < A + (a.helperProportions.width / 2) && B - (a.helperProportions.width / 2) < C && b < r + (a.helperProportions.height / 2) && s - (a.helperProportions.height / 2) < u);
                break;
            case "pointer":
                var x = ((a.positionAbs || a.position.absolute).left + (a.clickOffset || a.offset.click).left),
                    w = ((a.positionAbs || a.position.absolute).top + (a.clickOffset || a.offset.click).top),
                    z = d.ui.isOver(w, x, b, y, v.proportions.height, v.proportions.width);
                return z;
                break;
            case "touch":
                return ((r >= b && r <= u) || (s >= b && s <= u) || (r < b && s > u)) && ((A >= y && A <= C) || (B >= y && B <= C) || (A < y && B > C));
                break;
            default:
                return false;
                break
        }
    };
    d.ui.ddmanager = {
        current: null,
        droppables: {
            "default": []
        },
        prepareOffsets: function(l, b) {
            var o = d.ui.ddmanager.droppables[l.options.scope] || [];
            var j = b ? b.type : null;
            var a = (l.currentItem || l.element).find(":data(droppable)").andSelf();
            droppablesLoop: for (var m = 0; m < o.length; m++) {
                if (o[m].options.disabled || (l && !o[m].accept.call(o[m].element[0], (l.currentItem || l.element)))) {
                    continue
                }
                for (var n = 0; n < a.length; n++) {
                    if (a[n] == o[m].element[0]) {
                        o[m].proportions.height = 0;
                        continue droppablesLoop
                    }
                }
                o[m].visible = o[m].element.css("display") != "none";
                if (!o[m].visible) {
                    continue
                }
                if (j == "mousedown") {
                    o[m]._activate.call(o[m], b)
                }
                o[m].offset = o[m].element.offset();
                o[m].proportions = {
                    width: o[m].element[0].offsetWidth,
                    height: o[m].element[0].offsetHeight
                }
            }
        },
        drop: function(f, b) {
            var a = false;
            d.each(d.ui.ddmanager.droppables[f.options.scope] || [], function() {
                if (!this.options) {
                    return
                }
                if (!this.options.disabled && this.visible && d.ui.intersect(f, this, this.options.tolerance)) {
                    a = this._drop.call(this, b) || a
                }
                if (!this.options.disabled && this.visible && this.accept.call(this.element[0], (f.currentItem || f.element))) {
                    this.isout = 1;
                    this.isover = 0;
                    this._deactivate.call(this, b)
                }
            });
            return a
        },
        dragStart: function(b, a) {
            b.element.parentsUntil("body").bind("scroll.droppable", function() {
                if (!b.options.refreshPositions) {
                    d.ui.ddmanager.prepareOffsets(b, a)
                }
            })
        },
        drag: function(b, a) {
            if (b.options.refreshPositions) {
                d.ui.ddmanager.prepareOffsets(b, a)
            }
            d.each(d.ui.ddmanager.droppables[b.options.scope] || [], function() {
                if (this.options.disabled || this.greedyChild || !this.visible) {
                    return
                }
                var l = d.ui.intersect(b, this, this.options.tolerance);
                var j = !l && this.isover == 1 ? "isout" : (l && this.isover == 0 ? "isover" : null);
                if (!j) {
                    return
                }
                var k;
                if (this.options.greedy) {
                    var m = this.options.scope;
                    var n = this.element.parents(":data(droppable)").filter(function() {
                        return d.data(this, "droppable").options.scope === m
                    });
                    if (n.length) {
                        k = d.data(n[0], "droppable");
                        k.greedyChild = (j == "isover" ? 1 : 0)
                    }
                }
                if (k && j == "isover") {
                    k.isover = 0;
                    k.isout = 1;
                    k._out.call(k, a)
                }
                this[j] = 1;
                this[j == "isout" ? "isover" : "isout"] = 0;
                this[j == "isover" ? "_over" : "_out"].call(this, a);
                if (k && j == "isout") {
                    k.isout = 0;
                    k.isover = 1;
                    k._over.call(k, a)
                }
            })
        },
        dragStop: function(b, a) {
            b.element.parentsUntil("body").unbind("scroll.droppable");
            if (!b.options.refreshPositions) {
                d.ui.ddmanager.prepareOffsets(b, a)
            }
        }
    }
})(jQuery);
(function(h, g) {
    h.widget("ui.resizable", h.ui.mouse, {
        version: "1.9.1",
        widgetEventPrefix: "resize",
        options: {
            alsoResize: false,
            animate: false,
            animateDuration: "slow",
            animateEasing: "swing",
            aspectRatio: false,
            autoHide: false,
            containment: false,
            ghost: false,
            grid: false,
            handles: "e,s,se",
            helper: false,
            maxHeight: null,
            maxWidth: null,
            minHeight: 10,
            minWidth: 10,
            zIndex: 1000
        },
        _create: function() {
            var d = this,
                b = this.options;
            this.element.addClass("ui-resizable");
            h.extend(this, {
                _aspectRatio: !!(b.aspectRatio),
                aspectRatio: b.aspectRatio,
                originalElement: this.element,
                _proportionallyResizeElements: [],
                _helper: b.helper || b.ghost || b.animate ? b.helper || "ui-resizable-helper" : null
            });
            if (this.element[0].nodeName.match(/canvas|textarea|input|select|button|img/i)) {
                this.element.wrap(h('<div class="ui-wrapper" style="overflow: hidden;"></div>').css({
                    position: this.element.css("position"),
                    width: this.element.outerWidth(),
                    height: this.element.outerHeight(),
                    top: this.element.css("top"),
                    left: this.element.css("left")
                }));
                this.element = this.element.parent().data("resizable", this.element.data("resizable"));
                this.elementIsWrapper = true;
                this.element.css({
                    marginLeft: this.originalElement.css("marginLeft"),
                    marginTop: this.originalElement.css("marginTop"),
                    marginRight: this.originalElement.css("marginRight"),
                    marginBottom: this.originalElement.css("marginBottom")
                });
                this.originalElement.css({
                    marginLeft: 0,
                    marginTop: 0,
                    marginRight: 0,
                    marginBottom: 0
                });
                this.originalResizeStyle = this.originalElement.css("resize");
                this.originalElement.css("resize", "none");
                this._proportionallyResizeElements.push(this.originalElement.css({
                    position: "static",
                    zoom: 1,
                    display: "block"
                }));
                this.originalElement.css({
                    margin: this.originalElement.css("margin")
                });
                this._proportionallyResize()
            }
            this.handles = b.handles || (!h(".ui-resizable-handle", this.element).length ? "e,s,se" : {
                n: ".ui-resizable-n",
                e: ".ui-resizable-e",
                s: ".ui-resizable-s",
                w: ".ui-resizable-w",
                se: ".ui-resizable-se",
                sw: ".ui-resizable-sw",
                ne: ".ui-resizable-ne",
                nw: ".ui-resizable-nw"
            });
            if (this.handles.constructor == String) {
                if (this.handles == "all") {
                    this.handles = "n,e,s,w,se,sw,ne,nw"
                }
                var a = this.handles.split(",");
                this.handles = {};
                for (var n = 0; n < a.length; n++) {
                    var c = h.trim(a[n]),
                        o = "ui-resizable-" + c;
                    var m = h('<div class="ui-resizable-handle ' + o + '"></div>');
                    m.css({
                        zIndex: b.zIndex
                    });
                    if ("se" == c) {
                        m.addClass("ui-icon ui-icon-gripsmall-diagonal-se")
                    }
                    this.handles[c] = ".ui-resizable-" + c;
                    this.element.append(m)
                }
            }
            this._renderAxis = function(k) {
                k = k || this.element;
                for (var s in this.handles) {
                    if (this.handles[s].constructor == String) {
                        this.handles[s] = h(this.handles[s], this.element).show()
                    }
                    if (this.elementIsWrapper && this.originalElement[0].nodeName.match(/textarea|input|select|button/i)) {
                        var r = h(this.handles[s], this.element),
                            l = 0;
                        l = /sw|ne|nw|se|n|s/.test(s) ? r.outerHeight() : r.outerWidth();
                        var j = ["padding", /ne|nw|n/.test(s) ? "Top" : /se|sw|s/.test(s) ? "Bottom" : /^e$/.test(s) ? "Right" : "Left"].join("");
                        k.css(j, l);
                        this._proportionallyResize()
                    }
                    if (!h(this.handles[s]).length) {
                        continue
                    }
                }
            };
            this._renderAxis(this.element);
            this._handles = h(".ui-resizable-handle", this.element).disableSelection();
            this._handles.mouseover(function() {
                if (!d.resizing) {
                    if (this.className) {
                        var j = this.className.match(/ui-resizable-(se|sw|ne|nw|n|e|s|w)/i)
                    }
                    d.axis = j && j[1] ? j[1] : "se"
                }
            });
            if (b.autoHide) {
                this._handles.hide();
                h(this.element).addClass("ui-resizable-autohide").mouseenter(function() {
                    if (b.disabled) {
                        return
                    }
                    h(this).removeClass("ui-resizable-autohide");
                    d._handles.show()
                }).mouseleave(function() {
                    if (b.disabled) {
                        return
                    }
                    if (!d.resizing) {
                        h(this).addClass("ui-resizable-autohide");
                        d._handles.hide()
                    }
                })
            }
            this._mouseInit()
        },
        _destroy: function() {
            this._mouseDestroy();
            var b = function(c) {
                h(c).removeClass("ui-resizable ui-resizable-disabled ui-resizable-resizing").removeData("resizable").removeData("ui-resizable").unbind(".resizable").find(".ui-resizable-handle").remove()
            };
            if (this.elementIsWrapper) {
                b(this.element);
                var a = this.element;
                this.originalElement.css({
                    position: a.css("position"),
                    width: a.outerWidth(),
                    height: a.outerHeight(),
                    top: a.css("top"),
                    left: a.css("left")
                }).insertAfter(a);
                a.remove()
            }
            this.originalElement.css("resize", this.originalResizeStyle);
            b(this.originalElement);
            return this
        },
        _mouseCapture: function(b) {
            var a = false;
            for (var c in this.handles) {
                if (h(this.handles[c])[0] == b.target) {
                    a = true
                }
            }
            return !this.options.disabled && a
        },
        _mouseStart: function(l) {
            var b = this.options,
                m = this.element.position(),
                n = this.element;
            this.resizing = true;
            this.documentScroll = {
                top: h(document).scrollTop(),
                left: h(document).scrollLeft()
            };
            if (n.is(".ui-draggable") || (/absolute/).test(n.css("position"))) {
                n.css({
                    position: "absolute",
                    top: m.top,
                    left: m.left
                })
            }
            this._renderProxy();
            var a = e(this.helper.css("left")),
                d = e(this.helper.css("top"));
            if (b.containment) {
                a += h(b.containment).scrollLeft() || 0;
                d += h(b.containment).scrollTop() || 0
            }
            this.offset = this.helper.offset();
            this.position = {
                left: a,
                top: d
            };
            this.size = this._helper ? {
                width: n.outerWidth(),
                height: n.outerHeight()
            } : {
                width: n.width(),
                height: n.height()
            };
            this.originalSize = this._helper ? {
                width: n.outerWidth(),
                height: n.outerHeight()
            } : {
                width: n.width(),
                height: n.height()
            };
            this.originalPosition = {
                left: a,
                top: d
            };
            this.sizeDiff = {
                width: n.outerWidth() - n.width(),
                height: n.outerHeight() - n.height()
            };
            this.originalMousePosition = {
                left: l.pageX,
                top: l.pageY
            };
            this.aspectRatio = (typeof b.aspectRatio == "number") ? b.aspectRatio : ((this.originalSize.width / this.originalSize.height) || 1);
            var c = h(".ui-resizable-" + this.axis).css("cursor");
            h("body").css("cursor", c == "auto" ? this.axis + "-resize" : c);
            n.addClass("ui-resizable-resizing");
            this._propagate("start", l);
            return true
        },
        _mouseDrag: function(w) {
            var u = this.helper,
                v = this.options,
                d = {},
                o = this,
                r = this.originalMousePosition,
                c = this.axis;
            var a = (w.pageX - r.left) || 0,
                b = (w.pageY - r.top) || 0;
            var s = this._change[c];
            if (!s) {
                return false
            }
            var q = s.apply(this, [w, a, b]);
            this._updateVirtualBoundaries(w.shiftKey);
            if (this._aspectRatio || w.shiftKey) {
                q = this._updateRatio(q, w)
            }
            q = this._respectSize(q, w);
            this._propagate("resize", w);
            u.css({
                top: this.position.top + "px",
                left: this.position.left + "px",
                width: this.size.width + "px",
                height: this.size.height + "px"
            });
            if (!this._helper && this._proportionallyResizeElements.length) {
                this._proportionallyResize()
            }
            this._updateCache(q);
            this._trigger("resize", w, this.ui());
            return false
        },
        _mouseStop: function(q) {
            this.resizing = false;
            var p = this.options,
                c = this;
            if (this._helper) {
                var r = this._proportionallyResizeElements,
                    u = r.length && (/textarea/i).test(r[0].nodeName),
                    s = u && h.ui.hasScroll(r[0], "left") ? 0 : c.sizeDiff.height,
                    d = u ? 0 : c.sizeDiff.width;
                var a = {
                        width: (c.helper.width() - d),
                        height: (c.helper.height() - s)
                    },
                    o = (parseInt(c.element.css("left"), 10) + (c.position.left - c.originalPosition.left)) || null,
                    b = (parseInt(c.element.css("top"), 10) + (c.position.top - c.originalPosition.top)) || null;
                if (!p.animate) {
                    this.element.css(h.extend(a, {
                        top: b,
                        left: o
                    }))
                }
                c.helper.height(c.size.height);
                c.helper.width(c.size.width);
                if (this._helper && !p.animate) {
                    this._proportionallyResize()
                }
            }
            h("body").css("cursor", "auto");
            this.element.removeClass("ui-resizable-resizing");
            this._propagate("stop", q);
            if (this._helper) {
                this.helper.remove()
            }
            return false
        },
        _updateVirtualBoundaries: function(l) {
            var b = this.options,
                c, d, m, a, n;
            n = {
                minWidth: f(b.minWidth) ? b.minWidth : 0,
                maxWidth: f(b.maxWidth) ? b.maxWidth : Infinity,
                minHeight: f(b.minHeight) ? b.minHeight : 0,
                maxHeight: f(b.maxHeight) ? b.maxHeight : Infinity
            };
            if (this._aspectRatio || l) {
                c = n.minHeight * this.aspectRatio;
                m = n.minWidth / this.aspectRatio;
                d = n.maxHeight * this.aspectRatio;
                a = n.maxWidth / this.aspectRatio;
                if (c > n.minWidth) {
                    n.minWidth = c
                }
                if (m > n.minHeight) {
                    n.minHeight = m
                }
                if (d < n.maxWidth) {
                    n.maxWidth = d
                }
                if (a < n.maxHeight) {
                    n.maxHeight = a
                }
            }
            this._vBoundaries = n
        },
        _updateCache: function(b) {
            var a = this.options;
            this.offset = this.helper.offset();
            if (f(b.left)) {
                this.position.left = b.left
            }
            if (f(b.top)) {
                this.position.top = b.top
            }
            if (f(b.height)) {
                this.size.height = b.height
            }
            if (f(b.width)) {
                this.size.width = b.width
            }
        },
        _updateRatio: function(c, d) {
            var b = this.options,
                a = this.position,
                k = this.size,
                l = this.axis;
            if (f(c.height)) {
                c.width = (c.height * this.aspectRatio)
            } else {
                if (f(c.width)) {
                    c.height = (c.width / this.aspectRatio)
                }
            }
            if (l == "sw") {
                c.left = a.left + (k.width - c.width);
                c.top = null
            }
            if (l == "nw") {
                c.top = a.top + (k.height - c.height);
                c.left = a.left + (k.width - c.width)
            }
            return c
        },
        _respectSize: function(u, z) {
            var w = this.helper,
                x = this._vBoundaries,
                a = this._aspectRatio || z.shiftKey,
                b = this.axis,
                C = f(u.width) && x.maxWidth && (x.maxWidth < u.width),
                o = f(u.height) && x.maxHeight && (x.maxHeight < u.height),
                y = f(u.width) && x.minWidth && (x.minWidth > u.width),
                D = f(u.height) && x.minHeight && (x.minHeight > u.height);
            if (y) {
                u.width = x.minWidth
            }
            if (D) {
                u.height = x.minHeight
            }
            if (C) {
                u.width = x.maxWidth
            }
            if (o) {
                u.height = x.maxHeight
            }
            var A = this.originalPosition.left + this.originalSize.width,
                c = this.position.top + this.size.height;
            var v = /sw|nw|w/.test(b),
                B = /nw|ne|n/.test(b);
            if (y && v) {
                u.left = A - x.minWidth
            }
            if (C && v) {
                u.left = A - x.maxWidth
            }
            if (D && B) {
                u.top = c - x.minHeight
            }
            if (o && B) {
                u.top = c - x.maxHeight
            }
            var d = !u.width && !u.height;
            if (d && !u.left && u.top) {
                u.top = null
            } else {
                if (d && !u.top && u.left) {
                    u.left = null
                }
            }
            return u
        },
        _proportionallyResize: function() {
            var a = this.options;
            if (!this._proportionallyResizeElements.length) {
                return
            }
            var d = this.helper || this.element;
            for (var l = 0; l < this._proportionallyResizeElements.length; l++) {
                var c = this._proportionallyResizeElements[l];
                if (!this.borderDif) {
                    var m = [c.css("borderTopWidth"), c.css("borderRightWidth"), c.css("borderBottomWidth"), c.css("borderLeftWidth")],
                        b = [c.css("paddingTop"), c.css("paddingRight"), c.css("paddingBottom"), c.css("paddingLeft")];
                    this.borderDif = h.map(m, function(k, q) {
                        var j = parseInt(k, 10) || 0,
                            p = parseInt(b[q], 10) || 0;
                        return j + p
                    })
                }
                c.css({
                    height: (d.height() - this.borderDif[0] - this.borderDif[2]) || 0,
                    width: (d.width() - this.borderDif[1] - this.borderDif[3]) || 0
                })
            }
        },
        _renderProxy: function() {
            var d = this.element,
                a = this.options;
            this.elementOffset = d.offset();
            if (this._helper) {
                this.helper = this.helper || h('<div style="overflow:hidden;"></div>');
                var c = (h.ui.ie6 ? 1 : 0),
                    b = (h.ui.ie6 ? 2 : -1);
                this.helper.addClass(this._helper).css({
                    width: this.element.outerWidth() + b,
                    height: this.element.outerHeight() + b,
                    position: "absolute",
                    left: this.elementOffset.left - c + "px",
                    top: this.elementOffset.top - c + "px",
                    zIndex: ++a.zIndex
                });
                this.helper.appendTo("body").disableSelection()
            } else {
                this.helper = this.element
            }
        },
        _change: {
            e: function(a, b, c) {
                return {
                    width: this.originalSize.width + b
                }
            },
            w: function(c, k, l) {
                var a = this.options,
                    d = this.originalSize,
                    b = this.originalPosition;
                return {
                    left: b.left + k,
                    width: d.width - k
                }
            },
            n: function(c, k, l) {
                var a = this.options,
                    d = this.originalSize,
                    b = this.originalPosition;
                return {
                    top: b.top + l,
                    height: d.height - l
                }
            },
            s: function(a, b, c) {
                return {
                    height: this.originalSize.height + c
                }
            },
            se: function(a, b, c) {
                return h.extend(this._change.s.apply(this, arguments), this._change.e.apply(this, [a, b, c]))
            },
            sw: function(a, b, c) {
                return h.extend(this._change.s.apply(this, arguments), this._change.w.apply(this, [a, b, c]))
            },
            ne: function(a, b, c) {
                return h.extend(this._change.n.apply(this, arguments), this._change.e.apply(this, [a, b, c]))
            },
            nw: function(a, b, c) {
                return h.extend(this._change.n.apply(this, arguments), this._change.w.apply(this, [a, b, c]))
            }
        },
        _propagate: function(a, b) {
            h.ui.plugin.call(this, a, [b, this.ui()]);
            (a != "resize" && this._trigger(a, b, this.ui()))
        },
        plugins: {},
        ui: function() {
            return {
                originalElement: this.originalElement,
                element: this.element,
                helper: this.helper,
                position: this.position,
                size: this.size,
                originalSize: this.originalSize,
                originalPosition: this.originalPosition
            }
        }
    });
    h.ui.plugin.add("resizable", "alsoResize", {
        start: function(d, c) {
            var j = h(this).data("resizable"),
                a = j.options;
            var b = function(k) {
                h(k).each(function() {
                    var l = h(this);
                    l.data("resizable-alsoresize", {
                        width: parseInt(l.width(), 10),
                        height: parseInt(l.height(), 10),
                        left: parseInt(l.css("left"), 10),
                        top: parseInt(l.css("top"), 10)
                    })
                })
            };
            if (typeof(a.alsoResize) == "object" && !a.alsoResize.parentNode) {
                if (a.alsoResize.length) {
                    a.alsoResize = a.alsoResize[0];
                    b(a.alsoResize)
                } else {
                    h.each(a.alsoResize, function(k) {
                        b(k)
                    })
                }
            } else {
                b(a.alsoResize)
            }
        },
        resize: function(n, d) {
            var o = h(this).data("resizable"),
                c = o.options,
                m = o.originalSize,
                a = o.originalPosition;
            var b = {
                    height: (o.size.height - m.height) || 0,
                    width: (o.size.width - m.width) || 0,
                    top: (o.position.top - a.top) || 0,
                    left: (o.position.left - a.left) || 0
                },
                p = function(j, k) {
                    h(j).each(function() {
                        var s = h(this),
                            l = h(this).data("resizable-alsoresize"),
                            u = {},
                            v = k && k.length ? k : s.parents(d.originalElement[0]).length ? ["width", "height"] : ["width", "height", "top", "left"];
                        h.each(v, function(w, q) {
                            var r = (l[q] || 0) + (b[q] || 0);
                            if (r && r >= 0) {
                                u[q] = r || null
                            }
                        });
                        s.css(u)
                    })
                };
            if (typeof(c.alsoResize) == "object" && !c.alsoResize.nodeType) {
                h.each(c.alsoResize, function(j, k) {
                    p(j, k)
                })
            } else {
                p(c.alsoResize)
            }
        },
        stop: function(b, a) {
            h(this).removeData("resizable-alsoresize")
        }
    });
    h.ui.plugin.add("resizable", "animate", {
        stop: function(r, a) {
            var c = h(this).data("resizable"),
                q = c.options;
            var s = c._proportionallyResizeElements,
                w = s.length && (/textarea/i).test(s[0].nodeName),
                v = w && h.ui.hasScroll(s[0], "left") ? 0 : c.sizeDiff.height,
                d = w ? 0 : c.sizeDiff.width;
            var u = {
                    width: (c.size.width - d),
                    height: (c.size.height - v)
                },
                o = (parseInt(c.element.css("left"), 10) + (c.position.left - c.originalPosition.left)) || null,
                b = (parseInt(c.element.css("top"), 10) + (c.position.top - c.originalPosition.top)) || null;
            c.element.animate(h.extend(u, b && o ? {
                top: b,
                left: o
            } : {}), {
                duration: q.animateDuration,
                easing: q.animateEasing,
                step: function() {
                    var j = {
                        width: parseInt(c.element.css("width"), 10),
                        height: parseInt(c.element.css("height"), 10),
                        top: parseInt(c.element.css("top"), 10),
                        left: parseInt(c.element.css("left"), 10)
                    };
                    if (s && s.length) {
                        h(s[0]).css({
                            width: j.width,
                            height: j.height
                        })
                    }
                    c._updateCache(j);
                    c._propagate("resize", r)
                }
            })
        }
    });
    h.ui.plugin.add("resizable", "containment", {
        start: function(y, B) {
            var b = h(this).data("resizable"),
                u = b.options,
                o = b.element;
            var x = u.containment,
                p = (x instanceof h) ? x.get(0) : (/parent/.test(x)) ? o.parent().get(0) : x;
            if (!p) {
                return
            }
            b.containerElement = h(p);
            if (/document/.test(x) || x == document) {
                b.containerOffset = {
                    left: 0,
                    top: 0
                };
                b.containerPosition = {
                    left: 0,
                    top: 0
                };
                b.parentData = {
                    element: h(document),
                    left: 0,
                    top: 0,
                    width: h(document).width(),
                    height: h(document).height() || document.body.parentNode.scrollHeight
                }
            } else {
                var c = h(p),
                    v = [];
                h(["Top", "Right", "Left", "Bottom"]).each(function(j, k) {
                    v[j] = e(c.css("padding" + k))
                });
                b.containerOffset = c.offset();
                b.containerPosition = c.position();
                b.containerSize = {
                    height: (c.innerHeight() - v[3]),
                    width: (c.innerWidth() - v[1])
                };
                var a = b.containerOffset,
                    z = b.containerSize.height,
                    d = b.containerSize.width,
                    w = (h.ui.hasScroll(p, "left") ? p.scrollWidth : d),
                    A = (h.ui.hasScroll(p) ? p.scrollHeight : z);
                b.parentData = {
                    element: p,
                    left: a.left,
                    top: a.top,
                    width: w,
                    height: A
                }
            }
        },
        resize: function(z, a) {
            var o = h(this).data("resizable"),
                x = o.options,
                A = o.containerSize,
                b = o.containerOffset,
                d = o.size,
                c = o.position,
                D = o._aspectRatio || z.shiftKey,
                B = {
                    top: 0,
                    left: 0
                },
                y = o.containerElement;
            if (y[0] != document && (/static/).test(y.css("position"))) {
                B = b
            }
            if (c.left < (o._helper ? b.left : 0)) {
                o.size.width = o.size.width + (o._helper ? (o.position.left - b.left) : (o.position.left - B.left));
                if (D) {
                    o.size.height = o.size.width / o.aspectRatio
                }
                o.position.left = x.helper ? b.left : 0
            }
            if (c.top < (o._helper ? b.top : 0)) {
                o.size.height = o.size.height + (o._helper ? (o.position.top - b.top) : o.position.top);
                if (D) {
                    o.size.width = o.size.height * o.aspectRatio
                }
                o.position.top = o._helper ? b.top : 0
            }
            o.offset.left = o.parentData.left + o.position.left;
            o.offset.top = o.parentData.top + o.position.top;
            var u = Math.abs((o._helper ? o.offset.left - B.left : (o.offset.left - B.left)) + o.sizeDiff.width),
                C = Math.abs((o._helper ? o.offset.top - B.top : (o.offset.top - b.top)) + o.sizeDiff.height);
            var v = o.containerElement.get(0) == o.element.parent().get(0),
                w = /relative|absolute/.test(o.containerElement.css("position"));
            if (v && w) {
                u -= o.parentData.left
            }
            if (u + o.size.width >= o.parentData.width) {
                o.size.width = o.parentData.width - u;
                if (D) {
                    o.size.height = o.size.width / o.aspectRatio
                }
            }
            if (C + o.size.height >= o.parentData.height) {
                o.size.height = o.parentData.height - C;
                if (D) {
                    o.size.width = o.size.height * o.aspectRatio
                }
            }
        },
        stop: function(y, c) {
            var s = h(this).data("resizable"),
                x = s.options,
                o = s.position,
                d = s.containerOffset,
                z = s.containerPosition,
                w = s.containerElement;
            var v = h(s.helper),
                a = v.offset(),
                b = v.outerWidth() - s.sizeDiff.width,
                u = v.outerHeight() - s.sizeDiff.height;
            if (s._helper && !x.animate && (/relative/).test(w.css("position"))) {
                h(this).css({
                    left: a.left - z.left - d.left,
                    width: b,
                    height: u
                })
            }
            if (s._helper && !x.animate && (/static/).test(w.css("position"))) {
                h(this).css({
                    left: a.left - z.left - d.left,
                    width: b,
                    height: u
                })
            }
        }
    });
    h.ui.plugin.add("resizable", "ghost", {
        start: function(c, b) {
            var d = h(this).data("resizable"),
                a = d.options,
                j = d.size;
            d.ghost = d.originalElement.clone();
            d.ghost.css({
                opacity: 0.25,
                display: "block",
                position: "relative",
                height: j.height,
                width: j.width,
                margin: 0,
                left: 0,
                top: 0
            }).addClass("ui-resizable-ghost").addClass(typeof a.ghost == "string" ? a.ghost : "");
            d.ghost.appendTo(d.helper)
        },
        resize: function(c, b) {
            var d = h(this).data("resizable"),
                a = d.options;
            if (d.ghost) {
                d.ghost.css({
                    position: "relative",
                    height: d.size.height,
                    width: d.size.width
                })
            }
        },
        stop: function(c, b) {
            var d = h(this).data("resizable"),
                a = d.options;
            if (d.ghost && d.helper) {
                d.helper.get(0).removeChild(d.ghost.get(0))
            }
        }
    });
    h.ui.plugin.add("resizable", "grid", {
        resize: function(w, b) {
            var o = h(this).data("resizable"),
                s = o.options,
                d = o.size,
                r = o.originalSize,
                q = o.originalPosition,
                a = o.axis,
                c = s._aspectRatio || w.shiftKey;
            s.grid = typeof s.grid == "number" ? [s.grid, s.grid] : s.grid;
            var u = Math.round((d.width - r.width) / (s.grid[0] || 1)) * (s.grid[0] || 1),
                v = Math.round((d.height - r.height) / (s.grid[1] || 1)) * (s.grid[1] || 1);
            if (/^(se|s|e)$/.test(a)) {
                o.size.width = r.width + u;
                o.size.height = r.height + v
            } else {
                if (/^(ne)$/.test(a)) {
                    o.size.width = r.width + u;
                    o.size.height = r.height + v;
                    o.position.top = q.top - v
                } else {
                    if (/^(sw)$/.test(a)) {
                        o.size.width = r.width + u;
                        o.size.height = r.height + v;
                        o.position.left = q.left - u
                    } else {
                        o.size.width = r.width + u;
                        o.size.height = r.height + v;
                        o.position.top = q.top - v;
                        o.position.left = q.left - u
                    }
                }
            }
        }
    });
    var e = function(a) {
        return parseInt(a, 10) || 0
    };
    var f = function(a) {
        return !isNaN(parseInt(a, 10))
    }
})(jQuery);
(function(d, c) {
    d.widget("ui.selectable", d.ui.mouse, {
        version: "1.9.1",
        options: {
            appendTo: "body",
            autoRefresh: true,
            distance: 0,
            filter: "*",
            tolerance: "touch"
        },
        _create: function() {
            var b = this;
            this.element.addClass("ui-selectable");
            this.dragged = false;
            var a;
            this.refresh = function() {
                a = d(b.options.filter, b.element[0]);
                a.addClass("ui-selectee");
                a.each(function() {
                    var h = d(this);
                    var g = h.offset();
                    d.data(this, "selectable-item", {
                        element: this,
                        $element: h,
                        left: g.left,
                        top: g.top,
                        right: g.left + h.outerWidth(),
                        bottom: g.top + h.outerHeight(),
                        startselected: false,
                        selected: h.hasClass("ui-selected"),
                        selecting: h.hasClass("ui-selecting"),
                        unselecting: h.hasClass("ui-unselecting")
                    })
                })
            };
            this.refresh();
            this.selectees = a.addClass("ui-selectee");
            this._mouseInit();
            this.helper = d("<div class='ui-selectable-helper'></div>")
        },
        _destroy: function() {
            this.selectees.removeClass("ui-selectee").removeData("selectable-item");
            this.element.removeClass("ui-selectable ui-selectable-disabled");
            this._mouseDestroy()
        },
        _mouseStart: function(a) {
            var b = this;
            this.opos = [a.pageX, a.pageY];
            if (this.options.disabled) {
                return
            }
            var f = this.options;
            this.selectees = d(f.filter, this.element[0]);
            this._trigger("start", a);
            d(f.appendTo).append(this.helper);
            this.helper.css({
                left: a.clientX,
                top: a.clientY,
                width: 0,
                height: 0
            });
            if (f.autoRefresh) {
                this.refresh()
            }
            this.selectees.filter(".ui-selected").each(function() {
                var e = d.data(this, "selectable-item");
                e.startselected = true;
                if (!a.metaKey && !a.ctrlKey) {
                    e.$element.removeClass("ui-selected");
                    e.selected = false;
                    e.$element.addClass("ui-unselecting");
                    e.unselecting = true;
                    b._trigger("unselecting", a, {
                        unselecting: e.element
                    })
                }
            });
            d(a.target).parents().andSelf().each(function() {
                var e = d.data(this, "selectable-item");
                if (e) {
                    var h = (!a.metaKey && !a.ctrlKey) || !e.$element.hasClass("ui-selected");
                    e.$element.removeClass(h ? "ui-unselecting" : "ui-selected").addClass(h ? "ui-selecting" : "ui-unselecting");
                    e.unselecting = !h;
                    e.selecting = h;
                    e.selected = h;
                    if (h) {
                        b._trigger("selecting", a, {
                            selecting: e.element
                        })
                    } else {
                        b._trigger("unselecting", a, {
                            unselecting: e.element
                        })
                    }
                    return false
                }
            })
        },
        _mouseDrag: function(a) {
            var b = this;
            this.dragged = true;
            if (this.options.disabled) {
                return
            }
            var n = this.options;
            var o = this.opos[0],
                k = this.opos[1],
                p = a.pageX,
                l = a.pageY;
            if (o > p) {
                var m = p;
                p = o;
                o = m
            }
            if (k > l) {
                var m = l;
                l = k;
                k = m
            }
            this.helper.css({
                left: o,
                top: k,
                width: p - o,
                height: l - k
            });
            this.selectees.each(function() {
                var f = d.data(this, "selectable-item");
                if (!f || f.element == b.element[0]) {
                    return
                }
                var e = false;
                if (n.tolerance == "touch") {
                    e = (!(f.left > p || f.right < o || f.top > l || f.bottom < k))
                } else {
                    if (n.tolerance == "fit") {
                        e = (f.left > o && f.right < p && f.top > k && f.bottom < l)
                    }
                }
                if (e) {
                    if (f.selected) {
                        f.$element.removeClass("ui-selected");
                        f.selected = false
                    }
                    if (f.unselecting) {
                        f.$element.removeClass("ui-unselecting");
                        f.unselecting = false
                    }
                    if (!f.selecting) {
                        f.$element.addClass("ui-selecting");
                        f.selecting = true;
                        b._trigger("selecting", a, {
                            selecting: f.element
                        })
                    }
                } else {
                    if (f.selecting) {
                        if ((a.metaKey || a.ctrlKey) && f.startselected) {
                            f.$element.removeClass("ui-selecting");
                            f.selecting = false;
                            f.$element.addClass("ui-selected");
                            f.selected = true
                        } else {
                            f.$element.removeClass("ui-selecting");
                            f.selecting = false;
                            if (f.startselected) {
                                f.$element.addClass("ui-unselecting");
                                f.unselecting = true
                            }
                            b._trigger("unselecting", a, {
                                unselecting: f.element
                            })
                        }
                    }
                    if (f.selected) {
                        if (!a.metaKey && !a.ctrlKey && !f.startselected) {
                            f.$element.removeClass("ui-selected");
                            f.selected = false;
                            f.$element.addClass("ui-unselecting");
                            f.unselecting = true;
                            b._trigger("unselecting", a, {
                                unselecting: f.element
                            })
                        }
                    }
                }
            });
            return false
        },
        _mouseStop: function(a) {
            var b = this;
            this.dragged = false;
            var f = this.options;
            d(".ui-unselecting", this.element[0]).each(function() {
                var e = d.data(this, "selectable-item");
                e.$element.removeClass("ui-unselecting");
                e.unselecting = false;
                e.startselected = false;
                b._trigger("unselected", a, {
                    unselected: e.element
                })
            });
            d(".ui-selecting", this.element[0]).each(function() {
                var e = d.data(this, "selectable-item");
                e.$element.removeClass("ui-selecting").addClass("ui-selected");
                e.selecting = false;
                e.selected = true;
                e.startselected = true;
                b._trigger("selected", a, {
                    selected: e.element
                })
            });
            this._trigger("stop", a);
            this.helper.remove();
            return false
        }
    })
})(jQuery);
(function(d, c) {
    d.widget("ui.sortable", d.ui.mouse, {
        version: "1.9.1",
        widgetEventPrefix: "sort",
        ready: false,
        options: {
            appendTo: "parent",
            axis: false,
            connectWith: false,
            containment: false,
            cursor: "auto",
            cursorAt: false,
            dropOnEmpty: true,
            forcePlaceholderSize: false,
            forceHelperSize: false,
            grid: false,
            handle: false,
            helper: "original",
            items: "> *",
            opacity: false,
            placeholder: false,
            revert: false,
            scroll: true,
            scrollSensitivity: 20,
            scrollSpeed: 20,
            scope: "default",
            tolerance: "intersect",
            zIndex: 1000
        },
        _create: function() {
            var a = this.options;
            this.containerCache = {};
            this.element.addClass("ui-sortable");
            this.refresh();
            this.floating = this.items.length ? a.axis === "x" || (/left|right/).test(this.items[0].item.css("float")) || (/inline|table-cell/).test(this.items[0].item.css("display")) : false;
            this.offset = this.element.offset();
            this._mouseInit();
            this.ready = true
        },
        _destroy: function() {
            this.element.removeClass("ui-sortable ui-sortable-disabled");
            this._mouseDestroy();
            for (var a = this.items.length - 1; a >= 0; a--) {
                this.items[a].item.removeData(this.widgetName + "-item")
            }
            return this
        },
        _setOption: function(b, a) {
            if (b === "disabled") {
                this.options[b] = a;
                this.widget().toggleClass("ui-sortable-disabled", !!a)
            } else {
                d.Widget.prototype._setOption.apply(this, arguments)
            }
        },
        _mouseCapture: function(j, b) {
            var k = this;
            if (this.reverting) {
                return false
            }
            if (this.options.disabled || this.options.type == "static") {
                return false
            }
            this._refreshItems(j);
            var l = null,
                m = d(j.target).parents().each(function() {
                    if (d.data(this, k.widgetName + "-item") == k) {
                        l = d(this);
                        return false
                    }
                });
            if (d.data(j.target, k.widgetName + "-item") == k) {
                l = d(j.target)
            }
            if (!l) {
                return false
            }
            if (this.options.handle && !b) {
                var a = false;
                d(this.options.handle, l).find("*").andSelf().each(function() {
                    if (this == j.target) {
                        a = true
                    }
                });
                if (!a) {
                    return false
                }
            }
            this.currentItem = l;
            this._removeCurrentsFromItems();
            return true
        },
        _mouseStart: function(h, b, k) {
            var a = this.options;
            this.currentContainer = this;
            this.refreshPositions();
            this.helper = this._createHelper(h);
            this._cacheHelperProportions();
            this._cacheMargins();
            this.scrollParent = this.helper.scrollParent();
            this.offset = this.currentItem.offset();
            this.offset = {
                top: this.offset.top - this.margins.top,
                left: this.offset.left - this.margins.left
            };
            d.extend(this.offset, {
                click: {
                    left: h.pageX - this.offset.left,
                    top: h.pageY - this.offset.top
                },
                parent: this._getParentOffset(),
                relative: this._getRelativeOffset()
            });
            this.helper.css("position", "absolute");
            this.cssPosition = this.helper.css("position");
            this.originalPosition = this._generatePosition(h);
            this.originalPageX = h.pageX;
            this.originalPageY = h.pageY;
            (a.cursorAt && this._adjustOffsetFromHelper(a.cursorAt));
            this.domPosition = {
                prev: this.currentItem.prev()[0],
                parent: this.currentItem.parent()[0]
            };
            if (this.helper[0] != this.currentItem[0]) {
                this.currentItem.hide()
            }
            this._createPlaceholder();
            if (a.containment) {
                this._setContainment()
            }
            if (a.cursor) {
                if (d("body").css("cursor")) {
                    this._storedCursor = d("body").css("cursor")
                }
                d("body").css("cursor", a.cursor)
            }
            if (a.opacity) {
                if (this.helper.css("opacity")) {
                    this._storedOpacity = this.helper.css("opacity")
                }
                this.helper.css("opacity", a.opacity)
            }
            if (a.zIndex) {
                if (this.helper.css("zIndex")) {
                    this._storedZIndex = this.helper.css("zIndex")
                }
                this.helper.css("zIndex", a.zIndex)
            }
            if (this.scrollParent[0] != document && this.scrollParent[0].tagName != "HTML") {
                this.overflowOffset = this.scrollParent.offset()
            }
            this._trigger("start", h, this._uiHash());
            if (!this._preserveHelperProportions) {
                this._cacheHelperProportions()
            }
            if (!k) {
                for (var j = this.containers.length - 1; j >= 0; j--) {
                    this.containers[j]._trigger("activate", h, this._uiHash(this))
                }
            }
            if (d.ui.ddmanager) {
                d.ui.ddmanager.current = this
            }
            if (d.ui.ddmanager && !a.dropBehaviour) {
                d.ui.ddmanager.prepareOffsets(this, h)
            }
            this.dragging = true;
            this.helper.addClass("ui-sortable-helper");
            this._mouseDrag(h);
            return true
        },
        _mouseDrag: function(k) {
            this.position = this._generatePosition(k);
            this.positionAbs = this._convertPositionTo("absolute");
            if (!this.lastPositionAbs) {
                this.lastPositionAbs = this.positionAbs
            }
            if (this.options.scroll) {
                var b = this.options,
                    o = false;
                if (this.scrollParent[0] != document && this.scrollParent[0].tagName != "HTML") {
                    if ((this.overflowOffset.top + this.scrollParent[0].offsetHeight) - k.pageY < b.scrollSensitivity) {
                        this.scrollParent[0].scrollTop = o = this.scrollParent[0].scrollTop + b.scrollSpeed
                    } else {
                        if (k.pageY - this.overflowOffset.top < b.scrollSensitivity) {
                            this.scrollParent[0].scrollTop = o = this.scrollParent[0].scrollTop - b.scrollSpeed
                        }
                    }
                    if ((this.overflowOffset.left + this.scrollParent[0].offsetWidth) - k.pageX < b.scrollSensitivity) {
                        this.scrollParent[0].scrollLeft = o = this.scrollParent[0].scrollLeft + b.scrollSpeed
                    } else {
                        if (k.pageX - this.overflowOffset.left < b.scrollSensitivity) {
                            this.scrollParent[0].scrollLeft = o = this.scrollParent[0].scrollLeft - b.scrollSpeed
                        }
                    }
                } else {
                    if (k.pageY - d(document).scrollTop() < b.scrollSensitivity) {
                        o = d(document).scrollTop(d(document).scrollTop() - b.scrollSpeed)
                    } else {
                        if (d(window).height() - (k.pageY - d(document).scrollTop()) < b.scrollSensitivity) {
                            o = d(document).scrollTop(d(document).scrollTop() + b.scrollSpeed)
                        }
                    }
                    if (k.pageX - d(document).scrollLeft() < b.scrollSensitivity) {
                        o = d(document).scrollLeft(d(document).scrollLeft() - b.scrollSpeed)
                    } else {
                        if (d(window).width() - (k.pageX - d(document).scrollLeft()) < b.scrollSensitivity) {
                            o = d(document).scrollLeft(d(document).scrollLeft() + b.scrollSpeed)
                        }
                    }
                }
                if (o !== false && d.ui.ddmanager && !b.dropBehaviour) {
                    d.ui.ddmanager.prepareOffsets(this, k)
                }
            }
            this.positionAbs = this._convertPositionTo("absolute");
            if (!this.options.axis || this.options.axis != "y") {
                this.helper[0].style.left = this.position.left + "px"
            }
            if (!this.options.axis || this.options.axis != "x") {
                this.helper[0].style.top = this.position.top + "px"
            }
            for (var m = this.items.length - 1; m >= 0; m--) {
                var l = this.items[m],
                    n = l.item[0],
                    a = this._intersectsWithPointer(l);
                if (!a) {
                    continue
                }
                if (l.instance !== this.currentContainer) {
                    continue
                }
                if (n != this.currentItem[0] && this.placeholder[a == 1 ? "next" : "prev"]()[0] != n && !d.contains(this.placeholder[0], n) && (this.options.type == "semi-dynamic" ? !d.contains(this.element[0], n) : true)) {
                    this.direction = a == 1 ? "down" : "up";
                    if (this.options.tolerance == "pointer" || this._intersectsWithSides(l)) {
                        this._rearrange(k, l)
                    } else {
                        break
                    }
                    this._trigger("change", k, this._uiHash());
                    break
                }
            }
            this._contactContainers(k);
            if (d.ui.ddmanager) {
                d.ui.ddmanager.drag(this, k)
            }
            this._trigger("sort", k, this._uiHash());
            this.lastPositionAbs = this.positionAbs;
            return false
        },
        _mouseStop: function(g, b) {
            if (!g) {
                return
            }
            if (d.ui.ddmanager && !this.options.dropBehaviour) {
                d.ui.ddmanager.drop(this, g)
            }
            if (this.options.revert) {
                var h = this;
                var a = this.placeholder.offset();
                this.reverting = true;
                d(this.helper).animate({
                    left: a.left - this.offset.parent.left - this.margins.left + (this.offsetParent[0] == document.body ? 0 : this.offsetParent[0].scrollLeft),
                    top: a.top - this.offset.parent.top - this.margins.top + (this.offsetParent[0] == document.body ? 0 : this.offsetParent[0].scrollTop)
                }, parseInt(this.options.revert, 10) || 500, function() {
                    h._clear(g)
                })
            } else {
                this._clear(g, b)
            }
            return false
        },
        cancel: function() {
            if (this.dragging) {
                this._mouseUp({
                    target: null
                });
                if (this.options.helper == "original") {
                    this.currentItem.css(this._storedCSS).removeClass("ui-sortable-helper")
                } else {
                    this.currentItem.show()
                }
                for (var a = this.containers.length - 1; a >= 0; a--) {
                    this.containers[a]._trigger("deactivate", null, this._uiHash(this));
                    if (this.containers[a].containerCache.over) {
                        this.containers[a]._trigger("out", null, this._uiHash(this));
                        this.containers[a].containerCache.over = 0
                    }
                }
            }
            if (this.placeholder) {
                if (this.placeholder[0].parentNode) {
                    this.placeholder[0].parentNode.removeChild(this.placeholder[0])
                }
                if (this.options.helper != "original" && this.helper && this.helper[0].parentNode) {
                    this.helper.remove()
                }
                d.extend(this, {
                    helper: null,
                    dragging: false,
                    reverting: false,
                    _noFinalSort: null
                });
                if (this.domPosition.prev) {
                    d(this.domPosition.prev).after(this.currentItem)
                } else {
                    d(this.domPosition.parent).prepend(this.currentItem)
                }
            }
            return this
        },
        serialize: function(a) {
            var f = this._getItemsAsjQuery(a && a.connected);
            var b = [];
            a = a || {};
            d(f).each(function() {
                var e = (d(a.item || this).attr(a.attribute || "id") || "").match(a.expression || (/(.+)[-=_](.+)/));
                if (e) {
                    b.push((a.key || e[1] + "[]") + "=" + (a.key && a.expression ? e[1] : e[2]))
                }
            });
            if (!b.length && a.key) {
                b.push(a.key + "=")
            }
            return b.join("&")
        },
        toArray: function(a) {
            var f = this._getItemsAsjQuery(a && a.connected);
            var b = [];
            a = a || {};
            f.each(function() {
                b.push(d(a.item || this).attr(a.attribute || "id") || "")
            });
            return b
        },
        _intersectsWith: function(l) {
            var w = this.positionAbs.left,
                x = w + this.helperProportions.width,
                p = this.positionAbs.top,
                q = p + this.helperProportions.height;
            var v = l.left,
                y = v + l.width,
                b = l.top,
                r = b + l.height;
            var a = this.offset.click.top,
                s = this.offset.click.left;
            var u = (p + a) > b && (p + a) < r && (w + s) > v && (w + s) < y;
            if (this.options.tolerance == "pointer" || this.options.forcePointerForContainers || (this.options.tolerance != "pointer" && this.helperProportions[this.floating ? "width" : "height"] > l[this.floating ? "width" : "height"])) {
                return u
            } else {
                return (v < w + (this.helperProportions.width / 2) && x - (this.helperProportions.width / 2) < y && b < p + (this.helperProportions.height / 2) && q - (this.helperProportions.height / 2) < r)
            }
        },
        _intersectsWithPointer: function(k) {
            var j = (this.options.axis === "x") || d.ui.isOverAxis(this.positionAbs.top + this.offset.click.top, k.top, k.height),
                l = (this.options.axis === "y") || d.ui.isOverAxis(this.positionAbs.left + this.offset.click.left, k.left, k.width),
                a = j && l,
                m = this._getDragVerticalDirection(),
                b = this._getDragHorizontalDirection();
            if (!a) {
                return false
            }
            return this.floating ? (((b && b == "right") || m == "down") ? 2 : 1) : (m && (m == "down" ? 2 : 1))
        },
        _intersectsWithSides: function(b) {
            var j = d.ui.isOverAxis(this.positionAbs.top + this.offset.click.top, b.top + (b.height / 2), b.height),
                h = d.ui.isOverAxis(this.positionAbs.left + this.offset.click.left, b.left + (b.width / 2), b.width),
                k = this._getDragVerticalDirection(),
                a = this._getDragHorizontalDirection();
            if (this.floating && a) {
                return ((a == "right" && h) || (a == "left" && !h))
            } else {
                return k && ((k == "down" && j) || (k == "up" && !j))
            }
        },
        _getDragVerticalDirection: function() {
            var a = this.positionAbs.top - this.lastPositionAbs.top;
            return a != 0 && (a > 0 ? "down" : "up")
        },
        _getDragHorizontalDirection: function() {
            var a = this.positionAbs.left - this.lastPositionAbs.left;
            return a != 0 && (a > 0 ? "right" : "left")
        },
        refresh: function(a) {
            this._refreshItems(a);
            this.refreshPositions();
            return this
        },
        _connectWith: function() {
            var a = this.options;
            return a.connectWith.constructor == String ? [a.connectWith] : a.connectWith
        },
        _getItemsAsjQuery: function(j) {
            var q = [];
            var o = [];
            var m = this._connectWith();
            if (m && j) {
                for (var n = m.length - 1; n >= 0; n--) {
                    var a = d(m[n]);
                    for (var p = a.length - 1; p >= 0; p--) {
                        var b = d.data(a[p], this.widgetName);
                        if (b && b != this && !b.options.disabled) {
                            o.push([d.isFunction(b.options.items) ? b.options.items.call(b.element) : d(b.options.items, b.element).not(".ui-sortable-helper").not(".ui-sortable-placeholder"), b])
                        }
                    }
                }
            }
            o.push([d.isFunction(this.options.items) ? this.options.items.call(this.element, null, {
                options: this.options,
                item: this.currentItem
            }) : d(this.options.items, this.element).not(".ui-sortable-helper").not(".ui-sortable-placeholder"), this]);
            for (var n = o.length - 1; n >= 0; n--) {
                o[n][0].each(function() {
                    q.push(this)
                })
            }
            return d(q)
        },
        _removeCurrentsFromItems: function() {
            var a = this.currentItem.find(":data(" + this.widgetName + "-item)");
            this.items = d.grep(this.items, function(b) {
                for (var f = 0; f < a.length; f++) {
                    if (a[f] == b.item[0]) {
                        return false
                    }
                }
                return true
            })
        },
        _refreshItems: function(z) {
            this.items = [];
            this.containers = [this];
            var s = this.items;
            var v = [
                [d.isFunction(this.options.items) ? this.options.items.call(this.element[0], z, {
                    item: this.currentItem
                }) : d(this.options.items, this.element), this]
            ];
            var q = this._connectWith();
            if (q && this.ready) {
                for (var w = q.length - 1; w >= 0; w--) {
                    var j = d(q[w]);
                    for (var x = j.length - 1; x >= 0; x--) {
                        var u = d.data(j[x], this.widgetName);
                        if (u && u != this && !u.options.disabled) {
                            v.push([d.isFunction(u.options.items) ? u.options.items.call(u.element[0], z, {
                                item: this.currentItem
                            }) : d(u.options.items, u.element), u]);
                            this.containers.push(u)
                        }
                    }
                }
            }
            for (var w = v.length - 1; w >= 0; w--) {
                var r = v[w][1];
                var y = v[w][0];
                for (var x = 0, b = y.length; x < b; x++) {
                    var a = d(y[x]);
                    a.data(this.widgetName + "-item", r);
                    s.push({
                        item: a,
                        instance: r,
                        width: 0,
                        height: 0,
                        left: 0,
                        top: 0
                    })
                }
            }
        },
        refreshPositions: function(k) {
            if (this.offsetParent && this.helper) {
                this.offset.parent = this._getParentOffset()
            }
            for (var h = this.items.length - 1; h >= 0; h--) {
                var b = this.items[h];
                if (b.instance != this.currentContainer && this.currentContainer && b.item[0] != this.currentItem[0]) {
                    continue
                }
                var j = this.options.toleranceElement ? d(this.options.toleranceElement, b.item) : b.item;
                if (!k) {
                    b.width = j.outerWidth();
                    b.height = j.outerHeight()
                }
                var a = j.offset();
                b.left = a.left;
                b.top = a.top
            }
            if (this.options.custom && this.options.custom.refreshContainers) {
                this.options.custom.refreshContainers.call(this)
            } else {
                for (var h = this.containers.length - 1; h >= 0; h--) {
                    var a = this.containers[h].element.offset();
                    this.containers[h].containerCache.left = a.left;
                    this.containers[h].containerCache.top = a.top;
                    this.containers[h].containerCache.width = this.containers[h].element.outerWidth();
                    this.containers[h].containerCache.height = this.containers[h].element.outerHeight()
                }
            }
            return this
        },
        _createPlaceholder: function(b) {
            b = b || this;
            var a = b.options;
            if (!a.placeholder || a.placeholder.constructor == String) {
                var f = a.placeholder;
                a.placeholder = {
                    element: function() {
                        var e = d(document.createElement(b.currentItem[0].nodeName)).addClass(f || b.currentItem[0].className + " ui-sortable-placeholder").removeClass("ui-sortable-helper")[0];
                        if (!f) {
                            e.style.visibility = "hidden"
                        }
                        return e
                    },
                    update: function(h, e) {
                        if (f && !a.forcePlaceholderSize) {
                            return
                        }
                        if (!e.height()) {
                            e.height(b.currentItem.innerHeight() - parseInt(b.currentItem.css("paddingTop") || 0, 10) - parseInt(b.currentItem.css("paddingBottom") || 0, 10))
                        }
                        if (!e.width()) {
                            e.width(b.currentItem.innerWidth() - parseInt(b.currentItem.css("paddingLeft") || 0, 10) - parseInt(b.currentItem.css("paddingRight") || 0, 10))
                        }
                    }
                }
            }
            b.placeholder = d(a.placeholder.element.call(b.element, b.currentItem));
            b.currentItem.after(b.placeholder);
            a.placeholder.update(b, b.placeholder)
        },
        _contactContainers: function(z) {
            var x = null,
                j = null;
            for (var u = this.containers.length - 1; u >= 0; u--) {
                if (d.contains(this.currentItem[0], this.containers[u].element[0])) {
                    continue
                }
                if (this._intersectsWith(this.containers[u].containerCache)) {
                    if (x && d.contains(this.containers[u].element[0], x.element[0])) {
                        continue
                    }
                    x = this.containers[u];
                    j = u
                } else {
                    if (this.containers[u].containerCache.over) {
                        this.containers[u]._trigger("out", z, this._uiHash(this));
                        this.containers[u].containerCache.over = 0
                    }
                }
            }
            if (!x) {
                return
            }
            if (this.containers.length === 1) {
                this.containers[j]._trigger("over", z, this._uiHash(this));
                this.containers[j].containerCache.over = 1
            } else {
                var q = 10000;
                var s = null;
                var r = this.containers[j].floating ? "left" : "top";
                var b = this.containers[j].floating ? "width" : "height";
                var y = this.positionAbs[r] + this.offset.click[r];
                for (var w = this.items.length - 1; w >= 0; w--) {
                    if (!d.contains(this.containers[j].element[0], this.items[w].item[0])) {
                        continue
                    }
                    if (this.items[w].item[0] == this.currentItem[0]) {
                        continue
                    }
                    var a = this.items[w].item.offset()[r];
                    var v = false;
                    if (Math.abs(a - y) > Math.abs(a + this.items[w][b] - y)) {
                        v = true;
                        a += this.items[w][b]
                    }
                    if (Math.abs(a - y) < q) {
                        q = Math.abs(a - y);
                        s = this.items[w];
                        this.direction = v ? "up" : "down"
                    }
                }
                if (!s && !this.options.dropOnEmpty) {
                    return
                }
                this.currentContainer = this.containers[j];
                s ? this._rearrange(z, s, null, true) : this._rearrange(z, null, this.containers[j].element, true);
                this._trigger("change", z, this._uiHash());
                this.containers[j]._trigger("change", z, this._uiHash(this));
                this.options.placeholder.update(this.currentContainer, this.placeholder);
                this.containers[j]._trigger("over", z, this._uiHash(this));
                this.containers[j].containerCache.over = 1
            }
        },
        _createHelper: function(b) {
            var a = this.options;
            var f = d.isFunction(a.helper) ? d(a.helper.apply(this.element[0], [b, this.currentItem])) : (a.helper == "clone" ? this.currentItem.clone() : this.currentItem);
            if (!f.parents("body").length) {
                d(a.appendTo != "parent" ? a.appendTo : this.currentItem[0].parentNode)[0].appendChild(f[0])
            }
            if (f[0] == this.currentItem[0]) {
                this._storedCSS = {
                    width: this.currentItem[0].style.width,
                    height: this.currentItem[0].style.height,
                    position: this.currentItem.css("position"),
                    top: this.currentItem.css("top"),
                    left: this.currentItem.css("left")
                }
            }
            if (f[0].style.width == "" || a.forceHelperSize) {
                f.width(this.currentItem.width())
            }
            if (f[0].style.height == "" || a.forceHelperSize) {
                f.height(this.currentItem.height())
            }
            return f
        },
        _adjustOffsetFromHelper: function(a) {
            if (typeof a == "string") {
                a = a.split(" ")
            }
            if (d.isArray(a)) {
                a = {
                    left: +a[0],
                    top: +a[1] || 0
                }
            }
            if ("left" in a) {
                this.offset.click.left = a.left + this.margins.left
            }
            if ("right" in a) {
                this.offset.click.left = this.helperProportions.width - a.right + this.margins.left
            }
            if ("top" in a) {
                this.offset.click.top = a.top + this.margins.top
            }
            if ("bottom" in a) {
                this.offset.click.top = this.helperProportions.height - a.bottom + this.margins.top
            }
        },
        _getParentOffset: function() {
            this.offsetParent = this.helper.offsetParent();
            var a = this.offsetParent.offset();
            if (this.cssPosition == "absolute" && this.scrollParent[0] != document && d.contains(this.scrollParent[0], this.offsetParent[0])) {
                a.left += this.scrollParent.scrollLeft();
                a.top += this.scrollParent.scrollTop()
            }
            if ((this.offsetParent[0] == document.body) || (this.offsetParent[0].tagName && this.offsetParent[0].tagName.toLowerCase() == "html" && d.ui.ie)) {
                a = {
                    top: 0,
                    left: 0
                }
            }
            return {
                top: a.top + (parseInt(this.offsetParent.css("borderTopWidth"), 10) || 0),
                left: a.left + (parseInt(this.offsetParent.css("borderLeftWidth"), 10) || 0)
            }
        },
        _getRelativeOffset: function() {
            if (this.cssPosition == "relative") {
                var a = this.currentItem.position();
                return {
                    top: a.top - (parseInt(this.helper.css("top"), 10) || 0) + this.scrollParent.scrollTop(),
                    left: a.left - (parseInt(this.helper.css("left"), 10) || 0) + this.scrollParent.scrollLeft()
                }
            } else {
                return {
                    top: 0,
                    left: 0
                }
            }
        },
        _cacheMargins: function() {
            this.margins = {
                left: (parseInt(this.currentItem.css("marginLeft"), 10) || 0),
                top: (parseInt(this.currentItem.css("marginTop"), 10) || 0)
            }
        },
        _cacheHelperProportions: function() {
            this.helperProportions = {
                width: this.helper.outerWidth(),
                height: this.helper.outerHeight()
            }
        },
        _setContainment: function() {
            var a = this.options;
            if (a.containment == "parent") {
                a.containment = this.helper[0].parentNode
            }
            if (a.containment == "document" || a.containment == "window") {
                this.containment = [0 - this.offset.relative.left - this.offset.parent.left, 0 - this.offset.relative.top - this.offset.parent.top, d(a.containment == "document" ? document : window).width() - this.helperProportions.width - this.margins.left, (d(a.containment == "document" ? document : window).height() || document.body.parentNode.scrollHeight) - this.helperProportions.height - this.margins.top]
            }
            if (!(/^(document|window|parent)$/).test(a.containment)) {
                var g = d(a.containment)[0];
                var b = d(a.containment).offset();
                var h = (d(g).css("overflow") != "hidden");
                this.containment = [b.left + (parseInt(d(g).css("borderLeftWidth"), 10) || 0) + (parseInt(d(g).css("paddingLeft"), 10) || 0) - this.margins.left, b.top + (parseInt(d(g).css("borderTopWidth"), 10) || 0) + (parseInt(d(g).css("paddingTop"), 10) || 0) - this.margins.top, b.left + (h ? Math.max(g.scrollWidth, g.offsetWidth) : g.offsetWidth) - (parseInt(d(g).css("borderLeftWidth"), 10) || 0) - (parseInt(d(g).css("paddingRight"), 10) || 0) - this.helperProportions.width - this.margins.left, b.top + (h ? Math.max(g.scrollHeight, g.offsetHeight) : g.offsetHeight) - (parseInt(d(g).css("borderTopWidth"), 10) || 0) - (parseInt(d(g).css("paddingBottom"), 10) || 0) - this.helperProportions.height - this.margins.top]
            }
        },
        _convertPositionTo: function(j, a) {
            if (!a) {
                a = this.position
            }
            var l = j == "absolute" ? 1 : -1;
            var k = this.options,
                m = this.cssPosition == "absolute" && !(this.scrollParent[0] != document && d.contains(this.scrollParent[0], this.offsetParent[0])) ? this.offsetParent : this.scrollParent,
                b = (/(html|body)/i).test(m[0].tagName);
            return {
                top: (a.top + this.offset.relative.top * l + this.offset.parent.top * l - ((this.cssPosition == "fixed" ? -this.scrollParent.scrollTop() : (b ? 0 : m.scrollTop())) * l)),
                left: (a.left + this.offset.relative.left * l + this.offset.parent.left * l - ((this.cssPosition == "fixed" ? -this.scrollParent.scrollLeft() : b ? 0 : m.scrollLeft()) * l))
            }
        },
        _generatePosition: function(m) {
            var b = this.options,
                p = this.cssPosition == "absolute" && !(this.scrollParent[0] != document && d.contains(this.scrollParent[0], this.offsetParent[0])) ? this.offsetParent : this.scrollParent,
                a = (/(html|body)/i).test(p[0].tagName);
            if (this.cssPosition == "relative" && !(this.scrollParent[0] != document && this.scrollParent[0] != this.offsetParent[0])) {
                this.offset.relative = this._getRelativeOffset()
            }
            var n = m.pageX;
            var o = m.pageY;
            if (this.originalPosition) {
                if (this.containment) {
                    if (m.pageX - this.offset.click.left < this.containment[0]) {
                        n = this.containment[0] + this.offset.click.left
                    }
                    if (m.pageY - this.offset.click.top < this.containment[1]) {
                        o = this.containment[1] + this.offset.click.top
                    }
                    if (m.pageX - this.offset.click.left > this.containment[2]) {
                        n = this.containment[2] + this.offset.click.left
                    }
                    if (m.pageY - this.offset.click.top > this.containment[3]) {
                        o = this.containment[3] + this.offset.click.top
                    }
                }
                if (b.grid) {
                    var k = this.originalPageY + Math.round((o - this.originalPageY) / b.grid[1]) * b.grid[1];
                    o = this.containment ? (!(k - this.offset.click.top < this.containment[1] || k - this.offset.click.top > this.containment[3]) ? k : (!(k - this.offset.click.top < this.containment[1]) ? k - b.grid[1] : k + b.grid[1])) : k;
                    var l = this.originalPageX + Math.round((n - this.originalPageX) / b.grid[0]) * b.grid[0];
                    n = this.containment ? (!(l - this.offset.click.left < this.containment[0] || l - this.offset.click.left > this.containment[2]) ? l : (!(l - this.offset.click.left < this.containment[0]) ? l - b.grid[0] : l + b.grid[0])) : l
                }
            }
            return {
                top: (o - this.offset.click.top - this.offset.relative.top - this.offset.parent.top + ((this.cssPosition == "fixed" ? -this.scrollParent.scrollTop() : (a ? 0 : p.scrollTop())))),
                left: (n - this.offset.click.left - this.offset.relative.left - this.offset.parent.left + ((this.cssPosition == "fixed" ? -this.scrollParent.scrollLeft() : a ? 0 : p.scrollLeft())))
            }
        },
        _rearrange: function(a, b, j, h) {
            j ? j[0].appendChild(this.placeholder[0]) : b.item[0].parentNode.insertBefore(this.placeholder[0], (this.direction == "down" ? b.item[0] : b.item[0].nextSibling));
            this.counter = this.counter ? ++this.counter : 1;
            var k = this.counter;
            this._delay(function() {
                if (k == this.counter) {
                    this.refreshPositions(!h)
                }
            })
        },
        _clear: function(g, b) {
            this.reverting = false;
            var a = [];
            if (!this._noFinalSort && this.currentItem.parent().length) {
                this.placeholder.before(this.currentItem)
            }
            this._noFinalSort = null;
            if (this.helper[0] == this.currentItem[0]) {
                for (var h in this._storedCSS) {
                    if (this._storedCSS[h] == "auto" || this._storedCSS[h] == "static") {
                        this._storedCSS[h] = ""
                    }
                }
                this.currentItem.css(this._storedCSS).removeClass("ui-sortable-helper")
            } else {
                this.currentItem.show()
            }
            if (this.fromOutside && !b) {
                a.push(function(e) {
                    this._trigger("receive", e, this._uiHash(this.fromOutside))
                })
            }
            if ((this.fromOutside || this.domPosition.prev != this.currentItem.prev().not(".ui-sortable-helper")[0] || this.domPosition.parent != this.currentItem.parent()[0]) && !b) {
                a.push(function(e) {
                    this._trigger("update", e, this._uiHash())
                })
            }
            if (this !== this.currentContainer) {
                if (!b) {
                    a.push(function(e) {
                        this._trigger("remove", e, this._uiHash())
                    });
                    a.push((function(e) {
                        return function(f) {
                            e._trigger("receive", f, this._uiHash(this))
                        }
                    }).call(this, this.currentContainer));
                    a.push((function(e) {
                        return function(f) {
                            e._trigger("update", f, this._uiHash(this))
                        }
                    }).call(this, this.currentContainer))
                }
            }
            for (var h = this.containers.length - 1; h >= 0; h--) {
                if (!b) {
                    a.push((function(e) {
                        return function(f) {
                            e._trigger("deactivate", f, this._uiHash(this))
                        }
                    }).call(this, this.containers[h]))
                }
                if (this.containers[h].containerCache.over) {
                    a.push((function(e) {
                        return function(f) {
                            e._trigger("out", f, this._uiHash(this))
                        }
                    }).call(this, this.containers[h]));
                    this.containers[h].containerCache.over = 0
                }
            }
            if (this._storedCursor) {
                d("body").css("cursor", this._storedCursor)
            }
            if (this._storedOpacity) {
                this.helper.css("opacity", this._storedOpacity)
            }
            if (this._storedZIndex) {
                this.helper.css("zIndex", this._storedZIndex == "auto" ? "" : this._storedZIndex)
            }
            this.dragging = false;
            if (this.cancelHelperRemoval) {
                if (!b) {
                    this._trigger("beforeStop", g, this._uiHash());
                    for (var h = 0; h < a.length; h++) {
                        a[h].call(this, g)
                    }
                    this._trigger("stop", g, this._uiHash())
                }
                this.fromOutside = false;
                return false
            }
            if (!b) {
                this._trigger("beforeStop", g, this._uiHash())
            }
            this.placeholder[0].parentNode.removeChild(this.placeholder[0]);
            if (this.helper[0] != this.currentItem[0]) {
                this.helper.remove()
            }
            this.helper = null;
            if (!b) {
                for (var h = 0; h < a.length; h++) {
                    a[h].call(this, g)
                }
                this._trigger("stop", g, this._uiHash())
            }
            this.fromOutside = false;
            return true
        },
        _trigger: function() {
            if (d.Widget.prototype._trigger.apply(this, arguments) === false) {
                this.cancel()
            }
        },
        _uiHash: function(b) {
            var a = b || this;
            return {
                helper: a.helper,
                placeholder: a.placeholder || d([]),
                position: a.position,
                originalPosition: a.originalPosition,
                offset: a.positionAbs,
                item: a.currentItem,
                sender: b ? b.element : null
            }
        }
    })
})(jQuery);
(jQuery.effects || (function(e, g) {
    var f = e.uiBackCompat !== false,
        h = "ui-effects-";
    e.effects = {
        effect: {}
    };
    (function(E, A) {
        var d = "backgroundColor borderBottomColor borderLeftColor borderRightColor borderTopColor color columnRuleColor outlineColor textDecorationColor textEmphasisColor".split(" "),
            w = /^([\-+])=\s*(\d+\.?\d*)/,
            x = [{
                re: /rgba?\(\s*(\d{1,3})\s*,\s*(\d{1,3})\s*,\s*(\d{1,3})\s*(?:,\s*(\d+(?:\.\d+)?)\s*)?\)/,
                parse: function(j) {
                    return [j[1], j[2], j[3], j[4]]
                }
            }, {
                re: /rgba?\(\s*(\d+(?:\.\d+)?)\%\s*,\s*(\d+(?:\.\d+)?)\%\s*,\s*(\d+(?:\.\d+)?)\%\s*(?:,\s*(\d+(?:\.\d+)?)\s*)?\)/,
                parse: function(j) {
                    return [j[1] * 2.55, j[2] * 2.55, j[3] * 2.55, j[4]]
                }
            }, {
                re: /#([a-f0-9]{2})([a-f0-9]{2})([a-f0-9]{2})/,
                parse: function(j) {
                    return [parseInt(j[1], 16), parseInt(j[2], 16), parseInt(j[3], 16)]
                }
            }, {
                re: /#([a-f0-9])([a-f0-9])([a-f0-9])/,
                parse: function(j) {
                    return [parseInt(j[1] + j[1], 16), parseInt(j[2] + j[2], 16), parseInt(j[3] + j[3], 16)]
                }
            }, {
                re: /hsla?\(\s*(\d+(?:\.\d+)?)\s*,\s*(\d+(?:\.\d+)?)\%\s*,\s*(\d+(?:\.\d+)?)\%\s*(?:,\s*(\d+(?:\.\d+)?)\s*)?\)/,
                space: "hsla",
                parse: function(j) {
                    return [j[1], j[2] / 100, j[3] / 100, j[4]]
                }
            }],
            z = E.Color = function(l, k, m, j) {
                return new E.Color.fn.parse(l, k, m, j)
            },
            u = {
                rgba: {
                    props: {
                        red: {
                            idx: 0,
                            type: "byte"
                        },
                        green: {
                            idx: 1,
                            type: "byte"
                        },
                        blue: {
                            idx: 2,
                            type: "byte"
                        }
                    }
                },
                hsla: {
                    props: {
                        hue: {
                            idx: 0,
                            type: "degrees"
                        },
                        saturation: {
                            idx: 1,
                            type: "percent"
                        },
                        lightness: {
                            idx: 2,
                            type: "percent"
                        }
                    }
                }
            },
            a = {
                "byte": {
                    floor: true,
                    max: 255
                },
                percent: {
                    max: 1
                },
                degrees: {
                    mod: 360,
                    floor: true
                }
            },
            b = z.support = {},
            C = E("<p>")[0],
            D, c = E.each;
        C.style.cssText = "background-color:rgba(1,1,1,.5)";
        b.rgba = C.style.backgroundColor.indexOf("rgba") > -1;
        c(u, function(k, j) {
            j.cache = "_" + k;
            j.props.alpha = {
                idx: 3,
                type: "percent",
                def: 1
            }
        });

        function v(l, j, k) {
            var m = a[j.type] || {};
            if (l == null) {
                return (k || !j.def) ? null : j.def
            }
            l = m.floor ? ~~l : parseFloat(l);
            if (isNaN(l)) {
                return j.def
            }
            if (m.mod) {
                return (l + m.mod) % m.mod
            }
            return 0 > l ? 0 : m.max < l ? m.max : l
        }

        function y(l) {
            var j = z(),
                k = j._rgba = [];
            l = l.toLowerCase();
            c(x, function(n, r) {
                var q, p = r.re.exec(l),
                    m = p && r.parse(p),
                    o = r.space || "rgba";
                if (m) {
                    q = j[o](m);
                    j[u[o].cache] = q[u[o].cache];
                    k = j._rgba = q._rgba;
                    return false
                }
            });
            if (k.length) {
                if (k.join() === "0,0,0,0") {
                    E.extend(k, D.transparent)
                }
                return j
            }
            return D[l]
        }
        z.fn = E.extend(z.prototype, {
            parse: function(o, j, n, p) {
                if (o === A) {
                    this._rgba = [null, null, null, null];
                    return this
                }
                if (o.jquery || o.nodeType) {
                    o = E(o).css(j);
                    j = A
                }
                var k = this,
                    l = E.type(o),
                    m = this._rgba = [];
                if (j !== A) {
                    o = [o, j, n, p];
                    l = "array"
                }
                if (l === "string") {
                    return this.parse(y(o) || D._default)
                }
                if (l === "array") {
                    c(u.rgba.props, function(q, r) {
                        m[r.idx] = v(o[r.idx], r)
                    });
                    return this
                }
                if (l === "object") {
                    if (o instanceof z) {
                        c(u, function(q, r) {
                            if (o[r.cache]) {
                                k[r.cache] = o[r.cache].slice()
                            }
                        })
                    } else {
                        c(u, function(s, r) {
                            var q = r.cache;
                            c(r.props, function(G, F) {
                                if (!k[q] && r.to) {
                                    if (G === "alpha" || o[G] == null) {
                                        return
                                    }
                                    k[q] = r.to(k._rgba)
                                }
                                k[q][F.idx] = v(o[G], F, true)
                            });
                            if (k[q] && e.inArray(null, k[q].slice(0, 3)) < 0) {
                                k[q][3] = 1;
                                if (r.from) {
                                    k._rgba = r.from(k[q])
                                }
                            }
                        })
                    }
                    return this
                }
            },
            is: function(k) {
                var m = z(k),
                    j = true,
                    l = this;
                c(u, function(o, p) {
                    var n, q = m[p.cache];
                    if (q) {
                        n = l[p.cache] || p.to && p.to(l._rgba) || [];
                        c(p.props, function(s, r) {
                            if (q[r.idx] != null) {
                                j = (q[r.idx] === n[r.idx]);
                                return j
                            }
                        })
                    }
                    return j
                });
                return j
            },
            _space: function() {
                var k = [],
                    j = this;
                c(u, function(m, l) {
                    if (j[l.cache]) {
                        k.push(m)
                    }
                });
                return k.pop()
            },
            transition: function(n, k) {
                var m = z(n),
                    l = m._space(),
                    j = u[l],
                    q = this.alpha() === 0 ? z("transparent") : this,
                    p = q[j.cache] || j.to(q._rgba),
                    o = p.slice();
                m = m[j.cache];
                c(j.props, function(H, r) {
                    var I = r.idx,
                        J = p[I],
                        K = m[I],
                        s = a[r.type] || {};
                    if (K === null) {
                        return
                    }
                    if (J === null) {
                        o[I] = K
                    } else {
                        if (s.mod) {
                            if (K - J > s.mod / 2) {
                                J += s.mod
                            } else {
                                if (J - K > s.mod / 2) {
                                    J -= s.mod
                                }
                            }
                        }
                        o[I] = v((K - J) * k + J, r)
                    }
                });
                return this[l](o)
            },
            blend: function(j) {
                if (this._rgba[3] === 1) {
                    return this
                }
                var k = this._rgba.slice(),
                    l = k.pop(),
                    m = z(j)._rgba;
                return z(E.map(k, function(n, o) {
                    return (1 - l) * m[o] + l * n
                }))
            },
            toRgbaString: function() {
                var j = "rgba(",
                    k = E.map(this._rgba, function(m, l) {
                        return m == null ? (l > 2 ? 1 : 0) : m
                    });
                if (k[3] === 1) {
                    k.pop();
                    j = "rgb("
                }
                return j + k.join() + ")"
            },
            toHslaString: function() {
                var j = "hsla(",
                    k = E.map(this.hsla(), function(m, l) {
                        if (m == null) {
                            m = l > 2 ? 1 : 0
                        }
                        if (l && l < 3) {
                            m = Math.round(m * 100) + "%"
                        }
                        return m
                    });
                if (k[3] === 1) {
                    k.pop();
                    j = "hsl("
                }
                return j + k.join() + ")"
            },
            toHexString: function(l) {
                var k = this._rgba.slice(),
                    j = k.pop();
                if (l) {
                    k.push(~~(j * 255))
                }
                return "#" + E.map(k, function(m) {
                    m = (m || 0).toString(16);
                    return m.length === 1 ? "0" + m : m
                }).join("")
            },
            toString: function() {
                return this._rgba[3] === 0 ? "transparent" : this.toRgbaString()
            }
        });
        z.fn.parse.prototype = z.fn;

        function B(j, k, l) {
            l = (l + 1) % 1;
            if (l * 6 < 1) {
                return j + (k - j) * l * 6
            }
            if (l * 2 < 1) {
                return k
            }
            if (l * 3 < 2) {
                return j + (k - j) * ((2 / 3) - l) * 6
            }
            return j
        }
        u.hsla.to = function(r) {
            if (r[0] == null || r[1] == null || r[2] == null) {
                return [null, null, null, r[3]]
            }
            var F = r[0] / 255,
                o = r[1] / 255,
                n = r[2] / 255,
                l = r[3],
                m = Math.max(F, o, n),
                q = Math.min(F, o, n),
                k = m - q,
                j = m + q,
                s = j * 0.5,
                p, G;
            if (q === m) {
                p = 0
            } else {
                if (F === m) {
                    p = (60 * (o - n) / k) + 360
                } else {
                    if (o === m) {
                        p = (60 * (n - F) / k) + 120
                    } else {
                        p = (60 * (F - o) / k) + 240
                    }
                }
            }
            if (s === 0 || s === 1) {
                G = s
            } else {
                if (s <= 0.5) {
                    G = k / j
                } else {
                    G = k / (2 - j)
                }
            }
            return [Math.round(p) % 360, G, s, l == null ? 1 : l]
        };
        u.hsla.from = function(j) {
            if (j[0] == null || j[1] == null || j[2] == null) {
                return [null, null, null, j[3]]
            }
            var k = j[0] / 360,
                l = j[1],
                m = j[2],
                n = j[3],
                p = m <= 0.5 ? m * (1 + l) : m + l - m * l,
                o = 2 * m - p;
            return [Math.round(B(o, p, k + (1 / 3)) * 255), Math.round(B(o, p, k) * 255), Math.round(B(o, p, k - (1 / 3)) * 255), n]
        };
        c(u, function(m, k) {
            var l = k.props,
                n = k.cache,
                o = k.to,
                j = k.from;
            z.fn[m] = function(q) {
                if (o && !this[n]) {
                    this[n] = o(this._rgba)
                }
                if (q === A) {
                    return this[n].slice()
                }
                var p, s = E.type(q),
                    r = (s === "array" || s === "object") ? q : arguments,
                    F = this[n].slice();
                c(l, function(J, H) {
                    var I = r[s === "object" ? J : H.idx];
                    if (I == null) {
                        I = F[H.idx]
                    }
                    F[H.idx] = v(I, H)
                });
                if (j) {
                    p = z(j(F));
                    p[n] = F;
                    return p
                } else {
                    return z(F)
                }
            };
            c(l, function(q, p) {
                if (z.fn[q]) {
                    return
                }
                z.fn[q] = function(H) {
                    var r = E.type(H),
                        I = (q === "alpha" ? (this._hsla ? "hsla" : "rgba") : m),
                        J = this[I](),
                        s = J[p.idx],
                        K;
                    if (r === "") {
                        return s
                    }
                    if (r === "function") {
                        H = H.call(this, s);
                        r = E.type(H)
                    }
                    if (H == null && p.empty) {
                        return this
                    }
                    if (r === "string") {
                        K = w.exec(H);
                        if (K) {
                            H = s + parseFloat(K[2]) * (K[1] === "+" ? 1 : -1)
                        }
                    }
                    J[p.idx] = H;
                    return this[I](J)
                }
            })
        });
        c(d, function(k, j) {
            E.cssHooks[j] = {
                set: function(p, m) {
                    var n, r, o = "";
                    if (E.type(m) !== "string" || (n = y(m))) {
                        m = z(n || m);
                        if (!b.rgba && m._rgba[3] !== 1) {
                            r = j === "backgroundColor" ? p.parentNode : p;
                            while ((o === "" || o === "transparent") && r && r.style) {
                                try {
                                    o = E.css(r, "backgroundColor");
                                    r = r.parentNode
                                } catch (q) {}
                            }
                            m = m.blend(o && o !== "transparent" ? o : "_default")
                        }
                        m = m.toRgbaString()
                    }
                    try {
                        p.style[j] = m
                    } catch (l) {}
                }
            };
            E.fx.step[j] = function(l) {
                if (!l.colorInit) {
                    l.start = z(l.elem, j);
                    l.end = z(l.end);
                    l.colorInit = true
                }
                E.cssHooks[j].set(l.elem, l.start.transition(l.end, l.pos))
            }
        });
        E.cssHooks.borderColor = {
            expand: function(j) {
                var k = {};
                c(["Top", "Right", "Bottom", "Left"], function(l, m) {
                    k["border" + m + "Color"] = j
                });
                return k
            }
        };
        D = E.Color.names = {
            aqua: "#00ffff",
            black: "#000000",
            blue: "#0000ff",
            fuchsia: "#ff00ff",
            gray: "#808080",
            green: "#008000",
            lime: "#00ff00",
            maroon: "#800000",
            navy: "#000080",
            olive: "#808000",
            purple: "#800080",
            red: "#ff0000",
            silver: "#c0c0c0",
            teal: "#008080",
            white: "#ffffff",
            yellow: "#ffff00",
            transparent: [null, null, null, 0],
            _default: "#ffffff"
        }
    })(jQuery);
    (function() {
        var c = ["add", "remove", "toggle"],
            b = {
                border: 1,
                borderBottom: 1,
                borderColor: 1,
                borderLeft: 1,
                borderRight: 1,
                borderTop: 1,
                borderWidth: 1,
                margin: 1,
                padding: 1
            };
        e.each(["borderLeftStyle", "borderRightStyle", "borderBottomStyle", "borderTopStyle"], function(l, k) {
            e.fx.step[k] = function(j) {
                if (j.end !== "none" && !j.setAttr || j.pos === 1 && !j.setAttr) {
                    jQuery.style(j.elem, k, j.end);
                    j.setAttr = true
                }
            }
        });

        function a() {
            var n = this.ownerDocument.defaultView ? this.ownerDocument.defaultView.getComputedStyle(this, null) : this.currentStyle,
                m = {},
                o, p;
            if (n && n.length && n[0] && n[n[0]]) {
                p = n.length;
                while (p--) {
                    o = n[p];
                    if (typeof n[o] === "string") {
                        m[e.camelCase(o)] = n[o]
                    }
                }
            } else {
                for (o in n) {
                    if (typeof n[o] === "string") {
                        m[o] = n[o]
                    }
                }
            }
            return m
        }

        function d(r, p) {
            var n = {},
                q, o;
            for (q in p) {
                o = p[q];
                if (r[q] !== o) {
                    if (!b[q]) {
                        if (e.fx.step[q] || !isNaN(parseFloat(o))) {
                            n[q] = o
                        }
                    }
                }
            }
            return n
        }
        e.effects.animateClass = function(r, q, n, o) {
            var p = e.speed(q, n, o);
            return this.queue(function() {
                var k = e(this),
                    m = k.attr("class") || "",
                    l, j = p.children ? k.find("*").andSelf() : k;
                j = j.map(function() {
                    var s = e(this);
                    return {
                        el: s,
                        start: a.call(this)
                    }
                });
                l = function() {
                    e.each(c, function(v, u) {
                        if (r[u]) {
                            k[u + "Class"](r[u])
                        }
                    })
                };
                l();
                j = j.map(function() {
                    this.end = a.call(this.el[0]);
                    this.diff = d(this.start, this.end);
                    return this
                });
                k.attr("class", m);
                j = j.map(function() {
                    var u = this,
                        w = e.Deferred(),
                        v = jQuery.extend({}, p, {
                            queue: false,
                            complete: function() {
                                w.resolve(u)
                            }
                        });
                    this.el.animate(this.diff, v);
                    return w.promise()
                });
                e.when.apply(e, j.get()).done(function() {
                    l();
                    e.each(arguments, function() {
                        var s = this.el;
                        e.each(this.diff, function(u) {
                            s.css(u, "")
                        })
                    });
                    p.complete.call(k[0])
                })
            })
        };
        e.fn.extend({
            _addClass: e.fn.addClass,
            addClass: function(o, p, m, n) {
                return p ? e.effects.animateClass.call(this, {
                    add: o
                }, p, m, n) : this._addClass(o)
            },
            _removeClass: e.fn.removeClass,
            removeClass: function(o, p, m, n) {
                return p ? e.effects.animateClass.call(this, {
                    remove: o
                }, p, m, n) : this._removeClass(o)
            },
            _toggleClass: e.fn.toggleClass,
            toggleClass: function(p, q, r, n, o) {
                if (typeof q === "boolean" || q === g) {
                    if (!r) {
                        return this._toggleClass(p, q)
                    } else {
                        return e.effects.animateClass.call(this, (q ? {
                            add: p
                        } : {
                            remove: p
                        }), r, n, o)
                    }
                } else {
                    return e.effects.animateClass.call(this, {
                        toggle: p
                    }, q, r, n)
                }
            },
            switchClass: function(r, p, q, n, o) {
                return e.effects.animateClass.call(this, {
                    add: p,
                    remove: r
                }, q, n, o)
            }
        })
    })();
    (function() {
        e.extend(e.effects, {
            version: "1.9.1",
            save: function(d, c) {
                for (var k = 0; k < c.length; k++) {
                    if (c[k] !== null) {
                        d.data(h + c[k], d[0].style[c[k]])
                    }
                }
            },
            restore: function(l, c) {
                var d, m;
                for (m = 0; m < c.length; m++) {
                    if (c[m] !== null) {
                        d = l.data(h + c[m]);
                        if (d === g) {
                            d = ""
                        }
                        l.css(c[m], d)
                    }
                }
            },
            setMode: function(d, c) {
                if (c === "toggle") {
                    c = d.is(":hidden") ? "show" : "hide"
                }
                return c
            },
            getBaseline: function(k, d) {
                var c, l;
                switch (k[0]) {
                    case "top":
                        c = 0;
                        break;
                    case "middle":
                        c = 0.5;
                        break;
                    case "bottom":
                        c = 1;
                        break;
                    default:
                        c = k[0] / d.height
                }
                switch (k[1]) {
                    case "left":
                        l = 0;
                        break;
                    case "center":
                        l = 0.5;
                        break;
                    case "right":
                        l = 1;
                        break;
                    default:
                        l = k[1] / d.width
                }
                return {
                    x: l,
                    y: c
                }
            },
            createWrapper: function(o) {
                if (o.parent().is(".ui-effects-wrapper")) {
                    return o.parent()
                }
                var n = {
                        width: o.outerWidth(true),
                        height: o.outerHeight(true),
                        "float": o.css("float")
                    },
                    c = e("<div></div>").addClass("ui-effects-wrapper").css({
                        fontSize: "100%",
                        background: "transparent",
                        border: "none",
                        margin: 0,
                        padding: 0
                    }),
                    p = {
                        width: o.width(),
                        height: o.height()
                    },
                    d = document.activeElement;
                try {
                    d.id
                } catch (m) {
                    d = document.body
                }
                o.wrap(c);
                if (o[0] === d || e.contains(o[0], d)) {
                    e(d).focus()
                }
                c = o.parent();
                if (o.css("position") === "static") {
                    c.css({
                        position: "relative"
                    });
                    o.css({
                        position: "relative"
                    })
                } else {
                    e.extend(n, {
                        position: o.css("position"),
                        zIndex: o.css("z-index")
                    });
                    e.each(["top", "left", "bottom", "right"], function(j, k) {
                        n[k] = o.css(k);
                        if (isNaN(parseInt(n[k], 10))) {
                            n[k] = "auto"
                        }
                    });
                    o.css({
                        position: "relative",
                        top: 0,
                        left: 0,
                        right: "auto",
                        bottom: "auto"
                    })
                }
                o.css(p);
                return c.css(n).show()
            },
            removeWrapper: function(d) {
                var c = document.activeElement;
                if (d.parent().is(".ui-effects-wrapper")) {
                    d.parent().replaceWith(d);
                    if (d[0] === c || e.contains(d[0], c)) {
                        e(c).focus()
                    }
                }
                return d
            },
            setTransition: function(k, c, l, d) {
                d = d || {};
                e.each(c, function(n, o) {
                    var j = k.cssUnit(o);
                    if (j[0] > 0) {
                        d[o] = j[0] * l + j[1]
                    }
                });
                return d
            }
        });

        function b(k, l, d, c) {
            if (e.isPlainObject(k)) {
                l = k;
                k = k.effect
            }
            k = {
                effect: k
            };
            if (l == null) {
                l = {}
            }
            if (e.isFunction(l)) {
                c = l;
                d = null;
                l = {}
            }
            if (typeof l === "number" || e.fx.speeds[l]) {
                c = d;
                d = l;
                l = {}
            }
            if (e.isFunction(d)) {
                c = d;
                d = null
            }
            if (l) {
                e.extend(k, l)
            }
            d = d || l.duration;
            k.duration = e.fx.off ? 0 : typeof d === "number" ? d : d in e.fx.speeds ? e.fx.speeds[d] : e.fx.speeds._default;
            k.complete = c || l.complete;
            return k
        }

        function a(c) {
            if (!c || typeof c === "number" || e.fx.speeds[c]) {
                return true
            }
            if (typeof c === "string" && !e.effects.effect[c]) {
                if (f && e.effects[c]) {
                    return false
                }
                return true
            }
            return false
        }
        e.fn.extend({
            effect: function() {
                var n = b.apply(this, arguments),
                    c = n.mode,
                    p = n.queue,
                    o = e.effects.effect[n.effect],
                    m = !o && f && e.effects[n.effect];
                if (e.fx.off || !(o || m)) {
                    if (c) {
                        return this[c](n.duration, n.complete)
                    } else {
                        return this.each(function() {
                            if (n.complete) {
                                n.complete.call(this)
                            }
                        })
                    }
                }

                function d(r) {
                    var l = e(this),
                        s = n.complete,
                        k = n.mode;

                    function j() {
                        if (e.isFunction(s)) {
                            s.call(l[0])
                        }
                        if (e.isFunction(r)) {
                            r()
                        }
                    }
                    if (l.is(":hidden") ? k === "hide" : k === "show") {
                        j()
                    } else {
                        o.call(l[0], n, j)
                    }
                }
                if (o) {
                    return p === false ? this.each(d) : this.queue(p || "fx", d)
                } else {
                    return m.call(this, {
                        options: n,
                        duration: n.duration,
                        callback: n.complete,
                        mode: n.mode
                    })
                }
            },
            _show: e.fn.show,
            show: function(c) {
                if (a(c)) {
                    return this._show.apply(this, arguments)
                } else {
                    var d = b.apply(this, arguments);
                    d.mode = "show";
                    return this.effect.call(this, d)
                }
            },
            _hide: e.fn.hide,
            hide: function(c) {
                if (a(c)) {
                    return this._hide.apply(this, arguments)
                } else {
                    var d = b.apply(this, arguments);
                    d.mode = "hide";
                    return this.effect.call(this, d)
                }
            },
            __toggle: e.fn.toggle,
            toggle: function(c) {
                if (a(c) || typeof c === "boolean" || e.isFunction(c)) {
                    return this.__toggle.apply(this, arguments)
                } else {
                    var d = b.apply(this, arguments);
                    d.mode = "toggle";
                    return this.effect.call(this, d)
                }
            },
            cssUnit: function(j) {
                var d = this.css(j),
                    c = [];
                e.each(["em", "px", "%", "pt"], function(m, l) {
                    if (d.indexOf(l) > 0) {
                        c = [parseFloat(d), l]
                    }
                });
                return c
            }
        })
    })();
    (function() {
        var a = {};
        e.each(["Quad", "Cubic", "Quart", "Quint", "Expo"], function(b, c) {
            a[c] = function(d) {
                return Math.pow(d, b + 2)
            }
        });
        e.extend(a, {
            Sine: function(b) {
                return 1 - Math.cos(b * Math.PI / 2)
            },
            Circ: function(b) {
                return 1 - Math.sqrt(1 - b * b)
            },
            Elastic: function(b) {
                return b === 0 || b === 1 ? b : -Math.pow(2, 8 * (b - 1)) * Math.sin(((b - 1) * 80 - 7.5) * Math.PI / 15)
            },
            Back: function(b) {
                return b * b * (3 * b - 2)
            },
            Bounce: function(b) {
                var d, c = 4;
                while (b < ((d = Math.pow(2, --c)) - 1) / 11) {}
                return 1 / Math.pow(4, 3 - c) - 7.5625 * Math.pow((d * 3 - 2) / 22 - b, 2)
            }
        });
        e.each(a, function(b, c) {
            e.easing["easeIn" + b] = c;
            e.easing["easeOut" + b] = function(d) {
                return 1 - c(1 - d)
            };
            e.easing["easeInOut" + b] = function(d) {
                return d < 0.5 ? c(d * 2) / 2 : 1 - c(d * -2 + 2) / 2
            }
        })
    })()
})(jQuery));
(function(j, h) {
    var f = 0,
        k = {},
        g = {};
    k.height = k.paddingTop = k.paddingBottom = k.borderTopWidth = k.borderBottomWidth = "hide";
    g.height = g.paddingTop = g.paddingBottom = g.borderTopWidth = g.borderBottomWidth = "show";
    j.widget("ui.accordion", {
        version: "1.9.1",
        options: {
            active: 0,
            animate: {},
            collapsible: false,
            event: "click",
            header: "> li > :first-child,> :not(li):even",
            heightStyle: "auto",
            icons: {
                activeHeader: "ui-icon-triangle-1-s",
                header: "ui-icon-triangle-1-e"
            },
            activate: null,
            beforeActivate: null
        },
        _create: function() {
            var a = this.accordionId = "ui-accordion-" + (this.element.attr("id") || ++f),
                b = this.options;
            this.prevShow = this.prevHide = j();
            this.element.addClass("ui-accordion ui-widget ui-helper-reset");
            this.headers = this.element.find(b.header).addClass("ui-accordion-header ui-helper-reset ui-state-default ui-corner-all");
            this._hoverable(this.headers);
            this._focusable(this.headers);
            this.headers.next().addClass("ui-accordion-content ui-helper-reset ui-widget-content ui-corner-bottom").hide();
            if (!b.collapsible && (b.active === false || b.active == null)) {
                b.active = 0
            }
            if (b.active < 0) {
                b.active += this.headers.length
            }
            this.active = this._findActive(b.active).addClass("ui-accordion-header-active ui-state-active").toggleClass("ui-corner-all ui-corner-top");
            this.active.next().addClass("ui-accordion-content-active").show();
            this._createIcons();
            this.refresh();
            this.element.attr("role", "tablist");
            this.headers.attr("role", "tab").each(function(d) {
                var c = j(this),
                    e = c.attr("id"),
                    o = c.next(),
                    n = o.attr("id");
                if (!e) {
                    e = a + "-header-" + d;
                    c.attr("id", e)
                }
                if (!n) {
                    n = a + "-panel-" + d;
                    o.attr("id", n)
                }
                c.attr("aria-controls", n);
                o.attr("aria-labelledby", e)
            }).next().attr("role", "tabpanel");
            this.headers.not(this.active).attr({
                "aria-selected": "false",
                tabIndex: -1
            }).next().attr({
                "aria-expanded": "false",
                "aria-hidden": "true"
            }).hide();
            if (!this.active.length) {
                this.headers.eq(0).attr("tabIndex", 0)
            } else {
                this.active.attr({
                    "aria-selected": "true",
                    tabIndex: 0
                }).next().attr({
                    "aria-expanded": "true",
                    "aria-hidden": "false"
                })
            }
            this._on(this.headers, {
                keydown: "_keydown"
            });
            this._on(this.headers.next(), {
                keydown: "_panelKeyDown"
            });
            this._setupEvents(b.event)
        },
        _getCreateEventData: function() {
            return {
                header: this.active,
                content: !this.active.length ? j() : this.active.next()
            }
        },
        _createIcons: function() {
            var a = this.options.icons;
            if (a) {
                j("<span>").addClass("ui-accordion-header-icon ui-icon " + a.header).prependTo(this.headers);
                this.active.children(".ui-accordion-header-icon").removeClass(a.header).addClass(a.activeHeader);
                this.headers.addClass("ui-accordion-icons")
            }
        },
        _destroyIcons: function() {
            this.headers.removeClass("ui-accordion-icons").children(".ui-accordion-header-icon").remove()
        },
        _destroy: function() {
            var a;
            this.element.removeClass("ui-accordion ui-widget ui-helper-reset").removeAttr("role");
            this.headers.removeClass("ui-accordion-header ui-accordion-header-active ui-helper-reset ui-state-default ui-corner-all ui-state-active ui-state-disabled ui-corner-top").removeAttr("role").removeAttr("aria-selected").removeAttr("aria-controls").removeAttr("tabIndex").each(function() {
                if (/^ui-accordion/.test(this.id)) {
                    this.removeAttribute("id")
                }
            });
            this._destroyIcons();
            a = this.headers.next().css("display", "").removeAttr("role").removeAttr("aria-expanded").removeAttr("aria-hidden").removeAttr("aria-labelledby").removeClass("ui-helper-reset ui-widget-content ui-corner-bottom ui-accordion-content ui-accordion-content-active ui-state-disabled").each(function() {
                if (/^ui-accordion/.test(this.id)) {
                    this.removeAttribute("id")
                }
            });
            if (this.options.heightStyle !== "content") {
                a.css("height", "")
            }
        },
        _setOption: function(b, a) {
            if (b === "active") {
                this._activate(a);
                return
            }
            if (b === "event") {
                if (this.options.event) {
                    this._off(this.headers, this.options.event)
                }
                this._setupEvents(a)
            }
            this._super(b, a);
            if (b === "collapsible" && !a && this.options.active === false) {
                this._activate(0)
            }
            if (b === "icons") {
                this._destroyIcons();
                if (a) {
                    this._createIcons()
                }
            }
            if (b === "disabled") {
                this.headers.add(this.headers.next()).toggleClass("ui-state-disabled", !!a)
            }
        },
        _keydown: function(b) {
            if (b.altKey || b.ctrlKey) {
                return
            }
            var a = j.ui.keyCode,
                c = this.headers.length,
                e = this.headers.index(b.target),
                d = false;
            switch (b.keyCode) {
                case a.RIGHT:
                case a.DOWN:
                    d = this.headers[(e + 1) % c];
                    break;
                case a.LEFT:
                case a.UP:
                    d = this.headers[(e - 1 + c) % c];
                    break;
                case a.SPACE:
                case a.ENTER:
                    this._eventHandler(b);
                    break;
                case a.HOME:
                    d = this.headers[0];
                    break;
                case a.END:
                    d = this.headers[c - 1];
                    break
            }
            if (d) {
                j(b.target).attr("tabIndex", -1);
                j(d).attr("tabIndex", 0);
                d.focus();
                b.preventDefault()
            }
        },
        _panelKeyDown: function(a) {
            if (a.keyCode === j.ui.keyCode.UP && a.ctrlKey) {
                j(a.currentTarget).prev().focus()
            }
        },
        refresh: function() {
            var b, a, d = this.options.heightStyle,
                c = this.element.parent();
            if (d === "fill") {
                if (!j.support.minHeight) {
                    a = c.css("overflow");
                    c.css("overflow", "hidden")
                }
                b = c.height();
                this.element.siblings(":visible").each(function() {
                    var e = j(this),
                        l = e.css("position");
                    if (l === "absolute" || l === "fixed") {
                        return
                    }
                    b -= e.outerHeight(true)
                });
                if (a) {
                    c.css("overflow", a)
                }
                this.headers.each(function() {
                    b -= j(this).outerHeight(true)
                });
                this.headers.next().each(function() {
                    j(this).height(Math.max(0, b - j(this).innerHeight() + j(this).height()))
                }).css("overflow", "auto")
            } else {
                if (d === "auto") {
                    b = 0;
                    this.headers.next().each(function() {
                        b = Math.max(b, j(this).height("").height())
                    }).height(b)
                }
            }
        },
        _activate: function(b) {
            var a = this._findActive(b)[0];
            if (a === this.active[0]) {
                return
            }
            a = a || this.active[0];
            this._eventHandler({
                target: a,
                currentTarget: a,
                preventDefault: j.noop
            })
        },
        _findActive: function(a) {
            return typeof a === "number" ? this.headers.eq(a) : j()
        },
        _setupEvents: function(a) {
            var b = {};
            if (!a) {
                return
            }
            j.each(a.split(" "), function(c, d) {
                b[d] = "_eventHandler"
            });
            this._on(this.headers, b)
        },
        _eventHandler: function(r) {
            var a = this.options,
                o = this.active,
                e = j(r.currentTarget),
                c = e[0] === o[0],
                q = c && a.collapsible,
                p = q ? j() : e.next(),
                d = o.next(),
                b = {
                    oldHeader: o,
                    oldPanel: d,
                    newHeader: q ? j() : e,
                    newPanel: p
                };
            r.preventDefault();
            if ((c && !a.collapsible) || (this._trigger("beforeActivate", r, b) === false)) {
                return
            }
            a.active = q ? false : this.headers.index(e);
            this.active = c ? j() : e;
            this._toggle(b);
            o.removeClass("ui-accordion-header-active ui-state-active");
            if (a.icons) {
                o.children(".ui-accordion-header-icon").removeClass(a.icons.activeHeader).addClass(a.icons.header)
            }
            if (!c) {
                e.removeClass("ui-corner-all").addClass("ui-accordion-header-active ui-state-active ui-corner-top");
                if (a.icons) {
                    e.children(".ui-accordion-header-icon").removeClass(a.icons.header).addClass(a.icons.activeHeader)
                }
                e.next().addClass("ui-accordion-content-active")
            }
        },
        _toggle: function(a) {
            var c = a.newPanel,
                b = this.prevShow.length ? this.prevShow : a.oldPanel;
            this.prevShow.add(this.prevHide).stop(true, true);
            this.prevShow = c;
            this.prevHide = b;
            if (this.options.animate) {
                this._animate(c, b, a)
            } else {
                b.hide();
                c.show();
                this._toggleComplete(a)
            }
            b.attr({
                "aria-expanded": "false",
                "aria-hidden": "true"
            });
            b.prev().attr("aria-selected", "false");
            if (c.length && b.length) {
                b.prev().attr("tabIndex", -1)
            } else {
                if (c.length) {
                    this.headers.filter(function() {
                        return j(this).attr("tabIndex") === 0
                    }).attr("tabIndex", -1)
                }
            }
            c.attr({
                "aria-expanded": "true",
                "aria-hidden": "false"
            }).prev().attr({
                "aria-selected": "true",
                tabIndex: 0
            })
        },
        _animate: function(y, d, u) {
            var e, r, v, s = this,
                c = 0,
                b = y.length && (!d.length || (y.index() < d.index())),
                w = this.options.animate || {},
                a = b && w.down || w,
                x = function() {
                    s._toggleComplete(u)
                };
            if (typeof a === "number") {
                v = a
            }
            if (typeof a === "string") {
                r = a
            }
            r = r || a.easing || w.easing;
            v = v || a.duration || w.duration;
            if (!d.length) {
                return y.animate(g, v, r, x)
            }
            if (!y.length) {
                return d.animate(k, v, r, x)
            }
            e = y.show().outerHeight();
            d.animate(k, {
                duration: v,
                easing: r,
                step: function(m, l) {
                    l.now = Math.round(m)
                }
            });
            y.hide().animate(g, {
                duration: v,
                easing: r,
                complete: x,
                step: function(m, l) {
                    l.now = Math.round(m);
                    if (l.prop !== "height") {
                        c += l.now
                    } else {
                        if (s.options.heightStyle !== "content") {
                            l.now = Math.round(e - d.outerHeight() - c);
                            c = 0
                        }
                    }
                }
            })
        },
        _toggleComplete: function(a) {
            var b = a.oldPanel;
            b.removeClass("ui-accordion-content-active").prev().removeClass("ui-corner-top").addClass("ui-corner-all");
            if (b.length) {
                b.parent()[0].className = b.parent()[0].className
            }
            this._trigger("activate", null, a)
        }
    });
    if (j.uiBackCompat !== false) {
        (function(b, c) {
            b.extend(c.options, {
                navigation: false,
                navigationFilter: function() {
                    return this.href.toLowerCase() === location.href.toLowerCase()
                }
            });
            var a = c._create;
            c._create = function() {
                if (this.options.navigation) {
                    var m = this,
                        d = this.element.find(this.options.header),
                        n = d.next(),
                        e = d.add(n).find("a").filter(this.options.navigationFilter)[0];
                    if (e) {
                        d.add(n).each(function(l) {
                            if (b.contains(this, e)) {
                                m.options.active = Math.floor(l / 2);
                                return false
                            }
                        })
                    }
                }
                a.call(this)
            }
        }(jQuery, jQuery.ui.accordion.prototype));
        (function(b, d) {
            b.extend(d.options, {
                heightStyle: null,
                autoHeight: true,
                clearStyle: false,
                fillSpace: false
            });
            var a = d._create,
                c = d._setOption;
            b.extend(d, {
                _create: function() {
                    this.options.heightStyle = this.options.heightStyle || this._mergeHeightStyle();
                    a.call(this)
                },
                _setOption: function(e) {
                    if (e === "autoHeight" || e === "clearStyle" || e === "fillSpace") {
                        this.options.heightStyle = this._mergeHeightStyle()
                    }
                    c.apply(this, arguments)
                },
                _mergeHeightStyle: function() {
                    var e = this.options;
                    if (e.fillSpace) {
                        return "fill"
                    }
                    if (e.clearStyle) {
                        return "content"
                    }
                    if (e.autoHeight) {
                        return "auto"
                    }
                }
            })
        }(jQuery, jQuery.ui.accordion.prototype));
        (function(a, b) {
            a.extend(b.options.icons, {
                activeHeader: null,
                headerSelected: "ui-icon-triangle-1-s"
            });
            var c = b._createIcons;
            b._createIcons = function() {
                if (this.options.icons) {
                    this.options.icons.activeHeader = this.options.icons.activeHeader || this.options.icons.headerSelected
                }
                c.call(this)
            }
        }(jQuery, jQuery.ui.accordion.prototype));
        (function(a, b) {
            b.activate = b._activate;
            var c = b._findActive;
            b._findActive = function(d) {
                if (d === -1) {
                    d = false
                }
                if (d && typeof d !== "number") {
                    d = this.headers.index(this.headers.filter(d));
                    if (d === -1) {
                        d = false
                    }
                }
                return c.call(this, d)
            }
        }(jQuery, jQuery.ui.accordion.prototype));
        jQuery.ui.accordion.prototype.resize = jQuery.ui.accordion.prototype.refresh;
        (function(a, b) {
            a.extend(b.options, {
                change: null,
                changestart: null
            });
            var c = b._trigger;
            b._trigger = function(m, e, d) {
                var n = c.apply(this, arguments);
                if (!n) {
                    return false
                }
                if (m === "beforeActivate") {
                    n = c.call(this, "changestart", e, {
                        oldHeader: d.oldHeader,
                        oldContent: d.oldPanel,
                        newHeader: d.newHeader,
                        newContent: d.newPanel
                    })
                } else {
                    if (m === "activate") {
                        n = c.call(this, "change", e, {
                            oldHeader: d.oldHeader,
                            oldContent: d.oldPanel,
                            newHeader: d.newHeader,
                            newContent: d.newPanel
                        })
                    }
                }
                return n
            }
        }(jQuery, jQuery.ui.accordion.prototype));
        (function(b, c) {
            b.extend(c.options, {
                animate: null,
                animated: "slide"
            });
            var a = c._create;
            c._create = function() {
                var d = this.options;
                if (d.animate === null) {
                    if (!d.animated) {
                        d.animate = false
                    } else {
                        if (d.animated === "slide") {
                            d.animate = 300
                        } else {
                            if (d.animated === "bounceslide") {
                                d.animate = {
                                    duration: 200,
                                    down: {
                                        easing: "easeOutBounce",
                                        duration: 1000
                                    }
                                }
                            } else {
                                d.animate = d.animated
                            }
                        }
                    }
                }
                a.call(this)
            }
        }(jQuery, jQuery.ui.accordion.prototype))
    }
})(jQuery);
(function(e, d) {
    var f = 0;
    e.widget("ui.autocomplete", {
        version: "1.9.1",
        defaultElement: "<input>",
        options: {
            appendTo: "body",
            autoFocus: false,
            delay: 300,
            minLength: 1,
            position: {
                my: "left top",
                at: "left bottom",
                collision: "none"
            },
            source: null,
            change: null,
            close: null,
            focus: null,
            open: null,
            response: null,
            search: null,
            select: null
        },
        pending: 0,
        _create: function() {
            var b, c, a;
            this.isMultiLine = this._isMultiLine();
            this.valueMethod = this.element[this.element.is("input,textarea") ? "val" : "text"];
            this.isNewMenu = true;
            this.element.addClass("ui-autocomplete-input").attr("autocomplete", "off");
            this._on(this.element, {
                keydown: function(k) {
                    if (this.element.prop("readOnly")) {
                        b = true;
                        a = true;
                        c = true;
                        return
                    }
                    b = false;
                    a = false;
                    c = false;
                    var j = e.ui.keyCode;
                    switch (k.keyCode) {
                        case j.PAGE_UP:
                            b = true;
                            this._move("previousPage", k);
                            break;
                        case j.PAGE_DOWN:
                            b = true;
                            this._move("nextPage", k);
                            break;
                        case j.UP:
                            b = true;
                            this._keyEvent("previous", k);
                            break;
                        case j.DOWN:
                            b = true;
                            this._keyEvent("next", k);
                            break;
                        case j.ENTER:
                        case j.NUMPAD_ENTER:
                            if (this.menu.active) {
                                b = true;
                                k.preventDefault();
                                this.menu.select(k)
                            }
                            break;
                        case j.TAB:
                            if (this.menu.active) {
                                this.menu.select(k)
                            }
                            break;
                        case j.ESCAPE:
                            if (this.menu.element.is(":visible")) {
                                this._value(this.term);
                                this.close(k);
                                k.preventDefault()
                            }
                            break;
                        default:
                            c = true;
                            this._searchTimeout(k);
                            break
                    }
                },
                keypress: function(k) {
                    if (b) {
                        b = false;
                        k.preventDefault();
                        return
                    }
                    if (c) {
                        return
                    }
                    var j = e.ui.keyCode;
                    switch (k.keyCode) {
                        case j.PAGE_UP:
                            this._move("previousPage", k);
                            break;
                        case j.PAGE_DOWN:
                            this._move("nextPage", k);
                            break;
                        case j.UP:
                            this._keyEvent("previous", k);
                            break;
                        case j.DOWN:
                            this._keyEvent("next", k);
                            break
                    }
                },
                input: function(h) {
                    if (a) {
                        a = false;
                        h.preventDefault();
                        return
                    }
                    this._searchTimeout(h)
                },
                focus: function() {
                    this.selectedItem = null;
                    this.previous = this._value()
                },
                blur: function(h) {
                    if (this.cancelBlur) {
                        delete this.cancelBlur;
                        return
                    }
                    clearTimeout(this.searching);
                    this.close(h);
                    this._change(h)
                }
            });
            this._initSource();
            this.menu = e("<ul>").addClass("ui-autocomplete").appendTo(this.document.find(this.options.appendTo || "body")[0]).menu({
                input: e(),
                role: null
            }).zIndex(this.element.zIndex() + 1).hide().data("menu");
            this._on(this.menu.element, {
                mousedown: function(k) {
                    k.preventDefault();
                    this.cancelBlur = true;
                    this._delay(function() {
                        delete this.cancelBlur
                    });
                    var j = this.menu.element[0];
                    if (!e(k.target).closest(".ui-menu-item").length) {
                        this._delay(function() {
                            var g = this;
                            this.document.one("mousedown", function(h) {
                                if (h.target !== g.element[0] && h.target !== j && !e.contains(j, h.target)) {
                                    g.close()
                                }
                            })
                        })
                    }
                },
                menufocus: function(k, j) {
                    if (this.isNewMenu) {
                        this.isNewMenu = false;
                        if (k.originalEvent && /^mouse/.test(k.originalEvent.type)) {
                            this.menu.blur();
                            this.document.one("mousemove", function() {
                                e(k.target).trigger(k.originalEvent)
                            });
                            return
                        }
                    }
                    var l = j.item.data("ui-autocomplete-item") || j.item.data("item.autocomplete");
                    if (false !== this._trigger("focus", k, {
                            item: l
                        })) {
                        if (k.originalEvent && /^key/.test(k.originalEvent.type)) {
                            this._value(l.value)
                        }
                    } else {
                        this.liveRegion.text(l.value)
                    }
                },
                menuselect: function(l, k) {
                    var m = k.item.data("ui-autocomplete-item") || k.item.data("item.autocomplete"),
                        n = this.previous;
                    if (this.element[0] !== this.document[0].activeElement) {
                        this.element.focus();
                        this.previous = n;
                        this._delay(function() {
                            this.previous = n;
                            this.selectedItem = m
                        })
                    }
                    if (false !== this._trigger("select", l, {
                            item: m
                        })) {
                        this._value(m.value)
                    }
                    this.term = this._value();
                    this.close(l);
                    this.selectedItem = m
                }
            });
            this.liveRegion = e("<span>", {
                role: "status",
                "aria-live": "polite"
            }).addClass("ui-helper-hidden-accessible").insertAfter(this.element);
            if (e.fn.bgiframe) {
                this.menu.element.bgiframe()
            }
            this._on(this.window, {
                beforeunload: function() {
                    this.element.removeAttr("autocomplete")
                }
            })
        },
        _destroy: function() {
            clearTimeout(this.searching);
            this.element.removeClass("ui-autocomplete-input").removeAttr("autocomplete");
            this.menu.element.remove();
            this.liveRegion.remove()
        },
        _setOption: function(b, a) {
            this._super(b, a);
            if (b === "source") {
                this._initSource()
            }
            if (b === "appendTo") {
                this.menu.element.appendTo(this.document.find(a || "body")[0])
            }
            if (b === "disabled" && a && this.xhr) {
                this.xhr.abort()
            }
        },
        _isMultiLine: function() {
            if (this.element.is("textarea")) {
                return true
            }
            if (this.element.is("input")) {
                return false
            }
            return this.element.prop("isContentEditable")
        },
        _initSource: function() {
            var a, c, b = this;
            if (e.isArray(this.options.source)) {
                a = this.options.source;
                this.source = function(j, k) {
                    k(e.ui.autocomplete.filter(a, j.term))
                }
            } else {
                if (typeof this.options.source === "string") {
                    c = this.options.source;
                    this.source = function(j, k) {
                        if (b.xhr) {
                            b.xhr.abort()
                        }
                        b.xhr = e.ajax({
                            url: c,
                            data: j,
                            dataType: "json",
                            success: function(g) {
                                k(g)
                            },
                            error: function() {
                                k([])
                            }
                        })
                    }
                } else {
                    this.source = this.options.source
                }
            }
        },
        _searchTimeout: function(a) {
            clearTimeout(this.searching);
            this.searching = this._delay(function() {
                if (this.term !== this._value()) {
                    this.selectedItem = null;
                    this.search(null, a)
                }
            }, this.options.delay)
        },
        search: function(a, b) {
            a = a != null ? a : this._value();
            this.term = this._value();
            if (a.length < this.options.minLength) {
                return this.close(b)
            }
            if (this._trigger("search", b) === false) {
                return
            }
            return this._search(a)
        },
        _search: function(a) {
            this.pending++;
            this.element.addClass("ui-autocomplete-loading");
            this.cancelSearch = false;
            this.source({
                term: a
            }, this._response())
        },
        _response: function() {
            var a = this,
                b = ++f;
            return function(c) {
                if (b === f) {
                    a.__response(c)
                }
                a.pending--;
                if (!a.pending) {
                    a.element.removeClass("ui-autocomplete-loading")
                }
            }
        },
        __response: function(a) {
            if (a) {
                a = this._normalize(a)
            }
            this._trigger("response", null, {
                content: a
            });
            if (!this.options.disabled && a && a.length && !this.cancelSearch) {
                this._suggest(a);
                this._trigger("open")
            } else {
                this._close()
            }
        },
        close: function(a) {
            this.cancelSearch = true;
            this._close(a)
        },
        _close: function(a) {
            if (this.menu.element.is(":visible")) {
                this.menu.element.hide();
                this.menu.blur();
                this.isNewMenu = true;
                this._trigger("close", a)
            }
        },
        _change: function(a) {
            if (this.previous !== this._value()) {
                this._trigger("change", a, {
                    item: this.selectedItem
                })
            }
        },
        _normalize: function(a) {
            if (a.length && a[0].label && a[0].value) {
                return a
            }
            return e.map(a, function(b) {
                if (typeof b === "string") {
                    return {
                        label: b,
                        value: b
                    }
                }
                return e.extend({
                    label: b.label || b.value,
                    value: b.value || b.label
                }, b)
            })
        },
        _suggest: function(b) {
            var a = this.menu.element.empty().zIndex(this.element.zIndex() + 1);
            this._renderMenu(a, b);
            this.menu.refresh();
            a.show();
            this._resizeMenu();
            a.position(e.extend({ of: this.element
            }, this.options.position));
            if (this.options.autoFocus) {
                this.menu.next()
            }
        },
        _resizeMenu: function() {
            var a = this.menu.element;
            a.outerWidth(Math.max(a.width("").outerWidth() + 1, this.element.outerWidth()))
        },
        _renderMenu: function(b, c) {
            var a = this;
            e.each(c, function(k, j) {
                a._renderItemData(b, j)
            })
        },
        _renderItemData: function(b, a) {
            return this._renderItem(b, a).data("ui-autocomplete-item", a)
        },
        _renderItem: function(b, a) {
            return e("<li>").append(e("<a>").text(a.label)).appendTo(b)
        },
        _move: function(a, b) {
            if (!this.menu.element.is(":visible")) {
                this.search(null, b);
                return
            }
            if (this.menu.isFirstItem() && /^previous/.test(a) || this.menu.isLastItem() && /^next/.test(a)) {
                this._value(this.term);
                this.menu.blur();
                return
            }
            this.menu[a](b)
        },
        widget: function() {
            return this.menu.element
        },
        _value: function() {
            return this.valueMethod.apply(this.element, arguments)
        },
        _keyEvent: function(a, b) {
            if (!this.isMultiLine || this.menu.element.is(":visible")) {
                this._move(a, b);
                b.preventDefault()
            }
        }
    });
    e.extend(e.ui.autocomplete, {
        escapeRegex: function(a) {
            return a.replace(/[\-\[\]{}()*+?.,\\\^$|#\s]/g, "\\$&")
        },
        filter: function(a, c) {
            var b = new RegExp(e.ui.autocomplete.escapeRegex(c), "i");
            return e.grep(a, function(h) {
                return b.test(h.label || h.value || h)
            })
        }
    });
    e.widget("ui.autocomplete", e.ui.autocomplete, {
        options: {
            messages: {
                noResults: "No search results.",
                results: function(a) {
                    return a + (a > 1 ? " results are" : " result is") + " available, use up and down arrow keys to navigate."
                }
            }
        },
        __response: function(a) {
            var b;
            this._superApply(arguments);
            if (this.options.disabled || this.cancelSearch) {
                return
            }
            if (a && a.length) {
                b = this.options.messages.results(a.length)
            } else {
                b = this.options.messages.noResults
            }
            this.liveRegion.text(b)
        }
    })
}(jQuery));
(function(q, v) {
    var l, r, w, o, n = "ui-button ui-widget ui-state-default ui-corner-all",
        u = "ui-state-hover ui-state-active ",
        p = "ui-button-icons-only ui-button-icon-only ui-button-text-icons ui-button-text-icon-primary ui-button-text-icon-secondary ui-button-text-only",
        m = function() {
            var a = q(this).find(":ui-button");
            setTimeout(function() {
                a.button("refresh")
            }, 1)
        },
        s = function(a) {
            var b = a.name,
                d = a.form,
                c = q([]);
            if (b) {
                if (d) {
                    c = q(d).find("[name='" + b + "']")
                } else {
                    c = q("[name='" + b + "']", a.ownerDocument).filter(function() {
                        return !this.form
                    })
                }
            }
            return c
        };
    q.widget("ui.button", {
        version: "1.9.1",
        defaultElement: "<button>",
        options: {
            disabled: null,
            text: true,
            label: null,
            icons: {
                primary: null,
                secondary: null
            }
        },
        _create: function() {
            this.element.closest("form").unbind("reset" + this.eventNamespace).bind("reset" + this.eventNamespace, m);
            if (typeof this.options.disabled !== "boolean") {
                this.options.disabled = !!this.element.prop("disabled")
            } else {
                this.element.prop("disabled", this.options.disabled)
            }
            this._determineButtonType();
            this.hasTitle = !!this.buttonElement.attr("title");
            var e = this,
                a = this.options,
                d = this.type === "checkbox" || this.type === "radio",
                c = "ui-state-hover" + (!d ? " ui-state-active" : ""),
                b = "ui-state-focus";
            if (a.label === null) {
                a.label = (this.type === "input" ? this.buttonElement.val() : this.buttonElement.html())
            }
            this.buttonElement.addClass(n).attr("role", "button").bind("mouseenter" + this.eventNamespace, function() {
                if (a.disabled) {
                    return
                }
                q(this).addClass("ui-state-hover");
                if (this === l) {
                    q(this).addClass("ui-state-active")
                }
            }).bind("mouseleave" + this.eventNamespace, function() {
                if (a.disabled) {
                    return
                }
                q(this).removeClass(c)
            }).bind("click" + this.eventNamespace, function(f) {
                if (a.disabled) {
                    f.preventDefault();
                    f.stopImmediatePropagation()
                }
            });
            this.element.bind("focus" + this.eventNamespace, function() {
                e.buttonElement.addClass(b)
            }).bind("blur" + this.eventNamespace, function() {
                e.buttonElement.removeClass(b)
            });
            if (d) {
                this.element.bind("change" + this.eventNamespace, function() {
                    if (o) {
                        return
                    }
                    e.refresh()
                });
                this.buttonElement.bind("mousedown" + this.eventNamespace, function(f) {
                    if (a.disabled) {
                        return
                    }
                    o = false;
                    r = f.pageX;
                    w = f.pageY
                }).bind("mouseup" + this.eventNamespace, function(f) {
                    if (a.disabled) {
                        return
                    }
                    if (r !== f.pageX || w !== f.pageY) {
                        o = true
                    }
                })
            }
            if (this.type === "checkbox") {
                this.buttonElement.bind("click" + this.eventNamespace, function() {
                    if (a.disabled || o) {
                        return false
                    }
                    q(this).toggleClass("ui-state-active");
                    e.buttonElement.attr("aria-pressed", e.element[0].checked)
                })
            } else {
                if (this.type === "radio") {
                    this.buttonElement.bind("click" + this.eventNamespace, function() {
                        if (a.disabled || o) {
                            return false
                        }
                        q(this).addClass("ui-state-active");
                        e.buttonElement.attr("aria-pressed", "true");
                        var f = e.element[0];
                        s(f).not(f).map(function() {
                            return q(this).button("widget")[0]
                        }).removeClass("ui-state-active").attr("aria-pressed", "false")
                    })
                } else {
                    this.buttonElement.bind("mousedown" + this.eventNamespace, function() {
                        if (a.disabled) {
                            return false
                        }
                        q(this).addClass("ui-state-active");
                        l = this;
                        e.document.one("mouseup", function() {
                            l = null
                        })
                    }).bind("mouseup" + this.eventNamespace, function() {
                        if (a.disabled) {
                            return false
                        }
                        q(this).removeClass("ui-state-active")
                    }).bind("keydown" + this.eventNamespace, function(f) {
                        if (a.disabled) {
                            return false
                        }
                        if (f.keyCode === q.ui.keyCode.SPACE || f.keyCode === q.ui.keyCode.ENTER) {
                            q(this).addClass("ui-state-active")
                        }
                    }).bind("keyup" + this.eventNamespace, function() {
                        q(this).removeClass("ui-state-active")
                    });
                    if (this.buttonElement.is("a")) {
                        this.buttonElement.keyup(function(f) {
                            if (f.keyCode === q.ui.keyCode.SPACE) {
                                q(this).click()
                            }
                        })
                    }
                }
            }
            this._setOption("disabled", a.disabled);
            this._resetButton()
        },
        _determineButtonType: function() {
            var b, c, a;
            if (this.element.is("[type=checkbox]")) {
                this.type = "checkbox"
            } else {
                if (this.element.is("[type=radio]")) {
                    this.type = "radio"
                } else {
                    if (this.element.is("input")) {
                        this.type = "input"
                    } else {
                        this.type = "button"
                    }
                }
            }
            if (this.type === "checkbox" || this.type === "radio") {
                b = this.element.parents().last();
                c = "label[for='" + this.element.attr("id") + "']";
                this.buttonElement = b.find(c);
                if (!this.buttonElement.length) {
                    b = b.length ? b.siblings() : this.element.siblings();
                    this.buttonElement = b.filter(c);
                    if (!this.buttonElement.length) {
                        this.buttonElement = b.find(c)
                    }
                }
                this.element.addClass("ui-helper-hidden-accessible");
                a = this.element.is(":checked");
                if (a) {
                    this.buttonElement.addClass("ui-state-active")
                }
                this.buttonElement.prop("aria-pressed", a)
            } else {
                this.buttonElement = this.element
            }
        },
        widget: function() {
            return this.buttonElement
        },
        _destroy: function() {
            this.element.removeClass("ui-helper-hidden-accessible");
            this.buttonElement.removeClass(n + " " + u + " " + p).removeAttr("role").removeAttr("aria-pressed").html(this.buttonElement.find(".ui-button-text").html());
            if (!this.hasTitle) {
                this.buttonElement.removeAttr("title")
            }
        },
        _setOption: function(b, a) {
            this._super(b, a);
            if (b === "disabled") {
                if (a) {
                    this.element.prop("disabled", true)
                } else {
                    this.element.prop("disabled", false)
                }
                return
            }
            this._resetButton()
        },
        refresh: function() {
            var a = this.element.is(":disabled") || this.element.hasClass("ui-button-disabled");
            if (a !== this.options.disabled) {
                this._setOption("disabled", a)
            }
            if (this.type === "radio") {
                s(this.element[0]).each(function() {
                    if (q(this).is(":checked")) {
                        q(this).button("widget").addClass("ui-state-active").attr("aria-pressed", "true")
                    } else {
                        q(this).button("widget").removeClass("ui-state-active").attr("aria-pressed", "false")
                    }
                })
            } else {
                if (this.type === "checkbox") {
                    if (this.element.is(":checked")) {
                        this.buttonElement.addClass("ui-state-active").attr("aria-pressed", "true")
                    } else {
                        this.buttonElement.removeClass("ui-state-active").attr("aria-pressed", "false")
                    }
                }
            }
        },
        _resetButton: function() {
            if (this.type === "input") {
                if (this.options.label) {
                    this.element.val(this.options.label)
                }
                return
            }
            var c = this.buttonElement.removeClass(p),
                e = q("<span></span>", this.document[0]).addClass("ui-button-text").html(this.options.label).appendTo(c.empty()).text(),
                a = this.options.icons,
                b = a.primary && a.secondary,
                d = [];
            if (a.primary || a.secondary) {
                if (this.options.text) {
                    d.push("ui-button-text-icon" + (b ? "s" : (a.primary ? "-primary" : "-secondary")))
                }
                if (a.primary) {
                    c.prepend("<span class='ui-button-icon-primary ui-icon " + a.primary + "'></span>")
                }
                if (a.secondary) {
                    c.append("<span class='ui-button-icon-secondary ui-icon " + a.secondary + "'></span>")
                }
                if (!this.options.text) {
                    d.push(b ? "ui-button-icons-only" : "ui-button-icon-only");
                    if (!this.hasTitle) {
                        c.attr("title", q.trim(e))
                    }
                }
            } else {
                d.push("ui-button-text-only")
            }
            c.addClass(d.join(" "))
        }
    });
    q.widget("ui.buttonset", {
        version: "1.9.1",
        options: {
            items: "button, input[type=button], input[type=submit], input[type=reset], input[type=checkbox], input[type=radio], a, :data(button)"
        },
        _create: function() {
            this.element.addClass("ui-buttonset")
        },
        _init: function() {
            this.refresh()
        },
        _setOption: function(b, a) {
            if (b === "disabled") {
                this.buttons.button("option", b, a)
            }
            this._super(b, a)
        },
        refresh: function() {
            var a = this.element.css("direction") === "rtl";
            this.buttons = this.element.find(this.options.items).filter(":ui-button").button("refresh").end().not(":ui-button").button().end().map(function() {
                return q(this).button("widget")[0]
            }).removeClass("ui-corner-all ui-corner-left ui-corner-right").filter(":first").addClass(a ? "ui-corner-right" : "ui-corner-left").end().filter(":last").addClass(a ? "ui-corner-left" : "ui-corner-right").end().end()
        },
        _destroy: function() {
            this.element.removeClass("ui-buttonset");
            this.buttons.map(function() {
                return q(this).button("widget")[0]
            }).removeClass("ui-corner-left ui-corner-right").end().button("destroy")
        }
    })
}(jQuery));
(function($, ) {
    $.extend($.ui, {
        datepicker: {
            version: "1.9.1"
        }
    });
    var PROP_NAME = "datepicker";
    var dpuuid = new Date().getTime();
    var instActive;

    function Datepicker() {
        this.debug = false;
        this._curInst = null;
        this._keyEvent = false;
        this._disabledInputs = [];
        this._datepickerShowing = false;
        this._inDialog = false;
        this._mainDivId = "ui-datepicker-div";
        this._inlineClass = "ui-datepicker-inline";
        this._appendClass = "ui-datepicker-append";
        this._triggerClass = "ui-datepicker-trigger";
        this._dialogClass = "ui-datepicker-dialog";
        this._disableClass = "ui-datepicker-disabled";
        this._unselectableClass = "ui-datepicker-unselectable";
        this._currentClass = "ui-datepicker-current-day";
        this._dayOverClass = "ui-datepicker-days-cell-over";
        this.regional = [];
        this.regional[""] = {
            closeText: "Done",
            prevText: "Prev",
            nextText: "Next",
            currentText: "Today",
            monthNames: ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"],
            monthNamesShort: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"],
            dayNames: ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"],
            dayNamesShort: ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"],
            dayNamesMin: ["Su", "Mo", "Tu", "We", "Th", "Fr", "Sa"],
            weekHeader: "Wk",
            dateFormat: "mm/dd/yy",
            firstDay: 0,
            isRTL: false,
            showMonthAfterYear: false,
            yearSuffix: ""
        };
        this._defaults = {
            showOn: "focus",
            showAnim: "fadeIn",
            showOptions: {},
            defaultDate: null,
            appendText: "",
            buttonText: "...",
            buttonImage: "",
            buttonImageOnly: false,
            hideIfNoPrevNext: false,
            navigationAsDateFormat: false,
            gotoCurrent: false,
            changeMonth: false,
            changeYear: false,
            yearRange: "c-10:c+10",
            showOtherMonths: false,
            selectOtherMonths: false,
            showWeek: false,
            calculateWeek: this.iso8601Week,
            shortYearCutoff: "+10",
            minDate: null,
            maxDate: null,
            duration: "fast",
            beforeShowDay: null,
            beforeShow: null,
            onSelect: null,
            onChangeMonthYear: null,
            onClose: null,
            numberOfMonths: 1,
            showCurrentAtPos: 0,
            stepMonths: 1,
            stepBigMonths: 12,
            altField: "",
            altFormat: "",
            constrainInput: true,
            showButtonPanel: false,
            autoSize: false,
            disabled: false
        };
        $.extend(this._defaults, this.regional[""]);
        this.dpDiv = bindHover($('<div id="' + this._mainDivId + '" class="ui-datepicker ui-widget ui-widget-content ui-helper-clearfix ui-corner-all"></div>'))
    }
    $.extend(Datepicker.prototype, {
        markerClassName: "hasDatepicker",
        maxRows: 4,
        log: function() {
            if (this.debug) {
                console.log.apply("", arguments)
            }
        },
        _widgetDatepicker: function() {
            return this.dpDiv
        },
        setDefaults: function(settings) {
            extendRemove(this._defaults, settings || {});
            return this
        },
        _attachDatepicker: function(target, settings) {
            var inlineSettings = null;
            for (var attrName in this._defaults) {
                var attrValue = target.getAttribute("date:" + attrName);
                if (attrValue) {
                    inlineSettings = inlineSettings || {};
                    try {
                        inlineSettings[attrName] = eval(attrValue)
                    } catch (err) {
                        inlineSettings[attrName] = attrValue
                    }
                }
            }
            var nodeName = target.nodeName.toLowerCase();
            var inline = (nodeName == "div" || nodeName == "span");
            if (!target.id) {
                this.uuid += 1;
                target.id = "dp" + this.uuid
            }
            var inst = this._newInst($(target), inline);
            inst.settings = $.extend({}, settings || {}, inlineSettings || {});
            if (nodeName == "input") {
                this._connectDatepicker(target, inst)
            } else {
                if (inline) {
                    this._inlatepicker(target, inst)
                }
            }
        },
        _newInst: function(target, inline) {
            var id = target[0].id.replace(/([^A-Za-z0-9_-])/g, "\\\\$1");
            return {
                id: id,
                input: target,
                selectedDay: 0,
                selectedMonth: 0,
                selectedYear: 0,
                drawMonth: 0,
                drawYear: 0,
                inline: inline,
                dpDiv: (!inline ? this.dpDiv : bindHover($('<div class="' + this._inlineClass + ' ui-datepicker ui-widget ui-widget-content ui-helper-clearfix ui-corner-all"></div>')))
            }
        },
        _connectDatepicker: function(target, inst) {
            var input = $(target);
            inst.append = $([]);
            inst.trigger = $([]);
            if (input.hasClass(this.markerClassName)) {
                return
            }
            this._attachments(input, inst);
            input.addClass(this.markerClassName).keydown(this._doKeyDown).keypress(this._doKeyPress).keyup(this._doKeyUp).bind("setData.datepicker", function(event, key, value) {
                inst.settings[key] = value
            }).bind("getData.datepicker", function(event, key) {
                return this._get(inst, key)
            });
            this._autoSize(inst);
            $.data(target, PROP_NAME, inst);
            if (inst.settings.disabled) {
                this._disableDatepicker(target)
            }
        },
        _attachments: function(input, inst) {
            var appendText = this._get(inst, "appendText");
            var isRTL = this._get(inst, "isRTL");
            if (inst.append) {
                inst.append.remove()
            }
            if (appendText) {
                inst.append = $('<span class="' + this._appendClass + '">' + appendText + "</span>");
                input[isRTL ? "before" : "after"](inst.append)
            }
            input.unbind("focus", this._showDatepicker);
            if (inst.trigger) {
                inst.trigger.remove()
            }
            var showOn = this._get(inst, "showOn");
            if (showOn == "focus" || showOn == "both") {
                input.focus(this._showDatepicker)
            }
            if (showOn == "button" || showOn == "both") {
                var buttonText = this._get(inst, "buttonText");
                var buttonImage = this._get(inst, "buttonImage");
                inst.trigger = $(this._get(inst, "buttonImageOnly") ? $("<img/>").addClass(this._triggerClass).attr({
                    src: buttonImage,
                    alt: buttonText,
                    title: buttonText
                }) : $('<button type="button"></button>').addClass(this._triggerClass).html(buttonImage == "" ? buttonText : $("<img/>").attr({
                    src: buttonImage,
                    alt: buttonText,
                    title: buttonText
                })));
                input[isRTL ? "before" : "after"](inst.trigger);
                inst.trigger.click(function() {
                    if ($.datepicker._datepickerShowing && $.datepicker._lastInput == input[0]) {
                        $.datepicker._hideDatepicker()
                    } else {
                        if ($.datepicker._datepickerShowing && $.datepicker._lastInput != input[0]) {
                            $.datepicker._hideDatepicker();
                            $.datepicker._showDatepicker(input[0])
                        } else {
                            $.datepicker._showDatepicker(input[0])
                        }
                    }
                    return false
                })
            }
        },
        _autoSize: function(inst) {
            if (this._get(inst, "autoSize") && !inst.inline) {
                var date = new Date(2009, 12 - 1, 20);
                var dateFormat = this._get(inst, "dateFormat");
                if (dateFormat.match(/[DM]/)) {
                    var findMax = function(names) {
                        var max = 0;
                        var maxI = 0;
                        for (var i = 0; i < names.length; i++) {
                            if (names[i].length > max) {
                                max = names[i].length;
                                maxI = i
                            }
                        }
                        return maxI
                    };
                    date.setMonth(findMax(this._get(inst, (dateFormat.match(/MM/) ? "monthNames" : "monthNamesShort"))));
                    date.setDate(findMax(this._get(inst, (dateFormat.match(/DD/) ? "dayNames" : "dayNamesShort"))) + 20 - date.getDay())
                }
                inst.input.attr("size", this._formatDate(inst, date).length)
            }
        },
        _inlatepicker: function(target, inst) {
            var divSpan = $(target);
            if (divSpan.hasClass(this.markerClassName)) {
                return
            }
            divSpan.addClass(this.markerClassName).append(inst.dpDiv).bind("setData.datepicker", function(event, key, value) {
                inst.settings[key] = value
            }).bind("getData.datepicker", function(event, key) {
                return this._get(inst, key)
            });
            $.data(target, PROP_NAME, inst);
            this._setDate(inst, this._getDefaultDate(inst), true);
            this._updateDatepicker(inst);
            this._updateAlternate(inst);
            if (inst.settings.disabled) {
                this._disableDatepicker(target)
            }
            inst.dpDiv.css("display", "block")
        },
        _dialogDatepicker: function(input, date, onSelect, settings, pos) {
            var inst = this._dialogInst;
            if (!inst) {
                this.uuid += 1;
                var id = "dp" + this.uuid;
                this._dialogInput = $('<input type="text" id="' + id + '" style="position: absolute; top: -100px; width: 0px;"/>');
                this._dialogInput.keydown(this._doKeyDown);
                $("body").append(this._dialogInput);
                inst = this._dialogInst = this._newInst(this._dialogInput, false);
                inst.settings = {};
                $.data(this._dialogInput[0], PROP_NAME, inst)
            }
            extendRemove(inst.settings, settings || {});
            date = (date && date.constructor == Date ? this._formatDate(inst, date) : date);
            this._dialogInput.val(date);
            this._pos = (pos ? (pos.length ? pos : [pos.pageX, pos.pageY]) : null);
            if (!this._pos) {
                var browserWidth = document.documentElement.clientWidth;
                var browserHeight = document.documentElement.clientHeight;
                var scrollX = document.documentElement.scrollLeft || document.body.scrollLeft;
                var scrollY = document.documentElement.scrollTop || document.body.scrollTop;
                this._pos = [(browserWidth / 2) - 100 + scrollX, (browserHeight / 2) - 150 + scrollY]
            }
            this._dialogInput.css("left", (this._pos[0] + 20) + "px").css("top", this._pos[1] + "px");
            inst.settings.onSelect = onSelect;
            this._inDialog = true;
            this.dpDiv.addClass(this._dialogClass);
            this._showDatepicker(this._dialogInput[0]);
            if ($.blockUI) {
                $.blockUI(this.dpDiv)
            }
            $.data(this._dialogInput[0], PROP_NAME, inst);
            return this
        },
        _destroyDatepicker: function(target) {
            var $target = $(target);
            var inst = $.data(target, PROP_NAME);
            if (!$target.hasClass(this.markerClassName)) {
                return
            }
            var nodeName = target.nodeName.toLowerCase();
            $.removeData(target, PROP_NAME);
            if (nodeName == "input") {
                inst.append.remove();
                inst.trigger.remove();
                $target.removeClass(this.markerClassName).unbind("focus", this._showDatepicker).unbind("keydown", this._doKeyDown).unbind("keypress", this._doKeyPress).unbind("keyup", this._doKeyUp)
            } else {
                if (nodeName == "div" || nodeName == "span") {
                    $target.removeClass(this.markerClassName).empty()
                }
            }
        },
        _enableDatepicker: function(target) {
            var $target = $(target);
            var inst = $.data(target, PROP_NAME);
            if (!$target.hasClass(this.markerClassName)) {
                return
            }
            var nodeName = target.nodeName.toLowerCase();
            if (nodeName == "input") {
                target.disabled = false;
                inst.trigger.filter("button").each(function() {
                    this.disabled = false
                }).end().filter("img").css({
                    opacity: "1.0",
                    cursor: ""
                })
            } else {
                if (nodeName == "div" || nodeName == "span") {
                    var inline = $target.children("." + this._inlineClass);
                    inline.children().removeClass("ui-state-disabled");
                    inline.find("select.ui-datepicker-month, select.ui-datepicker-year").prop("disabled", false)
                }
            }
            this._disabledInputs = $.map(this._disabledInputs, function(value) {
                return (value == target ? null : value)
            })
        },
        _disableDatepicker: function(target) {
            var $target = $(target);
            var inst = $.data(target, PROP_NAME);
            if (!$target.hasClass(this.markerClassName)) {
                return
            }
            var nodeName = target.nodeName.toLowerCase();
            if (nodeName == "input") {
                target.disabled = true;
                inst.trigger.filter("button").each(function() {
                    this.disabled = true
                }).end().filter("img").css({
                    opacity: "0.5",
                    cursor: "default"
                })
            } else {
                if (nodeName == "div" || nodeName == "span") {
                    var inline = $target.children("." + this._inlineClass);
                    inline.children().addClass("ui-state-disabled");
                    inline.find("select.ui-datepicker-month, select.ui-datepicker-year").prop("disabled", true)
                }
            }
            this._disabledInputs = $.map(this._disabledInputs, function(value) {
                return (value == target ? null : value)
            });
            this._disabledInputs[this._disabledInputs.length] = target
        },
        _isDisabledDatepicker: function(target) {
            if (!target) {
                return false
            }
            for (var i = 0; i < this._disabledInputs.length; i++) {
                if (this._disabledInputs[i] == target) {
                    return true
                }
            }
            return false
        },
        _getInst: function(target) {
            try {
                return $.data(target, PROP_NAME)
            } catch (err) {
                throw "Missing instance data for this datepicker"
            }
        },
        _optionDatepicker: function(target, name, value) {
            var inst = this._getInst(target);
            if (arguments.length == 2 && typeof name == "string") {
                return (name == "defaults" ? $.extend({}, $.datepicker._defaults) : (inst ? (name == "all" ? $.extend({}, inst.settings) : this._get(inst, name)) : null))
            }
            var settings = name || {};
            if (typeof name == "string") {
                settings = {};
                settings[name] = value
            }
            if (inst) {
                if (this._curInst == inst) {
                    this._hideDatepicker()
                }
                var date = this._getDateDatepicker(target, true);
                var minDate = this._getMinMaxDate(inst, "min");
                var maxDate = this._getMinMaxDate(inst, "max");
                extendRemove(inst.settings, settings);
                if (minDate !== null && settings.dateFormat !==  && settings.minDate === ) {
                    inst.settings.minDate = this._formatDate(inst, minDate)
                }
                if (maxDate !== null && settings.dateFormat !==  && settings.maxDate === ) {
                    inst.settings.maxDate = this._formatDate(inst, maxDate)
                }
                this._attachments($(target), inst);
                this._autoSize(inst);
                this._setDate(inst, date);
                this._updateAlternate(inst);
                this._updateDatepicker(inst)
            }
        },
        _changeDatepicker: function(target, name, value) {
            this._optionDatepicker(target, name, value)
        },
        _refreshDatepicker: function(target) {
            var inst = this._getInst(target);
            if (inst) {
                this._updateDatepicker(inst)
            }
        },
        _setDateDatepicker: function(target, date) {
            var inst = this._getInst(target);
            if (inst) {
                this._setDate(inst, date);
                this._updateDatepicker(inst);
                this._updateAlternate(inst)
            }
        },
        _getDateDatepicker: function(target, noDefault) {
            var inst = this._getInst(target);
            if (inst && !inst.inline) {
                this._setDateFromField(inst, noDefault)
            }
            return (inst ? this._getDate(inst) : null)
        },
        _doKeyDown: function(event) {
            var inst = $.datepicker._getInst(event.target);
            var handled = true;
            var isRTL = inst.dpDiv.is(".ui-datepicker-rtl");
            inst._keyEvent = true;
            if ($.datepicker._datepickerShowing) {
                switch (event.keyCode) {
                    case 9:
                        $.datepicker._hideDatepicker();
                        handled = false;
                        break;
                    case 13:
                        var sel = $("td." + $.datepicker._dayOverClass + ":not(." + $.datepicker._currentClass + ")", inst.dpDiv);
                        if (sel[0]) {
                            $.datepicker._selectDay(event.target, inst.selectedMonth, inst.selectedYear, sel[0])
                        }
                        var onSelect = $.datepicker._get(inst, "onSelect");
                        if (onSelect) {
                            var dateStr = $.datepicker._formatDate(inst);
                            onSelect.apply((inst.input ? inst.input[0] : null), [dateStr, inst])
                        } else {
                            $.datepicker._hideDatepicker()
                        }
                        return false;
                        break;
                    case 27:
                        $.datepicker._hideDatepicker();
                        break;
                    case 33:
                        $.datepicker._adjustDate(event.target, (event.ctrlKey ? -$.datepicker._get(inst, "stepBigMonths") : -$.datepicker._get(inst, "stepMonths")), "M");
                        break;
                    case 34:
                        $.datepicker._adjustDate(event.target, (event.ctrlKey ? +$.datepicker._get(inst, "stepBigMonths") : +$.datepicker._get(inst, "stepMonths")), "M");
                        break;
                    case 35:
                        if (event.ctrlKey || event.metaKey) {
                            $.datepicker._clearDate(event.target)
                        }
                        handled = event.ctrlKey || event.metaKey;
                        break;
                    case 36:
                        if (event.ctrlKey || event.metaKey) {
                            $.datepicker._gotoToday(event.target)
                        }
                        handled = event.ctrlKey || event.metaKey;
                        break;
                    case 37:
                        if (event.ctrlKey || event.metaKey) {
                            $.datepicker._adjustDate(event.target, (isRTL ? +1 : -1), "D")
                        }
                        handled = event.ctrlKey || event.metaKey;
                        if (event.originalEvent.altKey) {
                            $.datepicker._adjustDate(event.target, (event.ctrlKey ? -$.datepicker._get(inst, "stepBigMonths") : -$.datepicker._get(inst, "stepMonths")), "M")
                        }
                        break;
                    case 38:
                        if (event.ctrlKey || event.metaKey) {
                            $.datepicker._adjustDate(event.target, -7, "D")
                        }
                        handled = event.ctrlKey || event.metaKey;
                        break;
                    case 39:
                        if (event.ctrlKey || event.metaKey) {
                            $.datepicker._adjustDate(event.target, (isRTL ? -1 : +1), "D")
                        }
                        handled = event.ctrlKey || event.metaKey;
                        if (event.originalEvent.altKey) {
                            $.datepicker._adjustDate(event.target, (event.ctrlKey ? +$.datepicker._get(inst, "stepBigMonths") : +$.datepicker._get(inst, "stepMonths")), "M")
                        }
                        break;
                    case 40:
                        if (event.ctrlKey || event.metaKey) {
                            $.datepicker._adjustDate(event.target, +7, "D")
                        }
                        handled = event.ctrlKey || event.metaKey;
                        break;
                    default:
                        handled = false
                }
            } else {
                if (event.keyCode == 36 && event.ctrlKey) {
                    $.datepicker._showDatepicker(this)
                } else {
                    handled = false
                }
            }
            if (handled) {
                event.preventDefault();
                event.stopPropagation()
            }
        },
        _doKeyPress: function(event) {
            var inst = $.datepicker._getInst(event.target);
            if ($.datepicker._get(inst, "constrainInput")) {
                var chars = $.datepicker._possibleChars($.datepicker._get(inst, "dateFormat"));
                var chr = String.fromCharCode(event.charCode ==  ? event.keyCode : event.charCode);
                return event.ctrlKey || event.metaKey || (chr < " " || !chars || chars.indexOf(chr) > -1)
            }
        },
        _doKeyUp: function(event) {
            var inst = $.datepicker._getInst(event.target);
            if (inst.input.val() != inst.lastVal) {
                try {
                    var date = $.datepicker.parseDate($.datepicker._get(inst, "dateFormat"), (inst.input ? inst.input.val() : null), $.datepicker._getFormatConfig(inst));
                    if (date) {
                        $.datepicker._setDateFromField(inst);
                        $.datepicker._updateAlternate(inst);
                        $.datepicker._updateDatepicker(inst)
                    }
                } catch (err) {
                    $.datepicker.log(err)
                }
            }
            return true
        },
        _showDatepicker: function(input) {
            input = input.target || input;
            if (input.nodeName.toLowerCase() != "input") {
                input = $("input", input.parentNode)[0]
            }
            if ($.datepicker._isDisabledDatepicker(input) || $.datepicker._lastInput == input) {
                return
            }
            var inst = $.datepicker._getInst(input);
            if ($.datepicker._curInst && $.datepicker._curInst != inst) {
                $.datepicker._curInst.dpDiv.stop(true, true);
                if (inst && $.datepicker._datepickerShowing) {
                    $.datepicker._hideDatepicker($.datepicker._curInst.input[0])
                }
            }
            var beforeShow = $.datepicker._get(inst, "beforeShow");
            var beforeShowSettings = beforeShow ? beforeShow.apply(input, [input, inst]) : {};
            if (beforeShowSettings === false) {
                return
            }
            extendRemove(inst.settings, beforeShowSettings);
            inst.lastVal = null;
            $.datepicker._lastInput = input;
            $.datepicker._setDateFromField(inst);
            if ($.datepicker._inDialog) {
                input.value = ""
            }
            if (!$.datepicker._pos) {
                $.datepicker._pos = $.datepicker._findPos(input);
                $.datepicker._pos[1] += input.offsetHeight
            }
            var isFixed = false;
            $(input).parents().each(function() {
                isFixed |= $(this).css("position") == "fixed";
                return !isFixed
            });
            var offset = {
                left: $.datepicker._pos[0],
                top: $.datepicker._pos[1]
            };
            $.datepicker._pos = null;
            inst.dpDiv.empty();
            inst.dpDiv.css({
                position: "absolute",
                display: "block",
                top: "-1000px"
            });
            $.datepicker._updateDatepicker(inst);
            offset = $.datepicker._checkOffset(inst, offset, isFixed);
            inst.dpDiv.css({
                position: ($.datepicker._inDialog && $.blockUI ? "static" : (isFixed ? "fixed" : "absolute")),
                display: "none",
                left: offset.left + "px",
                top: offset.top + "px"
            });
            if (!inst.inline) {
                var showAnim = $.datepicker._get(inst, "showAnim");
                var duration = $.datepicker._get(inst, "duration");
                var postProcess = function() {
                    var cover = inst.dpDiv.find("iframe.ui-datepicker-cover");
                    if (!!cover.length) {
                        var borders = $.datepicker._getBorders(inst.dpDiv);
                        cover.css({
                            left: -borders[0],
                            top: -borders[1],
                            width: inst.dpDiv.outerWidth(),
                            height: inst.dpDiv.outerHeight()
                        })
                    }
                };
                inst.dpDiv.zIndex($(input).zIndex() + 1);
                $.datepicker._datepickerShowing = true;
                if ($.effects && ($.effects.effect[showAnim] || $.effects[showAnim])) {
                    inst.dpDiv.show(showAnim, $.datepicker._get(inst, "showOptions"), duration, postProcess)
                } else {
                    inst.dpDiv[showAnim || "show"]((showAnim ? duration : null), postProcess)
                }
                if (!showAnim || !duration) {
                    postProcess()
                }
                if (inst.input.is(":visible") && !inst.input.is(":disabled")) {
                    inst.input.focus()
                }
                $.datepicker._curInst = inst
            }
        },
        _updateDatepicker: function(inst) {
            this.maxRows = 4;
            var borders = $.datepicker._getBorders(inst.dpDiv);
            instActive = inst;
            inst.dpDiv.empty().append(this._generateHTML(inst));
            this._attachHandlers(inst);
            var cover = inst.dpDiv.find("iframe.ui-datepicker-cover");
            if (!!cover.length) {
                cover.css({
                    left: -borders[0],
                    top: -borders[1],
                    width: inst.dpDiv.outerWidth(),
                    height: inst.dpDiv.outerHeight()
                })
            }
            inst.dpDiv.find("." + this._dayOverClass + " a").mouseover();
            var numMonths = this._getNumberOfMonths(inst);
            var cols = numMonths[1];
            var width = 17;
            inst.dpDiv.removeClass("ui-datepicker-multi-2 ui-datepicker-multi-3 ui-datepicker-multi-4").width("");
            if (cols > 1) {
                inst.dpDiv.addClass("ui-datepicker-multi-" + cols).css("width", (width * cols) + "em")
            }
            inst.dpDiv[(numMonths[0] != 1 || numMonths[1] != 1 ? "add" : "remove") + "Class"]("ui-datepicker-multi");
            inst.dpDiv[(this._get(inst, "isRTL") ? "add" : "remove") + "Class"]("ui-datepicker-rtl");
            if (inst == $.datepicker._curInst && $.datepicker._datepickerShowing && inst.input && inst.input.is(":visible") && !inst.input.is(":disabled") && inst.input[0] != document.activeElement) {
                inst.input.focus()
            }
            if (inst.yearshtml) {
                var origyearshtml = inst.yearshtml;
                setTimeout(function() {
                    if (origyearshtml === inst.yearshtml && inst.yearshtml) {
                        inst.dpDiv.find("select.ui-datepicker-year:first").replaceWith(inst.yearshtml)
                    }
                    origyearshtml = inst.yearshtml = null
                }, 0)
            }
        },
        _getBorders: function(elem) {
            var convert = function(value) {
                return {
                    thin: 1,
                    medium: 2,
                    thick: 3
                }[value] || value
            };
            return [parseFloat(convert(elem.css("border-left-width"))), parseFloat(convert(elem.css("border-top-width")))]
        },
        _checkOffset: function(inst, offset, isFixed) {
            var dpWidth = inst.dpDiv.outerWidth();
            var dpHeight = inst.dpDiv.outerHeight();
            var inputWidth = inst.input ? inst.input.outerWidth() : 0;
            var inputHeight = inst.input ? inst.input.outerHeight() : 0;
            var viewWidth = document.documentElement.clientWidth + (isFixed ? 0 : $(document).scrollLeft());
            var viewHeight = document.documentElement.clientHeight + (isFixed ? 0 : $(document).scrollTop());
            offset.left -= (this._get(inst, "isRTL") ? (dpWidth - inputWidth) : 0);
            offset.left -= (isFixed && offset.left == inst.input.offset().left) ? $(document).scrollLeft() : 0;
            offset.top -= (isFixed && offset.top == (inst.input.offset().top + inputHeight)) ? $(document).scrollTop() : 0;
            offset.left -= Math.min(offset.left, (offset.left + dpWidth > viewWidth && viewWidth > dpWidth) ? Math.abs(offset.left + dpWidth - viewWidth) : 0);
            offset.top -= Math.min(offset.top, (offset.top + dpHeight > viewHeight && viewHeight > dpHeight) ? Math.abs(dpHeight + inputHeight) : 0);
            return offset
        },
        _findPos: function(obj) {
            var inst = this._getInst(obj);
            var isRTL = this._get(inst, "isRTL");
            while (obj && (obj.type == "hidden" || obj.nodeType != 1 || $.expr.filters.hidden(obj))) {
                obj = obj[isRTL ? "previousSibling" : "nextSibling"]
            }
            var position = $(obj).offset();
            return [position.left, position.top]
        },
        _hideDatepicker: function(input) {
            var inst = this._curInst;
            if (!inst || (input && inst != $.data(input, PROP_NAME))) {
                return
            }
            if (this._datepickerShowing) {
                var showAnim = this._get(inst, "showAnim");
                var duration = this._get(inst, "duration");
                var postProcess = function() {
                    $.datepicker._tidyDialog(inst)
                };
                if ($.effects && ($.effects.effect[showAnim] || $.effects[showAnim])) {
                    inst.dpDiv.hide(showAnim, $.datepicker._get(inst, "showOptions"), duration, postProcess)
                } else {
                    inst.dpDiv[(showAnim == "slideDown" ? "slideUp" : (showAnim == "fadeIn" ? "fadeOut" : "hide"))]((showAnim ? duration : null), postProcess)
                }
                if (!showAnim) {
                    postProcess()
                }
                this._datepickerShowing = false;
                var onClose = this._get(inst, "onClose");
                if (onClose) {
                    onClose.apply((inst.input ? inst.input[0] : null), [(inst.input ? inst.input.val() : ""), inst])
                }
                this._lastInput = null;
                if (this._inDialog) {
                    this._dialogInput.css({
                        position: "absolute",
                        left: "0",
                        top: "-100px"
                    });
                    if ($.blockUI) {
                        $.unblockUI();
                        $("body").append(this.dpDiv)
                    }
                }
                this._inDialog = false
            }
        },
        _tidyDialog: function(inst) {
            inst.dpDiv.removeClass(this._dialogClass).unbind(".ui-datepicker-calendar")
        },
        _checkExternalClick: function(event) {
            if (!$.datepicker._curInst) {
                return
            }
            var $target = $(event.target),
                inst = $.datepicker._getInst($target[0]);
            if ((($target[0].id != $.datepicker._mainDivId && $target.parents("#" + $.datepicker._mainDivId).length == 0 && !$target.hasClass($.datepicker.markerClassName) && !$target.closest("." + $.datepicker._triggerClass).length && $.datepicker._datepickerShowing && !($.datepicker._inDialog && $.blockUI))) || ($target.hasClass($.datepicker.markerClassName) && $.datepicker._curInst != inst)) {
                $.datepicker._hideDatepicker()
            }
        },
        _adjustDate: function(id, offset, period) {
            var target = $(id);
            var inst = this._getInst(target[0]);
            if (this._isDisabledDatepicker(target[0])) {
                return
            }
            this._adjustInstDate(inst, offset + (period == "M" ? this._get(inst, "showCurrentAtPos") : 0), period);
            this._updateDatepicker(inst)
        },
        _gotoToday: function(id) {
            var target = $(id);
            var inst = this._getInst(target[0]);
            if (this._get(inst, "gotoCurrent") && inst.currentDay) {
                inst.selectedDay = inst.currentDay;
                inst.drawMonth = inst.selectedMonth = inst.currentMonth;
                inst.drawYear = inst.selectedYear = inst.currentYear
            } else {
                var date = new Date();
                inst.selectedDay = date.getDate();
                inst.drawMonth = inst.selectedMonth = date.getMonth();
                inst.drawYear = inst.selectedYear = date.getFullYear()
            }
            this._notifyChange(inst);
            this._adjustDate(target)
        },
        _selectMonthYear: function(id, select, period) {
            var target = $(id);
            var inst = this._getInst(target[0]);
            inst["selected" + (period == "M" ? "Month" : "Year")] = inst["draw" + (period == "M" ? "Month" : "Year")] = parseInt(select.options[select.selectedIndex].value, 10);
            this._notifyChange(inst);
            this._adjustDate(target)
        },
        _selectDay: function(id, month, year, td) {
            var target = $(id);
            if ($(td).hasClass(this._unselectableClass) || this._isDisabledDatepicker(target[0])) {
                return
            }
            var inst = this._getInst(target[0]);
            inst.selectedDay = inst.currentDay = $("a", td).html();
            inst.selectedMonth = inst.currentMonth = month;
            inst.selectedYear = inst.currentYear = year;
            this._selectDate(id, this._formatDate(inst, inst.currentDay, inst.currentMonth, inst.currentYear))
        },
        _clearDate: function(id) {
            var target = $(id);
            var inst = this._getInst(target[0]);
            this._selectDate(target, "")
        },
        _selectDate: function(id, dateStr) {
            var target = $(id);
            var inst = this._getInst(target[0]);
            dateStr = (dateStr != null ? dateStr : this._formatDate(inst));
            if (inst.input) {
                inst.input.val(dateStr)
            }
            this._updateAlternate(inst);
            var onSelect = this._get(inst, "onSelect");
            if (onSelect) {
                onSelect.apply((inst.input ? inst.input[0] : null), [dateStr, inst])
            } else {
                if (inst.input) {
                    inst.input.trigger("change")
                }
            }
            if (inst.inline) {
                this._updateDatepicker(inst)
            } else {
                this._hideDatepicker();
                this._lastInput = inst.input[0];
                if (typeof(inst.input[0]) != "object") {
                    inst.input.focus()
                }
                this._lastInput = null
            }
        },
        _updateAlternate: function(inst) {
            var altField = this._get(inst, "altField");
            if (altField) {
                var altFormat = this._get(inst, "altFormat") || this._get(inst, "dateFormat");
                var date = this._getDate(inst);
                var dateStr = this.formatDate(altFormat, date, this._getFormatConfig(inst));
                $(altField).each(function() {
                    $(this).val(dateStr)
                })
            }
        },
        noWeekends: function(date) {
            var day = date.getDay();
            return [(day > 0 && day < 6), ""]
        },
        iso8601Week: function(date) {
            var checkDate = new Date(date.getTime());
            checkDate.setDate(checkDate.getDate() + 4 - (checkDate.getDay() || 7));
            var time = checkDate.getTime();
            checkDate.setMonth(0);
            checkDate.setDate(1);
            return Math.floor(Math.round((time - checkDate) / 86400000) / 7) + 1
        },
        parseDate: function(format, value, settings) {
            if (format == null || value == null) {
                throw "Invalid arguments"
            }
            value = (typeof value == "object" ? value.toString() : value + "");
            if (value == "") {
                return null
            }
            var shortYearCutoff = (settings ? settings.shortYearCutoff : null) || this._defaults.shortYearCutoff;
            shortYearCutoff = (typeof shortYearCutoff != "string" ? shortYearCutoff : new Date().getFullYear() % 100 + parseInt(shortYearCutoff, 10));
            var dayNamesShort = (settings ? settings.dayNamesShort : null) || this._defaults.dayNamesShort;
            var dayNames = (settings ? settings.dayNames : null) || this._defaults.dayNames;
            var monthNamesShort = (settings ? settings.monthNamesShort : null) || this._defaults.monthNamesShort;
            var monthNames = (settings ? settings.monthNames : null) || this._defaults.monthNames;
            var year = -1;
            var month = -1;
            var day = -1;
            var doy = -1;
            var literal = false;
            var lookAhead = function(match) {
                var matches = (iFormat + 1 < format.length && format.charAt(iFormat + 1) == match);
                if (matches) {
                    iFormat++
                }
                return matches
            };
            var getNumber = function(match) {
                var isDoubled = lookAhead(match);
                var size = (match == "@" ? 14 : (match == "!" ? 20 : (match == "y" && isDoubled ? 4 : (match == "o" ? 3 : 2))));
                var digits = new RegExp("^\\d{1," + size + "}");
                var num = value.substring(iValue).match(digits);
                if (!num) {
                    throw "Missing number at position " + iValue
                }
                iValue += num[0].length;
                return parseInt(num[0], 10)
            };
            var getName = function(match, shortNames, longNames) {
                var names = $.map(lookAhead(match) ? longNames : shortNames, function(v, k) {
                    return [
                        [k, v]
                    ]
                }).sort(function(a, b) {
                    return -(a[1].length - b[1].length)
                });
                var index = -1;
                $.each(names, function(i, pair) {
                    var name = pair[1];
                    if (value.substr(iValue, name.length).toLowerCase() == name.toLowerCase()) {
                        index = pair[0];
                        iValue += name.length;
                        return false
                    }
                });
                if (index != -1) {
                    return index + 1
                } else {
                    throw "Unknown name at position " + iValue
                }
            };
            var checkLiteral = function() {
                if (value.charAt(iValue) != format.charAt(iFormat)) {
                    throw "Unexpected literal at position " + iValue
                }
                iValue++
            };
            var iValue = 0;
            for (var iFormat = 0; iFormat < format.length; iFormat++) {
                if (literal) {
                    if (format.charAt(iFormat) == "'" && !lookAhead("'")) {
                        literal = false
                    } else {
                        checkLiteral()
                    }
                } else {
                    switch (format.charAt(iFormat)) {
                        case "d":
                            day = getNumber("d");
                            break;
                        case "D":
                            getName("D", dayNamesShort, dayNames);
                            break;
                        case "o":
                            doy = getNumber("o");
                            break;
                        case "m":
                            month = getNumber("m");
                            break;
                        case "M":
                            month = getName("M", monthNamesShort, monthNames);
                            break;
                        case "y":
                            year = getNumber("y");
                            break;
                        case "@":
                            var date = new Date(getNumber("@"));
                            year = date.getFullYear();
                            month = date.getMonth() + 1;
                            day = date.getDate();
                            break;
                        case "!":
                            var date = new Date((getNumber("!") - this._ticksTo1970) / 10000);
                            year = date.getFullYear();
                            month = date.getMonth() + 1;
                            day = date.getDate();
                            break;
                        case "'":
                            if (lookAhead("'")) {
                                checkLiteral()
                            } else {
                                literal = true
                            }
                            break;
                        default:
                            checkLiteral()
                    }
                }
            }
            if (iValue < value.length) {
                var extra = value.substr(iValue);
                if (!/^\s+/.test(extra)) {
                    throw "Extra/unparsed characters found in date: " + extra
                }
            }
            if (year == -1) {
                year = new Date().getFullYear()
            } else {
                if (year < 100) {
                    year += new Date().getFullYear() - new Date().getFullYear() % 100 + (year <= shortYearCutoff ? 0 : -100)
                }
            }
            if (doy > -1) {
                month = 1;
                day = doy;
                do {
                    var dim = this._getDaysInMonth(year, month - 1);
                    if (day <= dim) {
                        break
                    }
                    month++;
                    day -= dim
                } while (true)
            }
            var date = this._daylightSavingAdjust(new Date(year, month - 1, day));
            if (date.getFullYear() != year || date.getMonth() + 1 != month || date.getDate() != day) {
                throw "Invalid date"
            }
            return date
        },
        ATOM: "yy-mm-dd",
        COOKIE: "D, dd M yy",
        ISO_8601: "yy-mm-dd",
        RFC_822: "D, d M y",
        RFC_850: "DD, dd-M-y",
        RFC_1036: "D, d M y",
        RFC_1123: "D, d M yy",
        RFC_2822: "D, d M yy",
        RSS: "D, d M y",
        TICKS: "!",
        TIMESTAMP: "@",
        W3C: "yy-mm-dd",
        _ticksTo1970: (((1970 - 1) * 365 + Math.floor(1970 / 4) - Math.floor(1970 / 100) + Math.floor(1970 / 400)) * 24 * 60 * 60 * 10000000),
        formatDate: function(format, date, settings) {
            if (!date) {
                return ""
            }
            var dayNamesShort = (settings ? settings.dayNamesShort : null) || this._defaults.dayNamesShort;
            var dayNames = (settings ? settings.dayNames : null) || this._defaults.dayNames;
            var monthNamesShort = (settings ? settings.monthNamesShort : null) || this._defaults.monthNamesShort;
            var monthNames = (settings ? settings.monthNames : null) || this._defaults.monthNames;
            var lookAhead = function(match) {
                var matches = (iFormat + 1 < format.length && format.charAt(iFormat + 1) == match);
                if (matches) {
                    iFormat++
                }
                return matches
            };
            var formatNumber = function(match, value, len) {
                var num = "" + value;
                if (lookAhead(match)) {
                    while (num.length < len) {
                        num = "0" + num
                    }
                }
                return num
            };
            var formatName = function(match, value, shortNames, longNames) {
                return (lookAhead(match) ? longNames[value] : shortNames[value])
            };
            var output = "";
            var literal = false;
            if (date) {
                for (var iFormat = 0; iFormat < format.length; iFormat++) {
                    if (literal) {
                        if (format.charAt(iFormat) == "'" && !lookAhead("'")) {
                            literal = false
                        } else {
                            output += format.charAt(iFormat)
                        }
                    } else {
                        switch (format.charAt(iFormat)) {
                            case "d":
                                output += formatNumber("d", date.getDate(), 2);
                                break;
                            case "D":
                                output += formatName("D", date.getDay(), dayNamesShort, dayNames);
                                break;
                            case "o":
                                output += formatNumber("o", Math.round((new Date(date.getFullYear(), date.getMonth(), date.getDate()).getTime() - new Date(date.getFullYear(), 0, 0).getTime()) / 86400000), 3);
                                break;
                            case "m":
                                output += formatNumber("m", date.getMonth() + 1, 2);
                                break;
                            case "M":
                                output += formatName("M", date.getMonth(), monthNamesShort, monthNames);
                                break;
                            case "y":
                                output += (lookAhead("y") ? date.getFullYear() : (date.getYear() % 100 < 10 ? "0" : "") + date.getYear() % 100);
                                break;
                            case "@":
                                output += date.getTime();
                                break;
                            case "!":
                                output += date.getTime() * 10000 + this._ticksTo1970;
                                break;
                            case "'":
                                if (lookAhead("'")) {
                                    output += "'"
                                } else {
                                    literal = true
                                }
                                break;
                            default:
                                output += format.charAt(iFormat)
                        }
                    }
                }
            }
            return output
        },
        _possibleChars: function(format) {
            var chars = "";
            var literal = false;
            var lookAhead = function(match) {
                var matches = (iFormat + 1 < format.length && format.charAt(iFormat + 1) == match);
                if (matches) {
                    iFormat++
                }
                return matches
            };
            for (var iFormat = 0; iFormat < format.length; iFormat++) {
                if (literal) {
                    if (format.charAt(iFormat) == "'" && !lookAhead("'")) {
                        literal = false
                    } else {
                        chars += format.charAt(iFormat)
                    }
                } else {
                    switch (format.charAt(iFormat)) {
                        case "d":
                        case "m":
                        case "y":
                        case "@":
                            chars += "0123456789";
                            break;
                        case "D":
                        case "M":
                            return null;
                        case "'":
                            if (lookAhead("'")) {
                                chars += "'"
                            } else {
                                literal = true
                            }
                            break;
                        default:
                            chars += format.charAt(iFormat)
                    }
                }
            }
            return chars
        },
        _get: function(inst, name) {
            return inst.settings[name] !==  ? inst.settings[name] : this._defaults[name]
        },
        _setDateFromField: function(inst, noDefault) {
            if (inst.input.val() == inst.lastVal) {
                return
            }
            var dateFormat = this._get(inst, "dateFormat");
            var dates = inst.lastVal = inst.input ? inst.input.val() : null;
            var date, defaultDate;
            date = defaultDate = this._getDefaultDate(inst);
            var settings = this._getFormatConfig(inst);
            try {
                date = this.parseDate(dateFormat, dates, settings) || defaultDate
            } catch (event) {
                this.log(event);
                dates = (noDefault ? "" : dates)
            }
            inst.selectedDay = date.getDate();
            inst.drawMonth = inst.selectedMonth = date.getMonth();
            inst.drawYear = inst.selectedYear = date.getFullYear();
            inst.currentDay = (dates ? date.getDate() : 0);
            inst.currentMonth = (dates ? date.getMonth() : 0);
            inst.currentYear = (dates ? date.getFullYear() : 0);
            this._adjustInstDate(inst)
        },
        _getDefaultDate: function(inst) {
            return this._restrictMinMax(inst, this._determate(inst, this._get(inst, "defaultDate"), new Date()))
        },
        _determate: function(inst, date, defaultDate) {
            var offsetNumeric = function(offset) {
                var date = new Date();
                date.setDate(date.getDate() + offset);
                return date
            };
            var offsetString = function(offset) {
                try {
                    return $.datepicker.parseDate($.datepicker._get(inst, "dateFormat"), offset, $.datepicker._getFormatConfig(inst))
                } catch (e) {}
                var date = (offset.toLowerCase().match(/^c/) ? $.datepicker._getDate(inst) : null) || new Date();
                var year = date.getFullYear();
                var month = date.getMonth();
                var day = date.getDate();
                var pattern = /([+-]?[0-9]+)\s*(d|D|w|W|m|M|y|Y)?/g;
                var matches = pattern.exec(offset);
                while (matches) {
                    switch (matches[2] || "d") {
                        case "d":
                        case "D":
                            day += parseInt(matches[1], 10);
                            break;
                        case "w":
                        case "W":
                            day += parseInt(matches[1], 10) * 7;
                            break;
                        case "m":
                        case "M":
                            month += parseInt(matches[1], 10);
                            day = Math.min(day, $.datepicker._getDaysInMonth(year, month));
                            break;
                        case "y":
                        case "Y":
                            year += parseInt(matches[1], 10);
                            day = Math.min(day, $.datepicker._getDaysInMonth(year, month));
                            break
                    }
                    matches = pattern.exec(offset)
                }
                return new Date(year, month, day)
            };
            var newDate = (date == null || date === "" ? defaultDate : (typeof date == "string" ? offsetString(date) : (typeof date == "number" ? (isNaN(date) ? defaultDate : offsetNumeric(date)) : new Date(date.getTime()))));
            newDate = (newDate && newDate.toString() == "Invalid Date" ? defaultDate : newDate);
            if (newDate) {
                newDate.setHours(0);
                newDate.setMinutes(0);
                newDate.setSeconds(0);
                newDate.setMilliseconds(0)
            }
            return this._daylightSavingAdjust(newDate)
        },
        _daylightSavingAdjust: function(date) {
            if (!date) {
                return null
            }
            date.setHours(date.getHours() > 12 ? date.getHours() + 2 : 0);
            return date
        },
        _setDate: function(inst, date, noChange) {
            var clear = !date;
            var origMonth = inst.selectedMonth;
            var origYear = inst.selectedYear;
            var newDate = this._restrictMinMax(inst, this._determate(inst, date, new Date()));
            inst.selectedDay = inst.currentDay = newDate.getDate();
            inst.drawMonth = inst.selectedMonth = inst.currentMonth = newDate.getMonth();
            inst.drawYear = inst.selectedYear = inst.currentYear = newDate.getFullYear();
            if ((origMonth != inst.selectedMonth || origYear != inst.selectedYear) && !noChange) {
                this._notifyChange(inst)
            }
            this._adjustInstDate(inst);
            if (inst.input) {
                inst.input.val(clear ? "" : this._formatDate(inst))
            }
        },
        _getDate: function(inst) {
            var startDate = (!inst.currentYear || (inst.input && inst.input.val() == "") ? null : this._daylightSavingAdjust(new Date(inst.currentYear, inst.currentMonth, inst.currentDay)));
            return startDate
        },
        _attachHandlers: function(inst) {
            var stepMonths = this._get(inst, "stepMonths");
            var id = "#" + inst.id.replace(/\\\\/g, "\\");
            inst.dpDiv.find("[data-handler]").map(function() {
                var handler = {
                    prev: function() {
                        window["DP_jQuery_" + dpuuid].datepicker._adjustDate(id, -stepMonths, "M")
                    },
                    next: function() {
                        window["DP_jQuery_" + dpuuid].datepicker._adjustDate(id, +stepMonths, "M")
                    },
                    hide: function() {
                        window["DP_jQuery_" + dpuuid].datepicker._hideDatepicker()
                    },
                    today: function() {
                        window["DP_jQuery_" + dpuuid].datepicker._gotoToday(id)
                    },
                    selectDay: function() {
                        window["DP_jQuery_" + dpuuid].datepicker._selectDay(id, +this.getAttribute("data-month"), +this.getAttribute("data-year"), this);
                        return false
                    },
                    selectMonth: function() {
                        window["DP_jQuery_" + dpuuid].datepicker._selectMonthYear(id, this, "M");
                        return false
                    },
                    selectYear: function() {
                        window["DP_jQuery_" + dpuuid].datepicker._selectMonthYear(id, this, "Y");
                        return false
                    }
                };
                $(this).bind(this.getAttribute("data-event"), handler[this.getAttribute("data-handler")])
            })
        },
        _generateHTML: function(inst) {
            var today = new Date();
            today = this._daylightSavingAdjust(new Date(today.getFullYear(), today.getMonth(), today.getDate()));
            var isRTL = this._get(inst, "isRTL");
            var showButtonPanel = this._get(inst, "showButtonPanel");
            var hideIfNoPrevNext = this._get(inst, "hideIfNoPrevNext");
            var navigationAsDateFormat = this._get(inst, "navigationAsDateFormat");
            var numMonths = this._getNumberOfMonths(inst);
            var showCurrentAtPos = this._get(inst, "showCurrentAtPos");
            var stepMonths = this._get(inst, "stepMonths");
            var isMultiMonth = (numMonths[0] != 1 || numMonths[1] != 1);
            var currentDate = this._daylightSavingAdjust((!inst.currentDay ? new Date(9999, 9, 9) : new Date(inst.currentYear, inst.currentMonth, inst.currentDay)));
            var minDate = this._getMinMaxDate(inst, "min");
            var maxDate = this._getMinMaxDate(inst, "max");
            var drawMonth = inst.drawMonth - showCurrentAtPos;
            var drawYear = inst.drawYear;
            if (drawMonth < 0) {
                drawMonth += 12;
                drawYear--
            }
            if (maxDate) {
                var maxDraw = this._daylightSavingAdjust(new Date(maxDate.getFullYear(), maxDate.getMonth() - (numMonths[0] * numMonths[1]) + 1, maxDate.getDate()));
                maxDraw = (minDate && maxDraw < minDate ? minDate : maxDraw);
                while (this._daylightSavingAdjust(new Date(drawYear, drawMonth, 1)) > maxDraw) {
                    drawMonth--;
                    if (drawMonth < 0) {
                        drawMonth = 11;
                        drawYear--
                    }
                }
            }
            inst.drawMonth = drawMonth;
            inst.drawYear = drawYear;
            var prevText = this._get(inst, "prevText");
            prevText = (!navigationAsDateFormat ? prevText : this.formatDate(prevText, this._daylightSavingAdjust(new Date(drawYear, drawMonth - stepMonths, 1)), this._getFormatConfig(inst)));
            var prev = (this._canAdjustMonth(inst, -1, drawYear, drawMonth) ? '<a class="ui-datepicker-prev ui-corner-all" data-handler="prev" data-event="click" title="' + prevText + '"><span class="ui-icon ui-icon-circle-triangle-' + (isRTL ? "e" : "w") + '">' + prevText + "</span></a>" : (hideIfNoPrevNext ? "" : '<a class="ui-datepicker-prev ui-corner-all ui-state-disabled" title="' + prevText + '"><span class="ui-icon ui-icon-circle-triangle-' + (isRTL ? "e" : "w") + '">' + prevText + "</span></a>"));
            var nextText = this._get(inst, "nextText");
            nextText = (!navigationAsDateFormat ? nextText : this.formatDate(nextText, this._daylightSavingAdjust(new Date(drawYear, drawMonth + stepMonths, 1)), this._getFormatConfig(inst)));
            var next = (this._canAdjustMonth(inst, +1, drawYear, drawMonth) ? '<a class="ui-datepicker-next ui-corner-all" data-handler="next" data-event="click" title="' + nextText + '"><span class="ui-icon ui-icon-circle-triangle-' + (isRTL ? "w" : "e") + '">' + nextText + "</span></a>" : (hideIfNoPrevNext ? "" : '<a class="ui-datepicker-next ui-corner-all ui-state-disabled" title="' + nextText + '"><span class="ui-icon ui-icon-circle-triangle-' + (isRTL ? "w" : "e") + '">' + nextText + "</span></a>"));
            var currentText = this._get(inst, "currentText");
            var gotoDate = (this._get(inst, "gotoCurrent") && inst.currentDay ? currentDate : today);
            currentText = (!navigationAsDateFormat ? currentText : this.formatDate(currentText, gotoDate, this._getFormatConfig(inst)));
            var controls = (!inst.inline ? '<button type="button" class="ui-datepicker-close ui-state-default ui-priority-primary ui-corner-all" data-handler="hide" data-event="click">' + this._get(inst, "closeText") + "</button>" : "");
            var buttonPanel = (showButtonPanel) ? '<div class="ui-datepicker-buttonpane ui-widget-content">' + (isRTL ? controls : "") + (this._isInRange(inst, gotoDate) ? '<button type="button" class="ui-datepicker-current ui-state-default ui-priority-secondary ui-corner-all" data-handler="today" data-event="click">' + currentText + "</button>" : "") + (isRTL ? "" : controls) + "</div>" : "";
            var firstDay = parseInt(this._get(inst, "firstDay"), 10);
            firstDay = (isNaN(firstDay) ? 0 : firstDay);
            var showWeek = this._get(inst, "showWeek");
            var dayNames = this._get(inst, "dayNames");
            var dayNamesShort = this._get(inst, "dayNamesShort");
            var dayNamesMin = this._get(inst, "dayNamesMin");
            var monthNames = this._get(inst, "monthNames");
            var monthNamesShort = this._get(inst, "monthNamesShort");
            var beforeShowDay = this._get(inst, "beforeShowDay");
            var showOtherMonths = this._get(inst, "showOtherMonths");
            var selectOtherMonths = this._get(inst, "selectOtherMonths");
            var calculateWeek = this._get(inst, "calculateWeek") || this.iso8601Week;
            var defaultDate = this._getDefaultDate(inst);
            var html = "";
            for (var row = 0; row < numMonths[0]; row++) {
                var group = "";
                this.maxRows = 4;
                for (var col = 0; col < numMonths[1]; col++) {
                    var selectedDate = this._daylightSavingAdjust(new Date(drawYear, drawMonth, inst.selectedDay));
                    var cornerClass = " ui-corner-all";
                    var calender = "";
                    if (isMultiMonth) {
                        calender += '<div class="ui-datepicker-group';
                        if (numMonths[1] > 1) {
                            switch (col) {
                                case 0:
                                    calender += " ui-datepicker-group-first";
                                    cornerClass = " ui-corner-" + (isRTL ? "right" : "left");
                                    break;
                                case numMonths[1] - 1:
                                    calender += " ui-datepicker-group-last";
                                    cornerClass = " ui-corner-" + (isRTL ? "left" : "right");
                                    break;
                                default:
                                    calender += " ui-datepicker-group-middle";
                                    cornerClass = "";
                                    break
                            }
                        }
                        calender += '">'
                    }
                    calender += '<div class="ui-datepicker-header ui-widget-header ui-helper-clearfix' + cornerClass + '">' + (/all|left/.test(cornerClass) && row == 0 ? (isRTL ? next : prev) : "") + (/all|right/.test(cornerClass) && row == 0 ? (isRTL ? prev : next) : "") + this._generateMonthYearHeader(inst, drawMonth, drawYear, minDate, maxDate, row > 0 || col > 0, monthNames, monthNamesShort) + '</div><table class="ui-datepicker-calendar"><thead><tr>';
                    var thead = (showWeek ? '<th class="ui-datepicker-week-col">' + this._get(inst, "weekHeader") + "</th>" : "");
                    for (var dow = 0; dow < 7; dow++) {
                        var day = (dow + firstDay) % 7;
                        thead += "<th" + ((dow + firstDay + 6) % 7 >= 5 ? ' class="ui-datepicker-week-end"' : "") + '><span title="' + dayNames[day] + '">' + dayNamesMin[day] + "</span></th>"
                    }
                    calender += thead + "</tr></thead><tbody>";
                    var daysInMonth = this._getDaysInMonth(drawYear, drawMonth);
                    if (drawYear == inst.selectedYear && drawMonth == inst.selectedMonth) {
                        inst.selectedDay = Math.min(inst.selectedDay, daysInMonth)
                    }
                    var leadDays = (this._getFirstDayOfMonth(drawYear, drawMonth) - firstDay + 7) % 7;
                    var curRows = Math.ceil((leadDays + daysInMonth) / 7);
                    var numRows = (isMultiMonth ? this.maxRows > curRows ? this.maxRows : curRows : curRows);
                    this.maxRows = numRows;
                    var printDate = this._daylightSavingAdjust(new Date(drawYear, drawMonth, 1 - leadDays));
                    for (var dRow = 0; dRow < numRows; dRow++) {
                        calender += "<tr>";
                        var tbody = (!showWeek ? "" : '<td class="ui-datepicker-week-col">' + this._get(inst, "calculateWeek")(printDate) + "</td>");
                        for (var dow = 0; dow < 7; dow++) {
                            var daySettings = (beforeShowDay ? beforeShowDay.apply((inst.input ? inst.input[0] : null), [printDate]) : [true, ""]);
                            var otherMonth = (printDate.getMonth() != drawMonth);
                            var unselectable = (otherMonth && !selectOtherMonths) || !daySettings[0] || (minDate && printDate < minDate) || (maxDate && printDate > maxDate);
                            tbody += '<td class="' + ((dow + firstDay + 6) % 7 >= 5 ? " ui-datepicker-week-end" : "") + (otherMonth ? " ui-datepicker-other-month" : "") + ((printDate.getTime() == selectedDate.getTime() && drawMonth == inst.selectedMonth && inst._keyEvent) || (defaultDate.getTime() == printDate.getTime() && defaultDate.getTime() == selectedDate.getTime()) ? " " + this._dayOverClass : "") + (unselectable ? " " + this._unselectableClass + " ui-state-disabled" : "") + (otherMonth && !showOtherMonths ? "" : " " + daySettings[1] + (printDate.getTime() == currentDate.getTime() ? " " + this._currentClass : "") + (printDate.getTime() == today.getTime() ? " ui-datepicker-today" : "")) + '"' + ((!otherMonth || showOtherMonths) && daySettings[2] ? ' title="' + daySettings[2] + '"' : "") + (unselectable ? "" : ' data-handler="selectDay" data-event="click" data-month="' + printDate.getMonth() + '" data-year="' + printDate.getFullYear() + '"') + ">" + (otherMonth && !showOtherMonths ? "&#xa0;" : (unselectable ? '<span class="ui-state-default">' + printDate.getDate() + "</span>" : '<a class="ui-state-default' + (printDate.getTime() == today.getTime() ? " ui-state-highlight" : "") + (printDate.getTime() == currentDate.getTime() ? " ui-state-active" : "") + (otherMonth ? " ui-priority-secondary" : "") + '" href="#">' + printDate.getDate() + "</a>")) + "</td>";
                            printDate.setDate(printDate.getDate() + 1);
                            printDate = this._daylightSavingAdjust(printDate)
                        }
                        calender += tbody + "</tr>"
                    }
                    drawMonth++;
                    if (drawMonth > 11) {
                        drawMonth = 0;
                        drawYear++
                    }
                    calender += "</tbody></table>" + (isMultiMonth ? "</div>" + ((numMonths[0] > 0 && col == numMonths[1] - 1) ? '<div class="ui-datepicker-row-break"></div>' : "") : "");
                    group += calender
                }
                html += group
            }
            html += buttonPanel + ($.ui.ie6 && !inst.inline ? '<iframe src="javascript:false;" class="ui-datepicker-cover" frameborder="0"></iframe>' : "");
            inst._keyEvent = false;
            return html
        },
        _generateMonthYearHeader: function(inst, drawMonth, drawYear, minDate, maxDate, secondary, monthNames, monthNamesShort) {
            var changeMonth = this._get(inst, "changeMonth");
            var changeYear = this._get(inst, "changeYear");
            var showMonthAfterYear = this._get(inst, "showMonthAfterYear");
            var html = '<div class="ui-datepicker-title">';
            var monthHtml = "";
            if (secondary || !changeMonth) {
                monthHtml += '<span class="ui-datepicker-month">' + monthNames[drawMonth] + "</span>"
            } else {
                var inMinYear = (minDate && minDate.getFullYear() == drawYear);
                var inMaxYear = (maxDate && maxDate.getFullYear() == drawYear);
                monthHtml += '<select class="ui-datepicker-month" data-handler="selectMonth" data-event="change">';
                for (var month = 0; month < 12; month++) {
                    if ((!inMinYear || month >= minDate.getMonth()) && (!inMaxYear || month <= maxDate.getMonth())) {
                        monthHtml += '<option value="' + month + '"' + (month == drawMonth ? ' selected="selected"' : "") + ">" + monthNamesShort[month] + "</option>"
                    }
                }
                monthHtml += "</select>"
            }
            if (!showMonthAfterYear) {
                html += monthHtml + (secondary || !(changeMonth && changeYear) ? "&#xa0;" : "")
            }
            if (!inst.yearshtml) {
                inst.yearshtml = "";
                if (secondary || !changeYear) {
                    html += '<span class="ui-datepicker-year">' + drawYear + "</span>"
                } else {
                    var years = this._get(inst, "yearRange").split(":");
                    var thisYear = new Date().getFullYear();
                    var determineYear = function(value) {
                        var year = (value.match(/c[+-].*/) ? drawYear + parseInt(value.substring(1), 10) : (value.match(/[+-].*/) ? thisYear + parseInt(value, 10) : parseInt(value, 10)));
                        return (isNaN(year) ? thisYear : year)
                    };
                    var year = determineYear(years[0]);
                    var endYear = Math.max(year, determineYear(years[1] || ""));
                    year = (minDate ? Math.max(year, minDate.getFullYear()) : year);
                    endYear = (maxDate ? Math.min(endYear, maxDate.getFullYear()) : endYear);
                    inst.yearshtml += '<select class="ui-datepicker-year" data-handler="selectYear" data-event="change">';
                    for (; year <= endYear; year++) {
                        inst.yearshtml += '<option value="' + year + '"' + (year == drawYear ? ' selected="selected"' : "") + ">" + year + "</option>"
                    }
                    inst.yearshtml += "</select>";
                    html += inst.yearshtml;
                    inst.yearshtml = null
                }
            }
            html += this._get(inst, "yearSuffix");
            if (showMonthAfterYear) {
                html += (secondary || !(changeMonth && changeYear) ? "&#xa0;" : "") + monthHtml
            }
            html += "</div>";
            return html
        },
        _adjustInstDate: function(inst, offset, period) {
            var year = inst.drawYear + (period == "Y" ? offset : 0);
            var month = inst.drawMonth + (period == "M" ? offset : 0);
            var day = Math.min(inst.selectedDay, this._getDaysInMonth(year, month)) + (period == "D" ? offset : 0);
            var date = this._restrictMinMax(inst, this._daylightSavingAdjust(new Date(year, month, day)));
            inst.selectedDay = date.getDate();
            inst.drawMonth = inst.selectedMonth = date.getMonth();
            inst.drawYear = inst.selectedYear = date.getFullYear();
            if (period == "M" || period == "Y") {
                this._notifyChange(inst)
            }
        },
        _restrictMinMax: function(inst, date) {
            var minDate = this._getMinMaxDate(inst, "min");
            var maxDate = this._getMinMaxDate(inst, "max");
            var newDate = (minDate && date < minDate ? minDate : date);
            newDate = (maxDate && newDate > maxDate ? maxDate : newDate);
            return newDate
        },
        _notifyChange: function(inst) {
            var onChange = this._get(inst, "onChangeMonthYear");
            if (onChange) {
                onChange.apply((inst.input ? inst.input[0] : null), [inst.selectedYear, inst.selectedMonth + 1, inst])
            }
        },
        _getNumberOfMonths: function(inst) {
            var numMonths = this._get(inst, "numberOfMonths");
            return (numMonths == null ? [1, 1] : (typeof numMonths == "number" ? [1, numMonths] : numMonths))
        },
        _getMinMaxDate: function(inst, minMax) {
            return this._determate(inst, this._get(inst, minMax + "Date"), null)
        },
        _getDaysInMonth: function(year, month) {
            return 32 - this._daylightSavingAdjust(new Date(year, month, 32)).getDate()
        },
        _getFirstDayOfMonth: function(year, month) {
            return new Date(year, month, 1).getDay()
        },
        _canAdjustMonth: function(inst, offset, curYear, curMonth) {
            var numMonths = this._getNumberOfMonths(inst);
            var date = this._daylightSavingAdjust(new Date(curYear, curMonth + (offset < 0 ? offset : numMonths[0] * numMonths[1]), 1));
            if (offset < 0) {
                date.setDate(this._getDaysInMonth(date.getFullYear(), date.getMonth()))
            }
            return this._isInRange(inst, date)
        },
        _isInRange: function(inst, date) {
            var minDate = this._getMinMaxDate(inst, "min");
            var maxDate = this._getMinMaxDate(inst, "max");
            return ((!minDate || date.getTime() >= minDate.getTime()) && (!maxDate || date.getTime() <= maxDate.getTime()))
        },
        _getFormatConfig: function(inst) {
            var shortYearCutoff = this._get(inst, "shortYearCutoff");
            shortYearCutoff = (typeof shortYearCutoff != "string" ? shortYearCutoff : new Date().getFullYear() % 100 + parseInt(shortYearCutoff, 10));
            return {
                shortYearCutoff: shortYearCutoff,
                dayNamesShort: this._get(inst, "dayNamesShort"),
                dayNames: this._get(inst, "dayNames"),
                monthNamesShort: this._get(inst, "monthNamesShort"),
                monthNames: this._get(inst, "monthNames")
            }
        },
        _formatDate: function(inst, day, month, year) {
            if (!day) {
                inst.currentDay = inst.selectedDay;
                inst.currentMonth = inst.selectedMonth;
                inst.currentYear = inst.selectedYear
            }
            var date = (day ? (typeof day == "object" ? day : this._daylightSavingAdjust(new Date(year, month, day))) : this._daylightSavingAdjust(new Date(inst.currentYear, inst.currentMonth, inst.currentDay)));
            return this.formatDate(this._get(inst, "dateFormat"), date, this._getFormatConfig(inst))
        }
    });

    function bindHover(dpDiv) {
        var selector = "button, .ui-datepicker-prev, .ui-datepicker-next, .ui-datepicker-calendar td a";
        return dpDiv.delegate(selector, "mouseout", function() {
            $(this).removeClass("ui-state-hover");
            if (this.className.indexOf("ui-datepicker-prev") != -1) {
                $(this).removeClass("ui-datepicker-prev-hover")
            }
            if (this.className.indexOf("ui-datepicker-next") != -1) {
                $(this).removeClass("ui-datepicker-next-hover")
            }
        }).delegate(selector, "mouseover", function() {
            if (!$.datepicker._isDisabledDatepicker(instActive.inline ? dpDiv.parent()[0] : instActive.input[0])) {
                $(this).parents(".ui-datepicker-calendar").find("a").removeClass("ui-state-hover");
                $(this).addClass("ui-state-hover");
                if (this.className.indexOf("ui-datepicker-prev") != -1) {
                    $(this).addClass("ui-datepicker-prev-hover")
                }
                if (this.className.indexOf("ui-datepicker-next") != -1) {
                    $(this).addClass("ui-datepicker-next-hover")
                }
            }
        })
    }

    function extendRemove(target, props) {
        $.extend(target, props);
        for (var name in props) {
            if (props[name] == null || props[name] == ) {
                target[name] = props[name]
            }
        }
        return target
    }
    $.fn.datepicker = function(options) {
        if (!this.length) {
            return this
        }
        if (!$.datepicker.initialized) {
            $(document).mousedown($.datepicker._checkExternalClick).find(document.body).append($.datepicker.dpDiv);
            $.datepicker.initialized = true
        }
        var otherArgs = Array.prototype.slice.call(arguments, 1);
        if (typeof options == "string" && (options == "isDisabled" || options == "getDate" || options == "widget")) {
            return $.datepicker["_" + options + "Datepicker"].apply($.datepicker, [this[0]].concat(otherArgs))
        }
        if (options == "option" && arguments.length == 2 && typeof arguments[1] == "string") {
            return $.datepicker["_" + options + "Datepicker"].apply($.datepicker, [this[0]].concat(otherArgs))
        }
        return this.each(function() {
            typeof options == "string" ? $.datepicker["_" + options + "Datepicker"].apply($.datepicker, [this].concat(otherArgs)) : $.datepicker._attachDatepicker(this, options)
        })
    };
    $.datepicker = new Datepicker();
    $.datepicker.initialized = false;
    $.datepicker.uuid = new Date().getTime();
    $.datepicker.version = "1.9.1";
    window["DP_jQuery_" + dpuuid] = $
})(jQuery);
(function(j, h) {
    var f = "ui-dialog ui-widget ui-widget-content ui-corner-all ",
        g = {
            buttons: true,
            height: true,
            maxHeight: true,
            maxWidth: true,
            minHeight: true,
            minWidth: true,
            width: true
        },
        k = {
            maxHeight: true,
            maxWidth: true,
            minHeight: true,
            minWidth: true
        };
    j.widget("ui.dialog", {
        version: "1.9.1",
        options: {
            autoOpen: true,
            buttons: {},
            closeOnEscape: true,
            closeText: "close",
            dialogClass: "",
            draggable: true,
            hide: null,
            height: "auto",
            maxHeight: false,
            maxWidth: false,
            minHeight: 150,
            minWidth: 150,
            modal: false,
            position: {
                my: "center",
                at: "center",
                of: window,
                collision: "fit",
                using: function(a) {
                    var b = j(this).css(a).offset().top;
                    if (b < 0) {
                        j(this).css("top", a.top - b)
                    }
                }
            },
            resizable: true,
            show: null,
            stack: true,
            title: "",
            width: 300,
            zIndex: 1000
        },
        _create: function() {
            this.originalTitle = this.element.attr("title");
            if (typeof this.originalTitle !== "string") {
                this.originalTitle = ""
            }
            this.oldPosition = {
                parent: this.element.parent(),
                index: this.element.parent().children().index(this.element)
            };
            this.options.title = this.options.title || this.originalTitle;
            var c = this,
                d = this.options,
                a = d.title || "&#160;",
                n, b, p, e, o;
            n = (this.uiDialog = j("<div>")).addClass(f + d.dialogClass).css({
                display: "none",
                outline: 0,
                zIndex: d.zIndex
            }).attr("tabIndex", -1).keydown(function(l) {
                if (d.closeOnEscape && !l.isDefaultPrevented() && l.keyCode && l.keyCode === j.ui.keyCode.ESCAPE) {
                    c.close(l);
                    l.preventDefault()
                }
            }).mousedown(function(l) {
                c.moveToTop(false, l)
            }).appendTo("body");
            this.element.show().removeAttr("title").addClass("ui-dialog-content ui-widget-content").appendTo(n);
            b = (this.uiDialogTitlebar = j("<div>")).addClass("ui-dialog-titlebar  ui-widget-header  ui-corner-all  ui-helper-clearfix").bind("mousedown", function() {
                n.focus()
            }).prependTo(n);
            p = j("<a href='#'></a>").addClass("ui-dialog-titlebar-close  ui-corner-all").attr("role", "button").click(function(l) {
                l.preventDefault();
                c.close(l)
            }).appendTo(b);
            (this.uiDialogTitlebarCloseText = j("<span>")).addClass("ui-icon ui-icon-closethick").text(d.closeText).appendTo(p);
            e = j("<span>").uniqueId().addClass("ui-dialog-title").html(a).prependTo(b);
            o = (this.uiDialogButtonPane = j("<div>")).addClass("ui-dialog-buttonpane ui-widget-content ui-helper-clearfix");
            (this.uiButtonSet = j("<div>")).addClass("ui-dialog-buttonset").appendTo(o);
            n.attr({
                role: "dialog",
                "aria-labelledby": e.attr("id")
            });
            b.find("*").add(b).disableSelection();
            this._hoverable(p);
            this._focusable(p);
            if (d.draggable && j.fn.draggable) {
                this._makeDraggable()
            }
            if (d.resizable && j.fn.resizable) {
                this._makeResizable()
            }
            this._createButtons(d.buttons);
            this._isOpen = false;
            if (j.fn.bgiframe) {
                n.bgiframe()
            }
            this._on(n, {
                keydown: function(m) {
                    if (!d.modal || m.keyCode !== j.ui.keyCode.TAB) {
                        return
                    }
                    var r = j(":tabbable", n),
                        l = r.filter(":first"),
                        s = r.filter(":last");
                    if (m.target === s[0] && !m.shiftKey) {
                        l.focus(1);
                        return false
                    } else {
                        if (m.target === l[0] && m.shiftKey) {
                            s.focus(1);
                            return false
                        }
                    }
                }
            })
        },
        _init: function() {
            if (this.options.autoOpen) {
                this.open()
            }
        },
        _destroy: function() {
            var a, b = this.oldPosition;
            if (this.overlay) {
                this.overlay.destroy()
            }
            this.uiDialog.hide();
            this.element.removeClass("ui-dialog-content ui-widget-content").hide().appendTo("body");
            this.uiDialog.remove();
            if (this.originalTitle) {
                this.element.attr("title", this.originalTitle)
            }
            a = b.parent.children().eq(b.index);
            if (a.length && a[0] !== this.element[0]) {
                a.before(this.element)
            } else {
                b.parent.append(this.element)
            }
        },
        widget: function() {
            return this.uiDialog
        },
        close: function(a) {
            var b = this,
                c, d;
            if (!this._isOpen) {
                return
            }
            if (false === this._trigger("beforeClose", a)) {
                return
            }
            this._isOpen = false;
            if (this.overlay) {
                this.overlay.destroy()
            }
            if (this.options.hide) {
                this._hide(this.uiDialog, this.options.hide, function() {
                    b._trigger("close", a)
                })
            } else {
                this.uiDialog.hide();
                this._trigger("close", a)
            }
            j.ui.dialog.overlay.resize();
            if (this.options.modal) {
                c = 0;
                j(".ui-dialog").each(function() {
                    if (this !== b.uiDialog[0]) {
                        d = j(this).css("z-index");
                        if (!isNaN(d)) {
                            c = Math.max(c, d)
                        }
                    }
                });
                j.ui.dialog.maxZ = c
            }
            return this
        },
        isOpen: function() {
            return this._isOpen
        },
        moveToTop: function(a, b) {
            var c = this.options,
                d;
            if ((c.modal && !a) || (!c.stack && !c.modal)) {
                return this._trigger("focus", b)
            }
            if (c.zIndex > j.ui.dialog.maxZ) {
                j.ui.dialog.maxZ = c.zIndex
            }
            if (this.overlay) {
                j.ui.dialog.maxZ += 1;
                j.ui.dialog.overlay.maxZ = j.ui.dialog.maxZ;
                this.overlay.$el.css("z-index", j.ui.dialog.overlay.maxZ)
            }
            d = {
                scrollTop: this.element.scrollTop(),
                scrollLeft: this.element.scrollLeft()
            };
            j.ui.dialog.maxZ += 1;
            this.uiDialog.css("z-index", j.ui.dialog.maxZ);
            this.element.attr(d);
            this._trigger("focus", b);
            return this
        },
        open: function() {
            if (this._isOpen) {
                return
            }
            var a, b = this.options,
                c = this.uiDialog;
            this._size();
            this._position(b.position);
            c.show(b.show);
            this.overlay = b.modal ? new j.ui.dialog.overlay(this) : null;
            this.moveToTop(true);
            a = this.element.find(":tabbable");
            if (!a.length) {
                a = this.uiDialogButtonPane.find(":tabbable");
                if (!a.length) {
                    a = c
                }
            }
            a.eq(0).focus();
            this._isOpen = true;
            this._trigger("open");
            return this
        },
        _createButtons: function(a) {
            var b = this,
                c = false;
            this.uiDialogButtonPane.remove();
            this.uiButtonSet.empty();
            if (typeof a === "object" && a !== null) {
                j.each(a, function() {
                    return !(c = true)
                })
            }
            if (c) {
                j.each(a, function(l, d) {
                    d = j.isFunction(d) ? {
                        click: d,
                        text: l
                    } : d;
                    var e = j("<button type='button'></button>").attr(d, true).unbind("click").click(function() {
                        d.click.apply(b.element[0], arguments)
                    }).appendTo(b.uiButtonSet);
                    if (j.fn.button) {
                        e.button()
                    }
                });
                this.uiDialog.addClass("ui-dialog-buttons");
                this.uiDialogButtonPane.appendTo(this.uiDialog)
            } else {
                this.uiDialog.removeClass("ui-dialog-buttons")
            }
        },
        _makeDraggable: function() {
            var a = this,
                b = this.options;

            function c(d) {
                return {
                    position: d.position,
                    offset: d.offset
                }
            }
            this.uiDialog.draggable({
                cancel: ".ui-dialog-content, .ui-dialog-titlebar-close",
                handle: ".ui-dialog-titlebar",
                containment: "document",
                start: function(e, d) {
                    j(this).addClass("ui-dialog-dragging");
                    a._trigger("dragStart", e, c(d))
                },
                drag: function(e, d) {
                    a._trigger("drag", e, c(d))
                },
                stop: function(e, d) {
                    b.position = [d.position.left - a.document.scrollLeft(), d.position.top - a.document.scrollTop()];
                    j(this).removeClass("ui-dialog-dragging");
                    a._trigger("dragStop", e, c(d));
                    j.ui.dialog.overlay.resize()
                }
            })
        },
        _makeResizable: function(b) {
            b = (b === h ? this.options.resizable : b);
            var a = this,
                c = this.options,
                l = this.uiDialog.css("position"),
                d = typeof b === "string" ? b : "n,e,s,w,se,sw,ne,nw";

            function e(m) {
                return {
                    originalPosition: m.originalPosition,
                    originalSize: m.originalSize,
                    position: m.position,
                    size: m.size
                }
            }
            this.uiDialog.resizable({
                cancel: ".ui-dialog-content",
                containment: "document",
                alsoResize: this.element,
                maxWidth: c.maxWidth,
                maxHeight: c.maxHeight,
                minWidth: c.minWidth,
                minHeight: this._minHeight(),
                handles: d,
                start: function(o, n) {
                    j(this).addClass("ui-dialog-resizing");
                    a._trigger("resizeStart", o, e(n))
                },
                resize: function(o, n) {
                    a._trigger("resize", o, e(n))
                },
                stop: function(o, n) {
                    j(this).removeClass("ui-dialog-resizing");
                    c.height = j(this).height();
                    c.width = j(this).width();
                    a._trigger("resizeStop", o, e(n));
                    j.ui.dialog.overlay.resize()
                }
            }).css("position", l).find(".ui-resizable-se").addClass("ui-icon ui-icon-grip-diagonal-se")
        },
        _minHeight: function() {
            var a = this.options;
            if (a.height === "auto") {
                return a.minHeight
            } else {
                return Math.min(a.minHeight, a.height)
            }
        },
        _position: function(c) {
            var b = [],
                a = [0, 0],
                d;
            if (c) {
                if (typeof c === "string" || (typeof c === "object" && "0" in c)) {
                    b = c.split ? c.split(" ") : [c[0], c[1]];
                    if (b.length === 1) {
                        b[1] = b[0]
                    }
                    j.each(["left", "top"], function(e, l) {
                        if (+b[e] === b[e]) {
                            a[e] = b[e];
                            b[e] = l
                        }
                    });
                    c = {
                        my: b[0] + (a[0] < 0 ? a[0] : "+" + a[0]) + " " + b[1] + (a[1] < 0 ? a[1] : "+" + a[1]),
                        at: b.join(" ")
                    }
                }
                c = j.extend({}, j.ui.dialog.prototype.options.position, c)
            } else {
                c = j.ui.dialog.prototype.options.position
            }
            d = this.uiDialog.is(":visible");
            if (!d) {
                this.uiDialog.show()
            }
            this.uiDialog.position(c);
            if (!d) {
                this.uiDialog.hide()
            }
        },
        _setOptions: function(b) {
            var a = this,
                d = {},
                c = false;
            j.each(b, function(l, e) {
                a._setOption(l, e);
                if (l in g) {
                    c = true
                }
                if (l in k) {
                    d[l] = e
                }
            });
            if (c) {
                this._size()
            }
            if (this.uiDialog.is(":data(resizable)")) {
                this.uiDialog.resizable("option", d)
            }
        },
        _setOption: function(c, b) {
            var d, a, e = this.uiDialog;
            switch (c) {
                case "buttons":
                    this._createButtons(b);
                    break;
                case "closeText":
                    this.uiDialogTitlebarCloseText.text("" + b);
                    break;
                case "dialogClass":
                    e.removeClass(this.options.dialogClass).addClass(f + b);
                    break;
                case "disabled":
                    if (b) {
                        e.addClass("ui-dialog-disabled")
                    } else {
                        e.removeClass("ui-dialog-disabled")
                    }
                    break;
                case "draggable":
                    d = e.is(":data(draggable)");
                    if (d && !b) {
                        e.draggable("destroy")
                    }
                    if (!d && b) {
                        this._makeDraggable()
                    }
                    break;
                case "position":
                    this._position(b);
                    break;
                case "resizable":
                    a = e.is(":data(resizable)");
                    if (a && !b) {
                        e.resizable("destroy")
                    }
                    if (a && typeof b === "string") {
                        e.resizable("option", "handles", b)
                    }
                    if (!a && b !== false) {
                        this._makeResizable(b)
                    }
                    break;
                case "title":
                    j(".ui-dialog-title", this.uiDialogTitlebar).html("" + (b || "&#160;"));
                    break
            }
            this._super(c, b)
        },
        _size: function() {
            var d, a, b, c = this.options,
                e = this.uiDialog.is(":visible");
            this.element.show().css({
                width: "auto",
                minHeight: 0,
                height: 0
            });
            if (c.minWidth > c.width) {
                c.width = c.minWidth
            }
            d = this.uiDialog.css({
                height: "auto",
                width: c.width
            }).outerHeight();
            a = Math.max(0, c.minHeight - d);
            if (c.height === "auto") {
                if (j.support.minHeight) {
                    this.element.css({
                        minHeight: a,
                        height: "auto"
                    })
                } else {
                    this.uiDialog.show();
                    b = this.element.css("height", "auto").height();
                    if (!e) {
                        this.uiDialog.hide()
                    }
                    this.element.height(Math.max(b, a))
                }
            } else {
                this.element.height(Math.max(c.height - d, 0))
            }
            if (this.uiDialog.is(":data(resizable)")) {
                this.uiDialog.resizable("option", "minHeight", this._minHeight())
            }
        }
    });
    j.extend(j.ui.dialog, {
        uuid: 0,
        maxZ: 0,
        getTitleId: function(b) {
            var a = b.attr("id");
            if (!a) {
                this.uuid += 1;
                a = this.uuid
            }
            return "ui-dialog-title-" + a
        },
        overlay: function(a) {
            this.$el = j.ui.dialog.overlay.create(a)
        }
    });
    j.extend(j.ui.dialog.overlay, {
        instances: [],
        oldInstances: [],
        maxZ: 0,
        events: j.map("focus,mousedown,mouseup,keydown,keypress,click".split(","), function(a) {
            return a + ".dialog-overlay"
        }).join(" "),
        create: function(a) {
            if (this.instances.length === 0) {
                setTimeout(function() {
                    if (j.ui.dialog.overlay.instances.length) {
                        j(document).bind(j.ui.dialog.overlay.events, function(c) {
                            if (j(c.target).zIndex() < j.ui.dialog.overlay.maxZ) {
                                return false
                            }
                        })
                    }
                }, 1);
                j(window).bind("resize.dialog-overlay", j.ui.dialog.overlay.resize)
            }
            var b = (this.oldInstances.pop() || j("<div>").addClass("ui-widget-overlay"));
            j(document).bind("keydown.dialog-overlay", function(d) {
                var c = j.ui.dialog.overlay.instances;
                if (c.length !== 0 && c[c.length - 1] === b && a.options.closeOnEscape && !d.isDefaultPrevented() && d.keyCode && d.keyCode === j.ui.keyCode.ESCAPE) {
                    a.close(d);
                    d.preventDefault()
                }
            });
            b.appendTo(document.body).css({
                width: this.width(),
                height: this.height()
            });
            if (j.fn.bgiframe) {
                b.bgiframe()
            }
            this.instances.push(b);
            return b
        },
        destroy: function(c) {
            var b = j.inArray(c, this.instances),
                a = 0;
            if (b !== -1) {
                this.oldInstances.push(this.instances.splice(b, 1)[0])
            }
            if (this.instances.length === 0) {
                j([document, window]).unbind(".dialog-overlay")
            }
            c.height(0).width(0).remove();
            j.each(this.instances, function() {
                a = Math.max(a, this.css("z-index"))
            });
            this.maxZ = a
        },
        height: function() {
            var a, b;
            if (j.ui.ie) {
                a = Math.max(document.documentElement.scrollHeight, document.body.scrollHeight);
                b = Math.max(document.documentElement.offsetHeight, document.body.offsetHeight);
                if (a < b) {
                    return j(window).height() + "px"
                } else {
                    return a + "px"
                }
            } else {
                return j(document).height() + "px"
            }
        },
        width: function() {
            var b, a;
            if (j.ui.ie) {
                b = Math.max(document.documentElement.scrollWidth, document.body.scrollWidth);
                a = Math.max(document.documentElement.offsetWidth, document.body.offsetWidth);
                if (b < a) {
                    return j(window).width() + "px"
                } else {
                    return b + "px"
                }
            } else {
                return j(document).width() + "px"
            }
        },
        resize: function() {
            var a = j([]);
            j.each(j.ui.dialog.overlay.instances, function() {
                a = a.add(this)
            });
            a.css({
                width: 0,
                height: 0
            }).css({
                width: j.ui.dialog.overlay.width(),
                height: j.ui.dialog.overlay.height()
            })
        }
    });
    j.extend(j.ui.dialog.overlay.prototype, {
        destroy: function() {
            j.ui.dialog.overlay.destroy(this.$el)
        }
    })
}(jQuery));
(function(e, g) {
    var f = /up|down|vertical/,
        h = /up|left|vertical|horizontal/;
    e.effects.effect.blind = function(z, o) {
        var y = e(this),
            b = ["position", "top", "bottom", "left", "right", "height", "width"],
            d = e.effects.setMode(y, z.mode || "hide"),
            a = z.direction || "up",
            w = f.test(a),
            x = w ? "height" : "width",
            c = w ? "top" : "left",
            C = h.test(a),
            u = {},
            D = d === "show",
            A, B, v;
        if (y.parent().is(".ui-effects-wrapper")) {
            e.effects.save(y.parent(), b)
        } else {
            e.effects.save(y, b)
        }
        y.show();
        A = e.effects.createWrapper(y).css({
            overflow: "hidden"
        });
        B = A[x]();
        v = parseFloat(A.css(c)) || 0;
        u[x] = D ? B : 0;
        if (!C) {
            y.css(w ? "bottom" : "right", 0).css(w ? "top" : "left", "auto").css({
                position: "absolute"
            });
            u[c] = D ? v : B + v
        }
        if (D) {
            A.css(x, 0);
            if (!C) {
                A.css(c, v + B)
            }
        }
        A.animate(u, {
            duration: z.duration,
            easing: z.easing,
            queue: false,
            complete: function() {
                if (d === "hide") {
                    y.hide()
                }
                e.effects.restore(y, b);
                e.effects.removeWrapper(y);
                o()
            }
        })
    }
})(jQuery);
(function(d, c) {
    d.effects.effect.bounce = function(F, G) {
        var O = d(this),
            N = ["position", "top", "bottom", "left", "right", "height", "width"],
            H = d.effects.setMode(O, F.mode || "effect"),
            I = H === "hide",
            o = H === "show",
            b = F.direction || "up",
            M = F.distance,
            J = F.times || 5,
            a = J * 2 + (o || I ? 1 : 0),
            y = F.duration / a,
            D = F.easing,
            L = (b === "up" || b === "down") ? "top" : "left",
            E = (b === "up" || b === "left"),
            z, K, A, C = O.queue(),
            B = C.length;
        if (o || I) {
            N.push("opacity")
        }
        d.effects.save(O, N);
        O.show();
        d.effects.createWrapper(O);
        if (!M) {
            M = O[L === "top" ? "outerHeight" : "outerWidth"]() / 3
        }
        if (o) {
            A = {
                opacity: 1
            };
            A[L] = 0;
            O.css("opacity", 0).css(L, E ? -M * 2 : M * 2).animate(A, y, D)
        }
        if (I) {
            M = M / Math.pow(2, J - 1)
        }
        A = {};
        A[L] = 0;
        for (z = 0; z < J; z++) {
            K = {};
            K[L] = (E ? "-=" : "+=") + M;
            O.animate(K, y, D).animate(A, y, D);
            M = I ? M * 2 : M / 2
        }
        if (I) {
            K = {
                opacity: 0
            };
            K[L] = (E ? "-=" : "+=") + M;
            O.animate(K, y, D)
        }
        O.queue(function() {
            if (I) {
                O.hide()
            }
            d.effects.restore(O, N);
            d.effects.removeWrapper(O);
            G()
        });
        if (B > 1) {
            C.splice.apply(C, [1, 0].concat(C.splice(B, a + 1)))
        }
        O.dequeue()
    }
})(jQuery);
(function(d, c) {
    d.effects.effect.clip = function(z, w) {
        var y = d(this),
            r = ["position", "top", "bottom", "left", "right", "height", "width"],
            s = d.effects.setMode(y, z.mode || "hide"),
            b = s === "show",
            o = z.direction || "vertical",
            u = o === "vertical",
            a = u ? "height" : "width",
            v = u ? "top" : "left",
            x = {},
            B, A, C;
        d.effects.save(y, r);
        y.show();
        B = d.effects.createWrapper(y).css({
            overflow: "hidden"
        });
        A = (y[0].tagName === "IMG") ? B : y;
        C = A[a]();
        if (b) {
            A.css(a, 0);
            A.css(v, C / 2)
        }
        x[a] = b ? C : 0;
        x[v] = b ? 0 : C / 2;
        A.animate(x, {
            queue: false,
            duration: z.duration,
            easing: z.easing,
            complete: function() {
                if (!b) {
                    y.hide()
                }
                d.effects.restore(y, r);
                d.effects.removeWrapper(y);
                w()
            }
        })
    }
})(jQuery);
(function(d, c) {
    d.effects.effect.drop = function(v, q) {
        var u = d(this),
            o = ["position", "top", "bottom", "left", "right", "opacity", "height", "width"],
            p = d.effects.setMode(u, v.mode || "hide"),
            b = p === "show",
            n = v.direction || "left",
            s = (n === "up" || n === "down") ? "top" : "left",
            a = (n === "up" || n === "left") ? "pos" : "neg",
            r = {
                opacity: b ? 1 : 0
            },
            w;
        d.effects.save(u, o);
        u.show();
        d.effects.createWrapper(u);
        w = v.distance || u[s === "top" ? "outerHeight" : "outerWidth"](true) / 2;
        if (b) {
            u.css("opacity", 0).css(s, a === "pos" ? -w : w)
        }
        r[s] = (b ? (a === "pos" ? "+=" : "-=") : (a === "pos" ? "-=" : "+=")) + w;
        u.animate(r, {
            queue: false,
            duration: v.duration,
            easing: v.easing,
            complete: function() {
                if (p === "hide") {
                    u.hide()
                }
                d.effects.restore(u, o);
                d.effects.removeWrapper(u);
                q()
            }
        })
    }
})(jQuery);
(function(d, c) {
    d.effects.effect.explode = function(z, A) {
        var G = z.pieces ? Math.round(Math.sqrt(z.pieces)) : 3,
            L = G,
            M = d(this),
            E = d.effects.setMode(M, z.mode || "hide"),
            b = E === "show",
            I = M.show().css("visibility", "hidden").offset(),
            y = Math.ceil(M.outerWidth() / L),
            B = Math.ceil(M.outerHeight() / G),
            H = [],
            j, o, K, C, D, F;

        function a() {
            H.push(this);
            if (H.length === G * L) {
                J()
            }
        }
        for (j = 0; j < G; j++) {
            C = I.top + j * B;
            F = j - (G - 1) / 2;
            for (o = 0; o < L; o++) {
                K = I.left + o * y;
                D = o - (L - 1) / 2;
                M.clone().appendTo("body").wrap("<div></div>").css({
                    position: "absolute",
                    visibility: "visible",
                    left: -o * y,
                    top: -j * B
                }).parent().addClass("ui-effects-explode").css({
                    position: "absolute",
                    overflow: "hidden",
                    width: y,
                    height: B,
                    left: K + (b ? D * y : 0),
                    top: C + (b ? F * B : 0),
                    opacity: b ? 0 : 1
                }).animate({
                    left: K + (b ? 0 : D * y),
                    top: C + (b ? 0 : F * B),
                    opacity: b ? 1 : 0
                }, z.duration || 500, z.easing, a)
            }
        }

        function J() {
            M.css({
                visibility: "visible"
            });
            d(H).remove();
            if (!b) {
                M.hide()
            }
            A()
        }
    }
})(jQuery);
(function(d, c) {
    d.effects.effect.fade = function(a, h) {
        var g = d(this),
            b = d.effects.setMode(g, a.mode || "toggle");
        g.animate({
            opacity: b
        }, {
            queue: false,
            duration: a.duration,
            easing: a.easing,
            complete: h
        })
    }
})(jQuery);
(function(d, c) {
    d.effects.effect.fold = function(D, z) {
        var C = d(this),
            u = ["position", "top", "bottom", "left", "right", "height", "width"],
            x = d.effects.setMode(C, D.mode || "hide"),
            a = x === "show",
            w = x === "hide",
            G = D.size || 15,
            v = /([0-9]+)%/.exec(G),
            H = !!D.horizFirst,
            y = a !== H,
            B = y ? ["width", "height"] : ["height", "width"],
            A = D.duration / 2,
            E, F, b = {},
            o = {};
        d.effects.save(C, u);
        C.show();
        E = d.effects.createWrapper(C).css({
            overflow: "hidden"
        });
        F = y ? [E.width(), E.height()] : [E.height(), E.width()];
        if (v) {
            G = parseInt(v[1], 10) / 100 * F[w ? 0 : 1]
        }
        if (a) {
            E.css(H ? {
                height: 0,
                width: G
            } : {
                height: G,
                width: 0
            })
        }
        b[B[0]] = a ? F[0] : G;
        o[B[1]] = a ? F[1] : 0;
        E.animate(b, A, D.easing).animate(o, A, D.easing, function() {
            if (w) {
                C.hide()
            }
            d.effects.restore(C, u);
            d.effects.removeWrapper(C);
            z()
        })
    }
})(jQuery);
(function(d, c) {
    d.effects.effect.highlight = function(a, m) {
        var k = d(this),
            l = ["backgroundImage", "backgroundColor", "opacity"],
            b = d.effects.setMode(k, a.mode || "show"),
            j = {
                backgroundColor: k.css("backgroundColor")
            };
        if (b === "hide") {
            j.opacity = 0
        }
        d.effects.save(k, l);
        k.show().css({
            backgroundImage: "none",
            backgroundColor: a.color || "#ffff99"
        }).animate(j, {
            queue: false,
            duration: a.duration,
            easing: a.easing,
            complete: function() {
                if (b === "hide") {
                    k.hide()
                }
                d.effects.restore(k, l);
                m()
            }
        })
    }
})(jQuery);
(function(d, c) {
    d.effects.effect.pulsate = function(B, x) {
        var z = d(this),
            u = d.effects.setMode(z, B.mode || "show"),
            b = u === "show",
            s = u === "hide",
            a = (b || u === "hide"),
            r = ((B.times || 5) * 2) + (a ? 1 : 0),
            y = B.duration / r,
            o = 0,
            v = z.queue(),
            A = v.length,
            w;
        if (b || !z.is(":visible")) {
            z.css("opacity", 0).show();
            o = 1
        }
        for (w = 1; w < r; w++) {
            z.animate({
                opacity: o
            }, y, B.easing);
            o = 1 - o
        }
        z.animate({
            opacity: o
        }, y, B.easing);
        z.queue(function() {
            if (s) {
                z.hide()
            }
            x()
        });
        if (A > 1) {
            v.splice.apply(v, [1, 0].concat(v.splice(A, r + 1)))
        }
        z.dequeue()
    }
})(jQuery);
(function(d, c) {
    d.effects.effect.puff = function(a, p) {
        var k = d(this),
            b = d.effects.setMode(k, a.mode || "hide"),
            m = b === "hide",
            l = parseInt(a.percent, 10) || 150,
            n = l / 100,
            o = {
                height: k.height(),
                width: k.width()
            };
        d.extend(a, {
            effect: "scale",
            queue: false,
            fade: true,
            mode: b,
            complete: p,
            percent: m ? l : 100,
            from: m ? o : {
                height: o.height * n,
                width: o.width * n
            }
        });
        k.effect(a)
    };
    d.effects.effect.scale = function(u, q) {
        var s = d(this),
            a = d.extend(true, {}, u),
            p = d.effects.setMode(s, u.mode || "effect"),
            o = parseInt(u.percent, 10) || (parseInt(u.percent, 10) === 0 ? 0 : (p === "hide" ? 0 : 100)),
            m = u.direction || "both",
            b = u.origin,
            r = {
                height: s.height(),
                width: s.width(),
                outerHeight: s.outerHeight(),
                outerWidth: s.outerWidth()
            },
            n = {
                y: m !== "horizontal" ? (o / 100) : 1,
                x: m !== "vertical" ? (o / 100) : 1
            };
        a.effect = "size";
        a.queue = false;
        a.complete = q;
        if (p !== "effect") {
            a.origin = b || ["middle", "center"];
            a.restore = true
        }
        a.from = u.from || (p === "show" ? {
            height: 0,
            width: 0
        } : r);
        a.to = {
            height: r.height * n.y,
            width: r.width * n.x,
            outerHeight: r.outerHeight * n.y,
            outerWidth: r.outerWidth * n.x
        };
        if (a.fade) {
            if (p === "show") {
                a.from.opacity = 0;
                a.to.opacity = 1
            }
            if (p === "hide") {
                a.from.opacity = 1;
                a.to.opacity = 0
            }
        }
        s.effect(a)
    };
    d.effects.effect.size = function(C, D) {
        var y, F, E, L = d(this),
            z = ["position", "top", "bottom", "left", "right", "width", "height", "overflow", "opacity"],
            A = ["position", "top", "bottom", "left", "right", "overflow", "opacity"],
            B = ["width", "height", "overflow"],
            H = ["fontSize"],
            w = ["borderTopWidth", "borderBottomWidth", "paddingTop", "paddingBottom"],
            K = ["borderLeftWidth", "borderRightWidth", "paddingLeft", "paddingRight"],
            G = d.effects.setMode(L, C.mode || "effect"),
            x = C.restore || G !== "effect",
            a = C.scale || "both",
            o = C.origin || ["middle", "center"],
            b = L.css("position"),
            J = x ? z : A,
            I = {
                height: 0,
                width: 0
            };
        if (G === "show") {
            L.show()
        }
        y = {
            height: L.height(),
            width: L.width(),
            outerHeight: L.outerHeight(),
            outerWidth: L.outerWidth()
        };
        if (C.mode === "toggle" && G === "show") {
            L.from = C.to || I;
            L.to = C.from || y
        } else {
            L.from = C.from || (G === "show" ? I : y);
            L.to = C.to || (G === "hide" ? I : y)
        }
        E = {
            from: {
                y: L.from.height / y.height,
                x: L.from.width / y.width
            },
            to: {
                y: L.to.height / y.height,
                x: L.to.width / y.width
            }
        };
        if (a === "box" || a === "both") {
            if (E.from.y !== E.to.y) {
                J = J.concat(w);
                L.from = d.effects.setTransition(L, w, E.from.y, L.from);
                L.to = d.effects.setTransition(L, w, E.to.y, L.to)
            }
            if (E.from.x !== E.to.x) {
                J = J.concat(K);
                L.from = d.effects.setTransition(L, K, E.from.x, L.from);
                L.to = d.effects.setTransition(L, K, E.to.x, L.to)
            }
        }
        if (a === "content" || a === "both") {
            if (E.from.y !== E.to.y) {
                J = J.concat(H).concat(B);
                L.from = d.effects.setTransition(L, H, E.from.y, L.from);
                L.to = d.effects.setTransition(L, H, E.to.y, L.to)
            }
        }
        d.effects.save(L, J);
        L.show();
        d.effects.createWrapper(L);
        L.css("overflow", "hidden").css(L.from);
        if (o) {
            F = d.effects.getBaseline(o, y);
            L.from.top = (y.outerHeight - L.outerHeight()) * F.y;
            L.from.left = (y.outerWidth - L.outerWidth()) * F.x;
            L.to.top = (y.outerHeight - L.to.outerHeight) * F.y;
            L.to.left = (y.outerWidth - L.to.outerWidth) * F.x
        }
        L.css(L.from);
        if (a === "content" || a === "both") {
            w = w.concat(["marginTop", "marginBottom"]).concat(H);
            K = K.concat(["marginLeft", "marginRight"]);
            B = z.concat(w).concat(K);
            L.find("*[width]").each(function() {
                var e = d(this),
                    f = {
                        height: e.height(),
                        width: e.width()
                    };
                if (x) {
                    d.effects.save(e, B)
                }
                e.from = {
                    height: f.height * E.from.y,
                    width: f.width * E.from.x
                };
                e.to = {
                    height: f.height * E.to.y,
                    width: f.width * E.to.x
                };
                if (E.from.y !== E.to.y) {
                    e.from = d.effects.setTransition(e, w, E.from.y, e.from);
                    e.to = d.effects.setTransition(e, w, E.to.y, e.to)
                }
                if (E.from.x !== E.to.x) {
                    e.from = d.effects.setTransition(e, K, E.from.x, e.from);
                    e.to = d.effects.setTransition(e, K, E.to.x, e.to)
                }
                e.css(e.from);
                e.animate(e.to, C.duration, C.easing, function() {
                    if (x) {
                        d.effects.restore(e, B)
                    }
                })
            })
        }
        L.animate(L.to, {
            queue: false,
            duration: C.duration,
            easing: C.easing,
            complete: function() {
                if (L.to.opacity === 0) {
                    L.css("opacity", L.from.opacity)
                }
                if (G === "hide") {
                    L.hide()
                }
                d.effects.restore(L, J);
                if (!x) {
                    if (b === "static") {
                        L.css({
                            position: "relative",
                            top: L.to.top,
                            left: L.to.left
                        })
                    } else {
                        d.each(["top", "left"], function(f, e) {
                            L.css(e, function(k, h) {
                                var j = parseInt(h, 10),
                                    g = f ? L.to.left : L.to.top;
                                if (h === "auto") {
                                    return g + "px"
                                }
                                return j + g + "px"
                            })
                        })
                    }
                }
                d.effects.removeWrapper(L);
                D()
            }
        })
    }
})(jQuery);
(function(d, c) {
    d.effects.effect.shake = function(C, D) {
        var K = d(this),
            J = ["position", "top", "bottom", "left", "right", "height", "width"],
            E = d.effects.setMode(K, C.mode || "effect"),
            b = C.direction || "left",
            I = C.distance || 20,
            F = C.times || 3,
            a = F * 2 + 1,
            y = Math.round(C.duration / a),
            G = (b === "up" || b === "down") ? "top" : "left",
            H = (b === "up" || b === "left"),
            o = {},
            w = {},
            x = {},
            z, B = K.queue(),
            A = B.length;
        d.effects.save(K, J);
        K.show();
        d.effects.createWrapper(K);
        o[G] = (H ? "-=" : "+=") + I;
        w[G] = (H ? "+=" : "-=") + I * 2;
        x[G] = (H ? "-=" : "+=") + I * 2;
        K.animate(o, y, C.easing);
        for (z = 1; z < F; z++) {
            K.animate(w, y, C.easing).animate(x, y, C.easing)
        }
        K.animate(w, y, C.easing).animate(o, y / 2, C.easing).queue(function() {
            if (E === "hide") {
                K.hide()
            }
            d.effects.restore(K, J);
            d.effects.removeWrapper(K);
            D()
        });
        if (A > 1) {
            B.splice.apply(B, [1, 0].concat(B.splice(A, a + 1)))
        }
        K.dequeue()
    }
})(jQuery);
(function(d, c) {
    d.effects.effect.slide = function(u, p) {
        var s = d(this),
            n = ["position", "top", "bottom", "left", "right", "width", "height"],
            o = d.effects.setMode(s, u.mode || "show"),
            a = o === "show",
            b = u.direction || "left",
            r = (b === "up" || b === "down") ? "top" : "left",
            v = (b === "up" || b === "left"),
            w, q = {};
        d.effects.save(s, n);
        s.show();
        w = u.distance || s[r === "top" ? "outerHeight" : "outerWidth"](true);
        d.effects.createWrapper(s).css({
            overflow: "hidden"
        });
        if (a) {
            s.css(r, v ? (isNaN(w) ? "-" + w : -w) : w)
        }
        q[r] = (a ? (v ? "+=" : "-=") : (v ? "-=" : "+=")) + w;
        s.animate(q, {
            queue: false,
            duration: u.duration,
            easing: u.easing,
            complete: function() {
                if (o === "hide") {
                    s.hide()
                }
                d.effects.restore(s, n);
                d.effects.removeWrapper(s);
                p()
            }
        })
    }
})(jQuery);
(function(d, c) {
    d.effects.effect.transfer = function(x, s) {
        var v = d(this),
            p = d(x.to),
            a = p.css("position") === "fixed",
            q = d("body"),
            o = a ? q.scrollTop() : 0,
            b = a ? q.scrollLeft() : 0,
            y = p.offset(),
            u = {
                top: y.top - o,
                left: y.left - b,
                height: p.innerHeight(),
                width: p.innerWidth()
            },
            r = v.offset(),
            w = d('<div class="ui-effects-transfer"></div>').appendTo(document.body).addClass(x.className).css({
                top: r.top - o,
                left: r.left - b,
                height: v.innerHeight(),
                width: v.innerWidth(),
                position: a ? "fixed" : "absolute"
            }).animate(u, x.duration, x.easing, function() {
                w.remove();
                s()
            })
    }
})(jQuery);
(function(d, f) {
    var e = false;
    d.widget("ui.menu", {
        version: "1.9.1",
        defaultElement: "<ul>",
        delay: 300,
        options: {
            icons: {
                submenu: "ui-icon-carat-1-e"
            },
            menus: "ul",
            position: {
                my: "left top",
                at: "right top"
            },
            role: "menu",
            blur: null,
            focus: null,
            select: null
        },
        _create: function() {
            this.activeMenu = this.element;
            this.element.uniqueId().addClass("ui-menu ui-widget ui-widget-content ui-corner-all").toggleClass("ui-menu-icons", !!this.element.find(".ui-icon").length).attr({
                role: this.options.role,
                tabIndex: 0
            }).bind("click" + this.eventNamespace, d.proxy(function(a) {
                if (this.options.disabled) {
                    a.preventDefault()
                }
            }, this));
            if (this.options.disabled) {
                this.element.addClass("ui-state-disabled").attr("aria-disabled", "true")
            }
            this._on({
                "mousedown .ui-menu-item > a": function(a) {
                    a.preventDefault()
                },
                "click .ui-state-disabled > a": function(a) {
                    a.preventDefault()
                },
                "click .ui-menu-item:has(a)": function(b) {
                    var a = d(b.target).closest(".ui-menu-item");
                    if (!e && a.not(".ui-state-disabled").length) {
                        e = true;
                        this.select(b);
                        if (a.has(".ui-menu").length) {
                            this.expand(b)
                        } else {
                            if (!this.element.is(":focus")) {
                                this.element.trigger("focus", [true]);
                                if (this.active && this.active.parents(".ui-menu").length === 1) {
                                    clearTimeout(this.timer)
                                }
                            }
                        }
                    }
                },
                "mouseenter .ui-menu-item": function(b) {
                    var a = d(b.currentTarget);
                    a.siblings().children(".ui-state-active").removeClass("ui-state-active");
                    this.focus(b, a)
                },
                mouseleave: "collapseAll",
                "mouseleave .ui-menu": "collapseAll",
                focus: function(a, c) {
                    var b = this.active || this.element.children(".ui-menu-item").eq(0);
                    if (!c) {
                        this.focus(a, b)
                    }
                },
                blur: function(a) {
                    this._delay(function() {
                        if (!d.contains(this.element[0], this.document[0].activeElement)) {
                            this.collapseAll(a)
                        }
                    })
                },
                keydown: "_keydown"
            });
            this.refresh();
            this._on(this.document, {
                click: function(a) {
                    if (!d(a.target).closest(".ui-menu").length) {
                        this.collapseAll(a)
                    }
                    e = false
                }
            })
        },
        _destroy: function() {
            this.element.removeAttr("aria-activedescendant").find(".ui-menu").andSelf().removeClass("ui-menu ui-widget ui-widget-content ui-corner-all ui-menu-icons").removeAttr("role").removeAttr("tabIndex").removeAttr("aria-labelledby").removeAttr("aria-expanded").removeAttr("aria-hidden").removeAttr("aria-disabled").removeUniqueId().show();
            this.element.find(".ui-menu-item").removeClass("ui-menu-item").removeAttr("role").removeAttr("aria-disabled").children("a").removeUniqueId().removeClass("ui-corner-all ui-state-hover").removeAttr("tabIndex").removeAttr("role").removeAttr("aria-haspopup").children().each(function() {
                var a = d(this);
                if (a.data("ui-menu-submenu-carat")) {
                    a.remove()
                }
            });
            this.element.find(".ui-menu-divider").removeClass("ui-menu-divider ui-widget-content")
        },
        _keydown: function(b) {
            var o, c, a, l, m, p = true;

            function n(g) {
                return g.replace(/[\-\[\]{}()*+?.,\\\^$|#\s]/g, "\\$&")
            }
            switch (b.keyCode) {
                case d.ui.keyCode.PAGE_UP:
                    this.previousPage(b);
                    break;
                case d.ui.keyCode.PAGE_DOWN:
                    this.nextPage(b);
                    break;
                case d.ui.keyCode.HOME:
                    this._move("first", "first", b);
                    break;
                case d.ui.keyCode.END:
                    this._move("last", "last", b);
                    break;
                case d.ui.keyCode.UP:
                    this.previous(b);
                    break;
                case d.ui.keyCode.DOWN:
                    this.next(b);
                    break;
                case d.ui.keyCode.LEFT:
                    this.collapse(b);
                    break;
                case d.ui.keyCode.RIGHT:
                    if (this.active && !this.active.is(".ui-state-disabled")) {
                        this.expand(b)
                    }
                    break;
                case d.ui.keyCode.ENTER:
                case d.ui.keyCode.SPACE:
                    this._activate(b);
                    break;
                case d.ui.keyCode.ESCAPE:
                    this.collapse(b);
                    break;
                default:
                    p = false;
                    c = this.previousFilter || "";
                    a = String.fromCharCode(b.keyCode);
                    l = false;
                    clearTimeout(this.filterTimer);
                    if (a === c) {
                        l = true
                    } else {
                        a = c + a
                    }
                    m = new RegExp("^" + n(a), "i");
                    o = this.activeMenu.children(".ui-menu-item").filter(function() {
                        return m.test(d(this).children("a").text())
                    });
                    o = l && o.index(this.active.next()) !== -1 ? this.active.nextAll(".ui-menu-item") : o;
                    if (!o.length) {
                        a = String.fromCharCode(b.keyCode);
                        m = new RegExp("^" + n(a), "i");
                        o = this.activeMenu.children(".ui-menu-item").filter(function() {
                            return m.test(d(this).children("a").text())
                        })
                    }
                    if (o.length) {
                        this.focus(b, o);
                        if (o.length > 1) {
                            this.previousFilter = a;
                            this.filterTimer = this._delay(function() {
                                delete this.previousFilter
                            }, 1000)
                        } else {
                            delete this.previousFilter
                        }
                    } else {
                        delete this.previousFilter
                    }
            }
            if (p) {
                b.preventDefault()
            }
        },
        _activate: function(a) {
            if (!this.active.is(".ui-state-disabled")) {
                if (this.active.children("a[aria-haspopup='true']").length) {
                    this.expand(a)
                } else {
                    this.select(a)
                }
            }
        },
        refresh: function() {
            var a, b = this.options.icons.submenu,
                c = this.element.find(this.options.menus + ":not(.ui-menu)").addClass("ui-menu ui-widget ui-widget-content ui-corner-all").hide().attr({
                    role: this.options.role,
                    "aria-hidden": "true",
                    "aria-expanded": "false"
                });
            a = c.add(this.element);
            a.children(":not(.ui-menu-item):has(a)").addClass("ui-menu-item").attr("role", "presentation").children("a").uniqueId().addClass("ui-corner-all").attr({
                tabIndex: -1,
                role: this._itemRole()
            });
            a.children(":not(.ui-menu-item)").each(function() {
                var h = d(this);
                if (!/[^\-—–\s]/.test(h.text())) {
                    h.addClass("ui-widget-content ui-menu-divider")
                }
            });
            a.children(".ui-state-disabled").attr("aria-disabled", "true");
            c.each(function() {
                var j = d(this),
                    k = j.prev("a"),
                    l = d("<span>").addClass("ui-menu-icon ui-icon " + b).data("ui-menu-submenu-carat", true);
                k.attr("aria-haspopup", "true").prepend(l);
                j.attr("aria-labelledby", k.attr("id"))
            });
            if (this.active && !d.contains(this.element[0], this.active[0])) {
                this.blur()
            }
        },
        _itemRole: function() {
            return {
                menu: "menuitem",
                listbox: "option"
            }[this.options.role]
        },
        focus: function(c, h) {
            var a, b;
            this.blur(c, c && c.type === "focus");
            this._scrollIntoView(h);
            this.active = h.first();
            b = this.active.children("a").addClass("ui-state-focus");
            if (this.options.role) {
                this.element.attr("aria-activedescendant", b.attr("id"))
            }
            this.active.parent().closest(".ui-menu-item").children("a:first").addClass("ui-state-active");
            if (c && c.type === "keydown") {
                this._close()
            } else {
                this.timer = this._delay(function() {
                    this._close()
                }, this.delay)
            }
            a = h.children(".ui-menu");
            if (a.length && (/^mouse/.test(c.type))) {
                this._startOpening(a)
            }
            this.activeMenu = h.parent();
            this._trigger("focus", c, {
                item: h
            })
        },
        _scrollIntoView: function(k) {
            var a, l, c, n, m, b;
            if (this._hasScroll()) {
                a = parseFloat(d.css(this.activeMenu[0], "borderTopWidth")) || 0;
                l = parseFloat(d.css(this.activeMenu[0], "paddingTop")) || 0;
                c = k.offset().top - this.activeMenu.offset().top - a - l;
                n = this.activeMenu.scrollTop();
                m = this.activeMenu.height();
                b = k.height();
                if (c < 0) {
                    this.activeMenu.scrollTop(n + c)
                } else {
                    if (c + b > m) {
                        this.activeMenu.scrollTop(n + c - m + b)
                    }
                }
            }
        },
        blur: function(a, b) {
            if (!b) {
                clearTimeout(this.timer)
            }
            if (!this.active) {
                return
            }
            this.active.children("a").removeClass("ui-state-focus");
            this.active = null;
            this._trigger("blur", a, {
                item: this.active
            })
        },
        _startOpening: function(a) {
            clearTimeout(this.timer);
            if (a.attr("aria-hidden") !== "true") {
                return
            }
            this.timer = this._delay(function() {
                this._close();
                this._open(a)
            }, this.delay)
        },
        _open: function(a) {
            var b = d.extend({ of: this.active
            }, this.options.position);
            clearTimeout(this.timer);
            this.element.find(".ui-menu").not(a.parents(".ui-menu")).hide().attr("aria-hidden", "true");
            a.show().removeAttr("aria-hidden").attr("aria-expanded", "true").position(b)
        },
        collapseAll: function(a, b) {
            clearTimeout(this.timer);
            this.timer = this._delay(function() {
                var c = b ? this.element : d(a && a.target).closest(this.element.find(".ui-menu"));
                if (!c.length) {
                    c = this.element
                }
                this._close(c);
                this.blur(a);
                this.activeMenu = c
            }, this.delay)
        },
        _close: function(a) {
            if (!a) {
                a = this.active ? this.active.parent() : this.element
            }
            a.find(".ui-menu").hide().attr("aria-hidden", "true").attr("aria-expanded", "false").end().find("a.ui-state-active").removeClass("ui-state-active")
        },
        collapse: function(a) {
            var b = this.active && this.active.parent().closest(".ui-menu-item", this.element);
            if (b && b.length) {
                this._close();
                this.focus(a, b)
            }
        },
        expand: function(a) {
            var b = this.active && this.active.children(".ui-menu ").children(".ui-menu-item").first();
            if (b && b.length) {
                this._open(b.parent());
                this._delay(function() {
                    this.focus(a, b)
                })
            }
        },
        next: function(a) {
            this._move("next", "first", a)
        },
        previous: function(a) {
            this._move("prev", "last", a)
        },
        isFirstItem: function() {
            return this.active && !this.active.prevAll(".ui-menu-item").length
        },
        isLastItem: function() {
            return this.active && !this.active.nextAll(".ui-menu-item").length
        },
        _move: function(a, c, b) {
            var h;
            if (this.active) {
                if (a === "first" || a === "last") {
                    h = this.active[a === "first" ? "prevAll" : "nextAll"](".ui-menu-item").eq(-1)
                } else {
                    h = this.active[a + "All"](".ui-menu-item").eq(0)
                }
            }
            if (!h || !h.length || !this.active) {
                h = this.activeMenu.children(".ui-menu-item")[c]()
            }
            this.focus(b, h)
        },
        nextPage: function(b) {
            var c, a, h;
            if (!this.active) {
                this.next(b);
                return
            }
            if (this.isLastItem()) {
                return
            }
            if (this._hasScroll()) {
                a = this.active.offset().top;
                h = this.element.height();
                this.active.nextAll(".ui-menu-item").each(function() {
                    c = d(this);
                    return c.offset().top - a - h < 0
                });
                this.focus(b, c)
            } else {
                this.focus(b, this.activeMenu.children(".ui-menu-item")[!this.active ? "first" : "last"]())
            }
        },
        previousPage: function(b) {
            var c, a, h;
            if (!this.active) {
                this.next(b);
                return
            }
            if (this.isFirstItem()) {
                return
            }
            if (this._hasScroll()) {
                a = this.active.offset().top;
                h = this.element.height();
                this.active.prevAll(".ui-menu-item").each(function() {
                    c = d(this);
                    return c.offset().top - a + h > 0
                });
                this.focus(b, c)
            } else {
                this.focus(b, this.activeMenu.children(".ui-menu-item").first())
            }
        },
        _hasScroll: function() {
            return this.element.outerHeight() < this.element.prop("scrollHeight")
        },
        select: function(b) {
            this.active = this.active || d(b.target).closest(".ui-menu-item");
            var a = {
                item: this.active
            };
            if (!this.active.has(".ui-menu").length) {
                this.collapseAll(b, true)
            }
            this._trigger("select", b, a)
        }
    })
}(jQuery));
(function(y, A) {
    y.ui = y.ui || {};
    var u, s = Math.max,
        o = Math.abs,
        q = Math.round,
        z = /left|center|right/,
        w = /top|center|bottom/,
        C = /[\+\-]\d+%?/,
        r = /^\w+/,
        B = /%$/,
        x = y.fn.position;

    function p(a, b, c) {
        return [parseInt(a[0], 10) * (B.test(a[0]) ? b / 100 : 1), parseInt(a[1], 10) * (B.test(a[1]) ? c / 100 : 1)]
    }

    function v(b, a) {
        return parseInt(y.css(b, a), 10) || 0
    }
    y.position = {
        scrollbarWidth: function() {
            if (u !== A) {
                return u
            }
            var c, d, a = y("<div style='display:block;width:50px;height:50px;overflow:hidden;'><div style='height:100px;width:auto;'></div></div>"),
                b = a.children()[0];
            y("body").append(a);
            c = b.offsetWidth;
            a.css("overflow", "scroll");
            d = b.offsetWidth;
            if (c === d) {
                d = a[0].clientWidth
            }
            a.remove();
            return (u = c - d)
        },
        getScrollInfo: function(a) {
            var b = a.isWindow ? "" : a.element.css("overflow-x"),
                c = a.isWindow ? "" : a.element.css("overflow-y"),
                d = b === "scroll" || (b === "auto" && a.width < a.element[0].scrollWidth),
                e = c === "scroll" || (c === "auto" && a.height < a.element[0].scrollHeight);
            return {
                width: d ? y.position.scrollbarWidth() : 0,
                height: e ? y.position.scrollbarWidth() : 0
            }
        },
        getWithinInfo: function(b) {
            var a = y(b || window),
                c = y.isWindow(a[0]);
            return {
                element: a,
                isWindow: c,
                offset: a.offset() || {
                    left: 0,
                    top: 0
                },
                scrollLeft: a.scrollLeft(),
                scrollTop: a.scrollTop(),
                width: c ? a.width() : a.outerWidth(),
                height: c ? a.height() : a.outerHeight()
            }
        }
    };
    y.fn.position = function(f) {
        if (!f || !f.of) {
            return x.apply(this, arguments)
        }
        f = y.extend({}, f);
        var e, j, m, g, a, k = y(f.of),
            b = y.position.getWithinInfo(f.within),
            d = y.position.getScrollInfo(b),
            l = k[0],
            h = (f.collision || "flip").split(" "),
            c = {};
        if (l.nodeType === 9) {
            j = k.width();
            m = k.height();
            g = {
                top: 0,
                left: 0
            }
        } else {
            if (y.isWindow(l)) {
                j = k.width();
                m = k.height();
                g = {
                    top: k.scrollTop(),
                    left: k.scrollLeft()
                }
            } else {
                if (l.preventDefault) {
                    f.at = "left top";
                    j = m = 0;
                    g = {
                        top: l.pageY,
                        left: l.pageX
                    }
                } else {
                    j = k.outerWidth();
                    m = k.outerHeight();
                    g = k.offset()
                }
            }
        }
        a = y.extend({}, g);
        y.each(["my", "at"], function() {
            var D = (f[this] || "").split(" "),
                E, n;
            if (D.length === 1) {
                D = z.test(D[0]) ? D.concat(["center"]) : w.test(D[0]) ? ["center"].concat(D) : ["center", "center"]
            }
            D[0] = z.test(D[0]) ? D[0] : "center";
            D[1] = w.test(D[1]) ? D[1] : "center";
            E = C.exec(D[0]);
            n = C.exec(D[1]);
            c[this] = [E ? E[0] : 0, n ? n[0] : 0];
            f[this] = [r.exec(D[0])[0], r.exec(D[1])[0]]
        });
        if (h.length === 1) {
            h[1] = h[0]
        }
        if (f.at[0] === "right") {
            a.left += j
        } else {
            if (f.at[0] === "center") {
                a.left += j / 2
            }
        }
        if (f.at[1] === "bottom") {
            a.top += m
        } else {
            if (f.at[1] === "center") {
                a.top += m / 2
            }
        }
        e = p(c.at, j, m);
        a.left += e[0];
        a.top += e[1];
        return this.each(function() {
            var M, O, n = y(this),
                T = n.outerWidth(),
                L = n.outerHeight(),
                U = v(this, "marginLeft"),
                N = v(this, "marginTop"),
                P = T + U + v(this, "marginRight") + d.width,
                Q = L + N + v(this, "marginBottom") + d.height,
                S = y.extend({}, a),
                R = p(c.my, n.outerWidth(), n.outerHeight());
            if (f.my[0] === "right") {
                S.left -= T
            } else {
                if (f.my[0] === "center") {
                    S.left -= T / 2
                }
            }
            if (f.my[1] === "bottom") {
                S.top -= L
            } else {
                if (f.my[1] === "center") {
                    S.top -= L / 2
                }
            }
            S.left += R[0];
            S.top += R[1];
            if (!y.support.offsetFractions) {
                S.left = q(S.left);
                S.top = q(S.top)
            }
            M = {
                marginLeft: U,
                marginTop: N
            };
            y.each(["left", "top"], function(E, D) {
                if (y.ui.position[h[E]]) {
                    y.ui.position[h[E]][D](S, {
                        targetWidth: j,
                        targetHeight: m,
                        elemWidth: T,
                        elemHeight: L,
                        collisionPosition: M,
                        collisionWidth: P,
                        collisionHeight: Q,
                        offset: [e[0] + R[0], e[1] + R[1]],
                        my: f.my,
                        at: f.at,
                        within: b,
                        elem: n
                    })
                }
            });
            if (y.fn.bgiframe) {
                n.bgiframe()
            }
            if (f.using) {
                O = function(G) {
                    var E = g.left - S.left,
                        H = E + j - T,
                        F = g.top - S.top,
                        I = F + m - L,
                        D = {
                            target: {
                                element: k,
                                left: g.left,
                                top: g.top,
                                width: j,
                                height: m
                            },
                            element: {
                                element: n,
                                left: S.left,
                                top: S.top,
                                width: T,
                                height: L
                            },
                            horizontal: H < 0 ? "left" : E > 0 ? "right" : "center",
                            vertical: I < 0 ? "top" : F > 0 ? "bottom" : "middle"
                        };
                    if (j < T && o(E + H) < j) {
                        D.horizontal = "center"
                    }
                    if (m < L && o(F + I) < m) {
                        D.vertical = "middle"
                    }
                    if (s(o(E), o(H)) > s(o(F), o(I))) {
                        D.important = "horizontal"
                    } else {
                        D.important = "vertical"
                    }
                    f.using.call(this, G, D)
                }
            }
            n.offset(y.extend(S, {
                using: O
            }))
        })
    };
    y.ui.position = {
        fit: {
            left: function(j, a) {
                var b = a.within,
                    g = b.isWindow ? b.scrollLeft : b.offset.left,
                    e = b.width,
                    h = j.left - a.collisionPosition.marginLeft,
                    f = g - h,
                    c = h + a.collisionWidth - e - g,
                    d;
                if (a.collisionWidth > e) {
                    if (f > 0 && c <= 0) {
                        d = j.left + f + a.collisionWidth - e - g;
                        j.left += f - d
                    } else {
                        if (c > 0 && f <= 0) {
                            j.left = g
                        } else {
                            if (f > c) {
                                j.left = g + e - a.collisionWidth
                            } else {
                                j.left = g
                            }
                        }
                    }
                } else {
                    if (f > 0) {
                        j.left += f
                    } else {
                        if (c > 0) {
                            j.left -= c
                        } else {
                            j.left = s(j.left - h, j.left)
                        }
                    }
                }
            },
            top: function(a, b) {
                var c = b.within,
                    f = c.isWindow ? c.scrollTop : c.offset.top,
                    e = b.within.height,
                    h = a.top - b.collisionPosition.marginTop,
                    g = f - h,
                    j = h + b.collisionHeight - e - f,
                    d;
                if (b.collisionHeight > e) {
                    if (g > 0 && j <= 0) {
                        d = a.top + g + b.collisionHeight - e - f;
                        a.top += g - d
                    } else {
                        if (j > 0 && g <= 0) {
                            a.top = f
                        } else {
                            if (g > j) {
                                a.top = f + e - b.collisionHeight
                            } else {
                                a.top = f
                            }
                        }
                    }
                } else {
                    if (g > 0) {
                        a.top += g
                    } else {
                        if (j > 0) {
                            a.top -= j
                        } else {
                            a.top = s(a.top - h, a.top)
                        }
                    }
                }
            }
        },
        flip: {
            left: function(m, n) {
                var D = n.within,
                    h = D.offset.left + D.scrollLeft,
                    d = D.width,
                    b = D.isWindow ? D.scrollLeft : D.offset.left,
                    l = m.left - n.collisionPosition.marginLeft,
                    g = l - b,
                    c = l + n.collisionWidth - d - b,
                    j = n.my[0] === "left" ? -n.elemWidth : n.my[0] === "right" ? n.elemWidth : 0,
                    f = n.at[0] === "left" ? n.targetWidth : n.at[0] === "right" ? -n.targetWidth : 0,
                    a = -2 * n.offset[0],
                    e, k;
                if (g < 0) {
                    e = m.left + j + f + a + n.collisionWidth - d - h;
                    if (e < 0 || e < o(g)) {
                        m.left += j + f + a
                    }
                } else {
                    if (c > 0) {
                        k = m.left - n.collisionPosition.marginLeft + j + f + a - b;
                        if (k > 0 || o(k) < c) {
                            m.left += j + f + a
                        }
                    }
                }
            },
            top: function(D, E) {
                var a = E.within,
                    g = a.offset.top + a.scrollTop,
                    e = a.height,
                    f = a.isWindow ? a.scrollTop : a.offset.top,
                    m = D.top - E.collisionPosition.marginTop,
                    k = m - f,
                    n = m + E.collisionHeight - e - f,
                    j = E.my[1] === "top",
                    l = j ? -E.elemHeight : E.my[1] === "bottom" ? E.elemHeight : 0,
                    c = E.at[1] === "top" ? E.targetHeight : E.at[1] === "bottom" ? -E.targetHeight : 0,
                    b = -2 * E.offset[1],
                    h, d;
                if (k < 0) {
                    d = D.top + l + c + b + E.collisionHeight - e - g;
                    if ((D.top + l + c + b) > k && (d < 0 || d < o(k))) {
                        D.top += l + c + b
                    }
                } else {
                    if (n > 0) {
                        h = D.top - E.collisionPosition.marginTop + l + c + b - f;
                        if ((D.top + l + c + b) > n && (h > 0 || o(h) < n)) {
                            D.top += l + c + b
                        }
                    }
                }
            }
        },
        flipfit: {
            left: function() {
                y.ui.position.flip.left.apply(this, arguments);
                y.ui.position.fit.left.apply(this, arguments)
            },
            top: function() {
                y.ui.position.flip.top.apply(this, arguments);
                y.ui.position.fit.top.apply(this, arguments)
            }
        }
    };
    (function() {
        var c, a, f, d, e, g = document.getElementsByTagName("body")[0],
            b = document.createElement("div");
        c = document.createElement(g ? "div" : "body");
        f = {
            visibility: "hidden",
            width: 0,
            height: 0,
            border: 0,
            margin: 0,
            background: "none"
        };
        if (g) {
            y.extend(f, {
                position: "absolute",
                left: "-1000px",
                top: "-1000px"
            })
        }
        for (e in f) {
            c.style[e] = f[e]
        }
        c.appendChild(b);
        a = g || document.documentElement;
        a.insertBefore(c, a.firstChild);
        b.style.cssText = "position: absolute; left: 10.7432222px;";
        d = y(b).offset().left;
        y.support.offsetFractions = d > 10 && d < 11;
        c.innerHTML = "";
        a.removeChild(c)
    })();
    if (y.uiBackCompat !== false) {
        (function(a) {
            var b = a.fn.position;
            a.fn.position = function(d) {
                if (!d || !d.offset) {
                    return b.call(this, d)
                }
                var c = d.offset.split(" "),
                    e = d.at.split(" ");
                if (c.length === 1) {
                    c[1] = c[0]
                }
                if (/^\d/.test(c[0])) {
                    c[0] = "+" + c[0]
                }
                if (/^\d/.test(c[1])) {
                    c[1] = "+" + c[1]
                }
                if (e.length === 1) {
                    if (/left|center|right/.test(e[0])) {
                        e[1] = "center"
                    } else {
                        e[1] = e[0];
                        e[0] = "center"
                    }
                }
                return b.call(this, a.extend(d, {
                    at: e[0] + c[0] + " " + e[1] + c[1],
                    offset: A
                }))
            }
        }(jQuery))
    }
}(jQuery));
(function(d, c) {
    d.widget("ui.progressbar", {
        version: "1.9.1",
        options: {
            value: 0,
            max: 100
        },
        min: 0,
        _create: function() {
            this.element.addClass("ui-progressbar ui-widget ui-widget-content ui-corner-all").attr({
                role: "progressbar",
                "aria-valuemin": this.min,
                "aria-valuemax": this.options.max,
                "aria-valuenow": this._value()
            });
            this.valueDiv = d("<div class='ui-progressbar-value ui-widget-header ui-corner-left'></div>").appendTo(this.element);
            this.oldValue = this._value();
            this._refreshValue()
        },
        _destroy: function() {
            this.element.removeClass("ui-progressbar ui-widget ui-widget-content ui-corner-all").removeAttr("role").removeAttr("aria-valuemin").removeAttr("aria-valuemax").removeAttr("aria-valuenow");
            this.valueDiv.remove()
        },
        value: function(a) {
            if (a === c) {
                return this._value()
            }
            this._setOption("value", a);
            return this
        },
        _setOption: function(b, a) {
            if (b === "value") {
                this.options.value = a;
                this._refreshValue();
                if (this._value() === this.options.max) {
                    this._trigger("complete")
                }
            }
            this._super(b, a)
        },
        _value: function() {
            var a = this.options.value;
            if (typeof a !== "number") {
                a = 0
            }
            return Math.min(this.options.max, Math.max(this.min, a))
        },
        _percentage: function() {
            return 100 * this._value() / this.options.max
        },
        _refreshValue: function() {
            var a = this.value(),
                b = this._percentage();
            if (this.oldValue !== a) {
                this.oldValue = a;
                this._trigger("change")
            }
            this.valueDiv.toggle(a > this.min).toggleClass("ui-corner-right", a === this.options.max).width(b.toFixed(0) + "%");
            this.element.attr("aria-valuenow", a)
        }
    })
})(jQuery);
(function(d, f) {
    var e = 5;
    d.widget("ui.slider", d.ui.mouse, {
        version: "1.9.1",
        widgetEventPrefix: "slide",
        options: {
            animate: false,
            distance: 0,
            max: 100,
            min: 0,
            orientation: "horizontal",
            range: false,
            step: 1,
            value: 0,
            values: null
        },
        _create: function() {
            var k, m, a = this.options,
                b = this.element.find(".ui-slider-handle").addClass("ui-state-default ui-corner-all"),
                c = "<a class='ui-slider-handle ui-state-default ui-corner-all' href='#'></a>",
                l = [];
            this._keySliding = false;
            this._mouseSliding = false;
            this._animateOff = true;
            this._handleIndex = null;
            this._detectOrientation();
            this._mouseInit();
            this.element.addClass("ui-slider ui-slider-" + this.orientation + " ui-widget ui-widget-content ui-corner-all" + (a.disabled ? " ui-slider-disabled ui-disabled" : ""));
            this.range = d([]);
            if (a.range) {
                if (a.range === true) {
                    if (!a.values) {
                        a.values = [this._valueMin(), this._valueMin()]
                    }
                    if (a.values.length && a.values.length !== 2) {
                        a.values = [a.values[0], a.values[0]]
                    }
                }
                this.range = d("<div></div>").appendTo(this.element).addClass("ui-slider-range ui-widget-header" + ((a.range === "min" || a.range === "max") ? " ui-slider-range-" + a.range : ""))
            }
            m = (a.values && a.values.length) || 1;
            for (k = b.length; k < m; k++) {
                l.push(c)
            }
            this.handles = b.add(d(l.join("")).appendTo(this.element));
            this.handle = this.handles.eq(0);
            this.handles.add(this.range).filter("a").click(function(g) {
                g.preventDefault()
            }).mouseenter(function() {
                if (!a.disabled) {
                    d(this).addClass("ui-state-hover")
                }
            }).mouseleave(function() {
                d(this).removeClass("ui-state-hover")
            }).focus(function() {
                if (!a.disabled) {
                    d(".ui-slider .ui-state-focus").removeClass("ui-state-focus");
                    d(this).addClass("ui-state-focus")
                } else {
                    d(this).blur()
                }
            }).blur(function() {
                d(this).removeClass("ui-state-focus")
            });
            this.handles.each(function(g) {
                d(this).data("ui-slider-handle-index", g)
            });
            this._on(this.handles, {
                keydown: function(r) {
                    var q, h, j, g, p = d(r.target).data("ui-slider-handle-index");
                    switch (r.keyCode) {
                        case d.ui.keyCode.HOME:
                        case d.ui.keyCode.END:
                        case d.ui.keyCode.PAGE_UP:
                        case d.ui.keyCode.PAGE_DOWN:
                        case d.ui.keyCode.UP:
                        case d.ui.keyCode.RIGHT:
                        case d.ui.keyCode.DOWN:
                        case d.ui.keyCode.LEFT:
                            r.preventDefault();
                            if (!this._keySliding) {
                                this._keySliding = true;
                                d(r.target).addClass("ui-state-active");
                                q = this._start(r, p);
                                if (q === false) {
                                    return
                                }
                            }
                            break
                    }
                    g = this.options.step;
                    if (this.options.values && this.options.values.length) {
                        h = j = this.values(p)
                    } else {
                        h = j = this.value()
                    }
                    switch (r.keyCode) {
                        case d.ui.keyCode.HOME:
                            j = this._valueMin();
                            break;
                        case d.ui.keyCode.END:
                            j = this._valueMax();
                            break;
                        case d.ui.keyCode.PAGE_UP:
                            j = this._trimAlignValue(h + ((this._valueMax() - this._valueMin()) / e));
                            break;
                        case d.ui.keyCode.PAGE_DOWN:
                            j = this._trimAlignValue(h - ((this._valueMax() - this._valueMin()) / e));
                            break;
                        case d.ui.keyCode.UP:
                        case d.ui.keyCode.RIGHT:
                            if (h === this._valueMax()) {
                                return
                            }
                            j = this._trimAlignValue(h + g);
                            break;
                        case d.ui.keyCode.DOWN:
                        case d.ui.keyCode.LEFT:
                            if (h === this._valueMin()) {
                                return
                            }
                            j = this._trimAlignValue(h - g);
                            break
                    }
                    this._slide(r, p, j)
                },
                keyup: function(g) {
                    var h = d(g.target).data("ui-slider-handle-index");
                    if (this._keySliding) {
                        this._keySliding = false;
                        this._stop(g, h);
                        this._change(g, h);
                        d(g.target).removeClass("ui-state-active")
                    }
                }
            });
            this._refreshValue();
            this._animateOff = false
        },
        _destroy: function() {
            this.handles.remove();
            this.range.remove();
            this.element.removeClass("ui-slider ui-slider-horizontal ui-slider-vertical ui-slider-disabled ui-widget ui-widget-content ui-corner-all");
            this._mouseDestroy()
        },
        _mouseCapture: function(u) {
            var p, b, v, r, c, a, q, w, o = this,
                s = this.options;
            if (s.disabled) {
                return false
            }
            this.elementSize = {
                width: this.element.outerWidth(),
                height: this.element.outerHeight()
            };
            this.elementOffset = this.element.offset();
            p = {
                x: u.pageX,
                y: u.pageY
            };
            b = this._normValueFromMouse(p);
            v = this._valueMax() - this._valueMin() + 1;
            this.handles.each(function(h) {
                var g = Math.abs(b - o.values(h));
                if (v > g) {
                    v = g;
                    r = d(this);
                    c = h
                }
            });
            if (s.range === true && this.values(1) === s.min) {
                c += 1;
                r = d(this.handles[c])
            }
            a = this._start(u, c);
            if (a === false) {
                return false
            }
            this._mouseSliding = true;
            this._handleIndex = c;
            r.addClass("ui-state-active").focus();
            q = r.offset();
            w = !d(u.target).parents().andSelf().is(".ui-slider-handle");
            this._clickOffset = w ? {
                left: 0,
                top: 0
            } : {
                left: u.pageX - q.left - (r.width() / 2),
                top: u.pageY - q.top - (r.height() / 2) - (parseInt(r.css("borderTopWidth"), 10) || 0) - (parseInt(r.css("borderBottomWidth"), 10) || 0) + (parseInt(r.css("marginTop"), 10) || 0)
            };
            if (!this.handles.hasClass("ui-state-hover")) {
                this._slide(u, c, b)
            }
            this._animateOff = true;
            return true
        },
        _mouseStart: function() {
            return true
        },
        _mouseDrag: function(a) {
            var c = {
                    x: a.pageX,
                    y: a.pageY
                },
                b = this._normValueFromMouse(c);
            this._slide(a, this._handleIndex, b);
            return false
        },
        _mouseStop: function(a) {
            this.handles.removeClass("ui-state-active");
            this._mouseSliding = false;
            this._stop(a, this._handleIndex);
            this._change(a, this._handleIndex);
            this._handleIndex = null;
            this._clickOffset = null;
            this._animateOff = false;
            return false
        },
        _detectOrientation: function() {
            this.orientation = (this.options.orientation === "vertical") ? "vertical" : "horizontal"
        },
        _normValueFromMouse: function(k) {
            var l, b, c, j, a;
            if (this.orientation === "horizontal") {
                l = this.elementSize.width;
                b = k.x - this.elementOffset.left - (this._clickOffset ? this._clickOffset.left : 0)
            } else {
                l = this.elementSize.height;
                b = k.y - this.elementOffset.top - (this._clickOffset ? this._clickOffset.top : 0)
            }
            c = (b / l);
            if (c > 1) {
                c = 1
            }
            if (c < 0) {
                c = 0
            }
            if (this.orientation === "vertical") {
                c = 1 - c
            }
            j = this._valueMax() - this._valueMin();
            a = this._valueMin() + c * j;
            return this._trimAlignValue(a)
        },
        _start: function(a, b) {
            var c = {
                handle: this.handles[b],
                value: this.value()
            };
            if (this.options.values && this.options.values.length) {
                c.value = this.values(b);
                c.values = this.values()
            }
            return this._trigger("start", a, c)
        },
        _slide: function(b, c, j) {
            var l, k, a;
            if (this.options.values && this.options.values.length) {
                l = this.values(c ? 0 : 1);
                if ((this.options.values.length === 2 && this.options.range === true) && ((c === 0 && j > l) || (c === 1 && j < l))) {
                    j = l
                }
                if (j !== this.values(c)) {
                    k = this.values();
                    k[c] = j;
                    a = this._trigger("slide", b, {
                        handle: this.handles[c],
                        value: j,
                        values: k
                    });
                    l = this.values(c ? 0 : 1);
                    if (a !== false) {
                        this.values(c, j, true)
                    }
                }
            } else {
                if (j !== this.value()) {
                    a = this._trigger("slide", b, {
                        handle: this.handles[c],
                        value: j
                    });
                    if (a !== false) {
                        this.value(j)
                    }
                }
            }
        },
        _stop: function(a, b) {
            var c = {
                handle: this.handles[b],
                value: this.value()
            };
            if (this.options.values && this.options.values.length) {
                c.value = this.values(b);
                c.values = this.values()
            }
            this._trigger("stop", a, c)
        },
        _change: function(a, b) {
            if (!this._keySliding && !this._mouseSliding) {
                var c = {
                    handle: this.handles[b],
                    value: this.value()
                };
                if (this.options.values && this.options.values.length) {
                    c.value = this.values(b);
                    c.values = this.values()
                }
                this._trigger("change", a, c)
            }
        },
        value: function(a) {
            if (arguments.length) {
                this.options.value = this._trimAlignValue(a);
                this._refreshValue();
                this._change(null, 0);
                return
            }
            return this._value()
        },
        values: function(j, a) {
            var b, k, c;
            if (arguments.length > 1) {
                this.options.values[j] = this._trimAlignValue(a);
                this._refreshValue();
                this._change(null, j);
                return
            }
            if (arguments.length) {
                if (d.isArray(arguments[0])) {
                    b = this.options.values;
                    k = arguments[0];
                    for (c = 0; c < b.length; c += 1) {
                        b[c] = this._trimAlignValue(k[c]);
                        this._change(null, c)
                    }
                    this._refreshValue()
                } else {
                    if (this.options.values && this.options.values.length) {
                        return this._values(j)
                    } else {
                        return this.value()
                    }
                }
            } else {
                return this._values()
            }
        },
        _setOption: function(c, b) {
            var h, a = 0;
            if (d.isArray(this.options.values)) {
                a = this.options.values.length
            }
            d.Widget.prototype._setOption.apply(this, arguments);
            switch (c) {
                case "disabled":
                    if (b) {
                        this.handles.filter(".ui-state-focus").blur();
                        this.handles.removeClass("ui-state-hover");
                        this.handles.prop("disabled", true);
                        this.element.addClass("ui-disabled")
                    } else {
                        this.handles.prop("disabled", false);
                        this.element.removeClass("ui-disabled")
                    }
                    break;
                case "orientation":
                    this._detectOrientation();
                    this.element.removeClass("ui-slider-horizontal ui-slider-vertical").addClass("ui-slider-" + this.orientation);
                    this._refreshValue();
                    break;
                case "value":
                    this._animateOff = true;
                    this._refreshValue();
                    this._change(null, 0);
                    this._animateOff = false;
                    break;
                case "values":
                    this._animateOff = true;
                    this._refreshValue();
                    for (h = 0; h < a; h += 1) {
                        this._change(null, h)
                    }
                    this._animateOff = false;
                    break;
                case "min":
                case "max":
                    this._animateOff = true;
                    this._refreshValue();
                    this._animateOff = false;
                    break
            }
        },
        _value: function() {
            var a = this.options.value;
            a = this._trimAlignValue(a);
            return a
        },
        _values: function(h) {
            var a, b, c;
            if (arguments.length) {
                a = this.options.values[h];
                a = this._trimAlignValue(a);
                return a
            } else {
                b = this.options.values.slice();
                for (c = 0; c < b.length; c += 1) {
                    b[c] = this._trimAlignValue(b[c])
                }
                return b
            }
        },
        _trimAlignValue: function(a) {
            if (a <= this._valueMin()) {
                return this._valueMin()
            }
            if (a >= this._valueMax()) {
                return this._valueMax()
            }
            var h = (this.options.step > 0) ? this.options.step : 1,
                b = (a - this._valueMin()) % h,
                c = a - b;
            if (Math.abs(b) * 2 >= h) {
                c += (b > 0) ? h : (-h)
            }
            return parseFloat(c.toFixed(5))
        },
        _valueMin: function() {
            return this.options.min
        },
        _valueMax: function() {
            return this.options.max
        },
        _refreshValue: function() {
            var o, p, b, n, a, q = this.options.range,
                r = this.options,
                c = this,
                s = (!this._animateOff) ? r.animate : false,
                u = {};
            if (this.options.values && this.options.values.length) {
                this.handles.each(function(g) {
                    p = (c.values(g) - c._valueMin()) / (c._valueMax() - c._valueMin()) * 100;
                    u[c.orientation === "horizontal" ? "left" : "bottom"] = p + "%";
                    d(this).stop(1, 1)[s ? "animate" : "css"](u, r.animate);
                    if (c.options.range === true) {
                        if (c.orientation === "horizontal") {
                            if (g === 0) {
                                c.range.stop(1, 1)[s ? "animate" : "css"]({
                                    left: p + "%"
                                }, r.animate)
                            }
                            if (g === 1) {
                                c.range[s ? "animate" : "css"]({
                                    width: (p - o) + "%"
                                }, {
                                    queue: false,
                                    duration: r.animate
                                })
                            }
                        } else {
                            if (g === 0) {
                                c.range.stop(1, 1)[s ? "animate" : "css"]({
                                    bottom: (p) + "%"
                                }, r.animate)
                            }
                            if (g === 1) {
                                c.range[s ? "animate" : "css"]({
                                    height: (p - o) + "%"
                                }, {
                                    queue: false,
                                    duration: r.animate
                                })
                            }
                        }
                    }
                    o = p
                })
            } else {
                b = this.value();
                n = this._valueMin();
                a = this._valueMax();
                p = (a !== n) ? (b - n) / (a - n) * 100 : 0;
                u[this.orientation === "horizontal" ? "left" : "bottom"] = p + "%";
                this.handle.stop(1, 1)[s ? "animate" : "css"](u, r.animate);
                if (q === "min" && this.orientation === "horizontal") {
                    this.range.stop(1, 1)[s ? "animate" : "css"]({
                        width: p + "%"
                    }, r.animate)
                }
                if (q === "max" && this.orientation === "horizontal") {
                    this.range[s ? "animate" : "css"]({
                        width: (100 - p) + "%"
                    }, {
                        queue: false,
                        duration: r.animate
                    })
                }
                if (q === "min" && this.orientation === "vertical") {
                    this.range.stop(1, 1)[s ? "animate" : "css"]({
                        height: p + "%"
                    }, r.animate)
                }
                if (q === "max" && this.orientation === "vertical") {
                    this.range[s ? "animate" : "css"]({
                        height: (100 - p) + "%"
                    }, {
                        queue: false,
                        duration: r.animate
                    })
                }
            }
        }
    })
}(jQuery));
(function(c) {
    function d(a) {
        return function() {
            var b = this.element.val();
            a.apply(this, arguments);
            this._refresh();
            if (b !== this.element.val()) {
                this._trigger("change")
            }
        }
    }
    c.widget("ui.spinner", {
        version: "1.9.1",
        defaultElement: "<input>",
        widgetEventPrefix: "spin",
        options: {
            culture: null,
            icons: {
                down: "ui-icon-triangle-1-s",
                up: "ui-icon-triangle-1-n"
            },
            incremental: true,
            max: null,
            min: null,
            numberFormat: null,
            page: 10,
            step: 1,
            change: null,
            spin: null,
            start: null,
            stop: null
        },
        _create: function() {
            this._setOption("max", this.options.max);
            this._setOption("min", this.options.min);
            this._setOption("step", this.options.step);
            this._value(this.element.val(), true);
            this._draw();
            this._on(this._events);
            this._refresh();
            this._on(this.window, {
                beforeunload: function() {
                    this.element.removeAttr("autocomplete")
                }
            })
        },
        _getCreateOptions: function() {
            var b = {},
                a = this.element;
            c.each(["min", "max", "step"], function(k, j) {
                var h = a.attr(j);
                if (h !==  && h.length) {
                    b[j] = h
                }
            });
            return b
        },
        _events: {
            keydown: function(a) {
                if (this._start(a) && this._keydown(a)) {
                    a.preventDefault()
                }
            },
            keyup: "_stop",
            focus: function() {
                this.previous = this.element.val()
            },
            blur: function(a) {
                if (this.cancelBlur) {
                    delete this.cancelBlur;
                    return
                }
                this._refresh();
                if (this.previous !== this.element.val()) {
                    this._trigger("change", a)
                }
            },
            mousewheel: function(b, a) {
                if (!a) {
                    return
                }
                if (!this.spinning && !this._start(b)) {
                    return false
                }
                this._spin((a > 0 ? 1 : -1) * this.options.step, b);
                clearTimeout(this.mousewheelTimer);
                this.mousewheelTimer = this._delay(function() {
                    if (this.spinning) {
                        this._stop(b)
                    }
                }, 100);
                b.preventDefault()
            },
            "mousedown .ui-spinner-button": function(b) {
                var f;
                f = this.element[0] === this.document[0].activeElement ? this.previous : this.element.val();

                function a() {
                    var e = this.element[0] === this.document[0].activeElement;
                    if (!e) {
                        this.element.focus();
                        this.previous = f;
                        this._delay(function() {
                            this.previous = f
                        })
                    }
                }
                b.preventDefault();
                a.call(this);
                this.cancelBlur = true;
                this._delay(function() {
                    delete this.cancelBlur;
                    a.call(this)
                });
                if (this._start(b) === false) {
                    return
                }
                this._repeat(null, c(b.currentTarget).hasClass("ui-spinner-up") ? 1 : -1, b)
            },
            "mouseup .ui-spinner-button": "_stop",
            "mouseenter .ui-spinner-button": function(a) {
                if (!c(a.currentTarget).hasClass("ui-state-active")) {
                    return
                }
                if (this._start(a) === false) {
                    return false
                }
                this._repeat(null, c(a.currentTarget).hasClass("ui-spinner-up") ? 1 : -1, a)
            },
            "mouseleave .ui-spinner-button": "_stop"
        },
        _draw: function() {
            var a = this.uiSpinner = this.element.addClass("ui-spinner-input").attr("autocomplete", "off").wrap(this._uiSpinnerHtml()).parent().append(this._buttonHtml());
            this.element.attr("role", "spinbutton");
            this.buttons = a.find(".ui-spinner-button").attr("tabIndex", -1).button().removeClass("ui-corner-all");
            if (this.buttons.height() > Math.ceil(a.height() * 0.5) && a.height() > 0) {
                a.height(a.height())
            }
            if (this.options.disabled) {
                this.disable()
            }
        },
        _keydown: function(b) {
            var f = this.options,
                a = c.ui.keyCode;
            switch (b.keyCode) {
                case a.UP:
                    this._repeat(null, 1, b);
                    return true;
                case a.DOWN:
                    this._repeat(null, -1, b);
                    return true;
                case a.PAGE_UP:
                    this._repeat(null, f.page, b);
                    return true;
                case a.PAGE_DOWN:
                    this._repeat(null, -f.page, b);
                    return true
            }
            return false
        },
        _uiSpinnerHtml: function() {
            return "<span class='ui-spinner ui-widget ui-widget-content ui-corner-all'></span>"
        },
        _buttonHtml: function() {
            return "<a class='ui-spinner-button ui-spinner-up ui-corner-tr'><span class='ui-icon " + this.options.icons.up + "'>&#9650;</span></a><a class='ui-spinner-button ui-spinner-down ui-corner-br'><span class='ui-icon " + this.options.icons.down + "'>&#9660;</span></a>"
        },
        _start: function(a) {
            if (!this.spinning && this._trigger("start", a) === false) {
                return false
            }
            if (!this.counter) {
                this.counter = 1
            }
            this.spinning = true;
            return true
        },
        _repeat: function(b, f, a) {
            b = b || 500;
            clearTimeout(this.timer);
            this.timer = this._delay(function() {
                this._repeat(40, f, a)
            }, b);
            this._spin(f * this.options.step, a)
        },
        _spin: function(b, f) {
            var a = this.value() || 0;
            if (!this.counter) {
                this.counter = 1
            }
            a = this._adjustValue(a + b * this._increment(this.counter));
            if (!this.spinning || this._trigger("spin", f, {
                    value: a
                }) !== false) {
                this._value(a);
                this.counter++
            }
        },
        _increment: function(b) {
            var a = this.options.incremental;
            if (a) {
                return c.isFunction(a) ? a(b) : Math.floor(b * b * b / 50000 - b * b / 500 + 17 * b / 200 + 1)
            }
            return 1
        },
        _precision: function() {
            var a = this._precisionOf(this.options.step);
            if (this.options.min !== null) {
                a = Math.max(a, this._precisionOf(this.options.min))
            }
            return a
        },
        _precisionOf: function(b) {
            var a = b.toString(),
                f = a.indexOf(".");
            return f === -1 ? 0 : a.length - f - 1
        },
        _adjustValue: function(b) {
            var g, a, h = this.options;
            g = h.min !== null ? h.min : 0;
            a = b - g;
            a = Math.round(a / h.step) * h.step;
            b = g + a;
            b = parseFloat(b.toFixed(this._precision()));
            if (h.max !== null && b > h.max) {
                return h.max
            }
            if (h.min !== null && b < h.min) {
                return h.min
            }
            return b
        },
        _stop: function(a) {
            if (!this.spinning) {
                return
            }
            clearTimeout(this.timer);
            clearTimeout(this.mousewheelTimer);
            this.counter = 0;
            this.spinning = false;
            this._trigger("stop", a)
        },
        _setOption: function(f, b) {
            if (f === "culture" || f === "numberFormat") {
                var a = this._parse(this.element.val());
                this.options[f] = b;
                this.element.val(this._format(a));
                return
            }
            if (f === "max" || f === "min" || f === "step") {
                if (typeof b === "string") {
                    b = this._parse(b)
                }
            }
            this._super(f, b);
            if (f === "disabled") {
                if (b) {
                    this.element.prop("disabled", true);
                    this.buttons.button("disable")
                } else {
                    this.element.prop("disabled", false);
                    this.buttons.button("enable")
                }
            }
        },
        _setOptions: d(function(a) {
            this._super(a);
            this._value(this.element.val())
        }),
        _parse: function(a) {
            if (typeof a === "string" && a !== "") {
                a = window.Globalize && this.options.numberFormat ? Globalize.parseFloat(a, 10, this.options.culture) : +a
            }
            return a === "" || isNaN(a) ? null : a
        },
        _format: function(a) {
            if (a === "") {
                return ""
            }
            return window.Globalize && this.options.numberFormat ? Globalize.format(a, this.options.numberFormat, this.options.culture) : a
        },
        _refresh: function() {
            this.element.attr({
                "aria-valuemin": this.options.min,
                "aria-valuemax": this.options.max,
                "aria-valuenow": this._parse(this.element.val())
            })
        },
        _value: function(a, f) {
            var b;
            if (a !== "") {
                b = this._parse(a);
                if (b !== null) {
                    if (!f) {
                        b = this._adjustValue(b)
                    }
                    a = this._format(b)
                }
            }
            this.element.val(a);
            this._refresh()
        },
        _destroy: function() {
            this.element.removeClass("ui-spinner-input").prop("disabled", false).removeAttr("autocomplete").removeAttr("role").removeAttr("aria-valuemin").removeAttr("aria-valuemax").removeAttr("aria-valuenow");
            this.uiSpinner.replaceWith(this.element)
        },
        stepUp: d(function(a) {
            this._stepUp(a)
        }),
        _stepUp: function(a) {
            this._spin((a || 1) * this.options.step)
        },
        stepDown: d(function(a) {
            this._stepDown(a)
        }),
        _stepDown: function(a) {
            this._spin((a || 1) * -this.options.step)
        },
        pageUp: d(function(a) {
            this._stepUp((a || 1) * this.options.page)
        }),
        pageDown: d(function(a) {
            this._stepDown((a || 1) * this.options.page)
        }),
        value: function(a) {
            if (!arguments.length) {
                return this._parse(this.element.val())
            }
            d(this._value).call(this, a)
        },
        widget: function() {
            return this.uiSpinner
        }
    })
}(jQuery));
(function(m, k) {
    var h = 0,
        j = /#.*$/;

    function l() {
        return ++h
    }

    function g(a) {
        return a.hash.length > 1 && a.href.replace(j, "") === location.href.replace(j, "")
    }
    m.widget("ui.tabs", {
        version: "1.9.1",
        delay: 300,
        options: {
            active: null,
            collapsible: false,
            event: "click",
            heightStyle: "content",
            hide: null,
            show: null,
            activate: null,
            beforeActivate: null,
            beforeLoad: null,
            load: null
        },
        _create: function() {
            var c = this,
                d = this.options,
                b = d.active,
                a = location.hash.substring(1);
            this.running = false;
            this.element.addClass("ui-tabs ui-widget ui-widget-content ui-corner-all").toggleClass("ui-tabs-collapsible", d.collapsible).delegate(".ui-tabs-nav > li", "mousedown" + this.eventNamespace, function(e) {
                if (m(this).is(".ui-state-disabled")) {
                    e.preventDefault()
                }
            }).delegate(".ui-tabs-anchor", "focus" + this.eventNamespace, function() {
                if (m(this).closest("li").is(".ui-state-disabled")) {
                    this.blur()
                }
            });
            this._processTabs();
            if (b === null) {
                if (a) {
                    this.tabs.each(function(f, e) {
                        if (m(e).attr("aria-controls") === a) {
                            b = f;
                            return false
                        }
                    })
                }
                if (b === null) {
                    b = this.tabs.index(this.tabs.filter(".ui-tabs-active"))
                }
                if (b === null || b === -1) {
                    b = this.tabs.length ? 0 : false
                }
            }
            if (b !== false) {
                b = this.tabs.index(this.tabs.eq(b));
                if (b === -1) {
                    b = d.collapsible ? false : 0
                }
            }
            d.active = b;
            if (!d.collapsible && d.active === false && this.anchors.length) {
                d.active = 0
            }
            if (m.isArray(d.disabled)) {
                d.disabled = m.unique(d.disabled.concat(m.map(this.tabs.filter(".ui-state-disabled"), function(e) {
                    return c.tabs.index(e)
                }))).sort()
            }
            if (this.options.active !== false && this.anchors.length) {
                this.active = this._findActive(this.options.active)
            } else {
                this.active = m()
            }
            this._refresh();
            if (this.active.length) {
                this.load(d.active)
            }
        },
        _getCreateEventData: function() {
            return {
                tab: this.active,
                panel: !this.active.length ? m() : this._getPanelForTab(this.active)
            }
        },
        _tabKeydown: function(b) {
            var c = m(this.document[0].activeElement).closest("li"),
                d = this.tabs.index(c),
                a = true;
            if (this._handlePageNav(b)) {
                return
            }
            switch (b.keyCode) {
                case m.ui.keyCode.RIGHT:
                case m.ui.keyCode.DOWN:
                    d++;
                    break;
                case m.ui.keyCode.UP:
                case m.ui.keyCode.LEFT:
                    a = false;
                    d--;
                    break;
                case m.ui.keyCode.END:
                    d = this.anchors.length - 1;
                    break;
                case m.ui.keyCode.HOME:
                    d = 0;
                    break;
                case m.ui.keyCode.SPACE:
                    b.preventDefault();
                    clearTimeout(this.activating);
                    this._activate(d);
                    return;
                case m.ui.keyCode.ENTER:
                    b.preventDefault();
                    clearTimeout(this.activating);
                    this._activate(d === this.options.active ? false : d);
                    return;
                default:
                    return
            }
            b.preventDefault();
            clearTimeout(this.activating);
            d = this._focusNextTab(d, a);
            if (!b.ctrlKey) {
                c.attr("aria-selected", "false");
                this.tabs.eq(d).attr("aria-selected", "true");
                this.activating = this._delay(function() {
                    this.option("active", d)
                }, this.delay)
            }
        },
        _panelKeydown: function(a) {
            if (this._handlePageNav(a)) {
                return
            }
            if (a.ctrlKey && a.keyCode === m.ui.keyCode.UP) {
                a.preventDefault();
                this.active.focus()
            }
        },
        _handlePageNav: function(a) {
            if (a.altKey && a.keyCode === m.ui.keyCode.PAGE_UP) {
                this._activate(this._focusNextTab(this.options.active - 1, false));
                return true
            }
            if (a.altKey && a.keyCode === m.ui.keyCode.PAGE_DOWN) {
                this._activate(this._focusNextTab(this.options.active + 1, true));
                return true
            }
        },
        _findNextTab: function(c, b) {
            var d = this.tabs.length - 1;

            function a() {
                if (c > d) {
                    c = 0
                }
                if (c < 0) {
                    c = d
                }
                return c
            }
            while (m.inArray(a(), this.options.disabled) !== -1) {
                c = b ? c + 1 : c - 1
            }
            return c
        },
        _focusNextTab: function(b, a) {
            b = this._findNextTab(b, a);
            this.tabs.eq(b).focus();
            return b
        },
        _setOption: function(b, a) {
            if (b === "active") {
                this._activate(a);
                return
            }
            if (b === "disabled") {
                this._setupDisabled(a);
                return
            }
            this._super(b, a);
            if (b === "collapsible") {
                this.element.toggleClass("ui-tabs-collapsible", a);
                if (!a && this.options.active === false) {
                    this._activate(0)
                }
            }
            if (b === "event") {
                this._setupEvents(a)
            }
            if (b === "heightStyle") {
                this._setupHeightStyle(a)
            }
        },
        _tabId: function(a) {
            return a.attr("aria-controls") || "ui-tabs-" + l()
        },
        _sanitizeSelector: function(a) {
            return a ? a.replace(/[!"$%&'()*+,.\/:;<=>?@\[\]\^`{|}~]/g, "\\$&") : ""
        },
        refresh: function() {
            var a = this.options,
                b = this.tablist.children(":has(a[href])");
            a.disabled = m.map(b.filter(".ui-state-disabled"), function(c) {
                return b.index(c)
            });
            this._processTabs();
            if (a.active === false || !this.anchors.length) {
                a.active = false;
                this.active = m()
            } else {
                if (this.active.length && !m.contains(this.tablist[0], this.active[0])) {
                    if (this.tabs.length === a.disabled.length) {
                        a.active = false;
                        this.active = m()
                    } else {
                        this._activate(this._findNextTab(Math.max(0, a.active - 1), false))
                    }
                } else {
                    a.active = this.tabs.index(this.active)
                }
            }
            this._refresh()
        },
        _refresh: function() {
            this._setupDisabled(this.options.disabled);
            this._setupEvents(this.options.event);
            this._setupHeightStyle(this.options.heightStyle);
            this.tabs.not(this.active).attr({
                "aria-selected": "false",
                tabIndex: -1
            });
            this.panels.not(this._getPanelForTab(this.active)).hide().attr({
                "aria-expanded": "false",
                "aria-hidden": "true"
            });
            if (!this.active.length) {
                this.tabs.eq(0).attr("tabIndex", 0)
            } else {
                this.active.addClass("ui-tabs-active ui-state-active").attr({
                    "aria-selected": "true",
                    tabIndex: 0
                });
                this._getPanelForTab(this.active).show().attr({
                    "aria-expanded": "true",
                    "aria-hidden": "false"
                })
            }
        },
        _processTabs: function() {
            var a = this;
            this.tablist = this._getList().addClass("ui-tabs-nav ui-helper-reset ui-helper-clearfix ui-widget-header ui-corner-all").attr("role", "tablist");
            this.tabs = this.tablist.find("> li:has(a[href])").addClass("ui-state-default ui-corner-top").attr({
                role: "tab",
                tabIndex: -1
            });
            this.anchors = this.tabs.map(function() {
                return m("a", this)[0]
            }).addClass("ui-tabs-anchor").attr({
                role: "presentation",
                tabIndex: -1
            });
            this.panels = m();
            this.anchors.each(function(s, c) {
                var f, e, b, d = m(c).uniqueId().attr("id"),
                    r = m(c).closest("li"),
                    q = r.attr("aria-controls");
                if (g(c)) {
                    f = c.hash;
                    e = a.element.find(a._sanitizeSelector(f))
                } else {
                    b = a._tabId(r);
                    f = "#" + b;
                    e = a.element.find(f);
                    if (!e.length) {
                        e = a._createPanel(b);
                        e.insertAfter(a.panels[s - 1] || a.tablist)
                    }
                    e.attr("aria-live", "polite")
                }
                if (e.length) {
                    a.panels = a.panels.add(e)
                }
                if (q) {
                    r.data("ui-tabs-aria-controls", q)
                }
                r.attr({
                    "aria-controls": f.substring(1),
                    "aria-labelledby": d
                });
                e.attr("aria-labelledby", d)
            });
            this.panels.addClass("ui-tabs-panel ui-widget-content ui-corner-bottom").attr("role", "tabpanel")
        },
        _getList: function() {
            return this.element.find("ol,ul").eq(0)
        },
        _createPanel: function(a) {
            return m("<div>").attr("id", a).addClass("ui-tabs-panel ui-widget-content ui-corner-bottom").data("ui-tabs-destroy", true)
        },
        _setupDisabled: function(a) {
            if (m.isArray(a)) {
                if (!a.length) {
                    a = false
                } else {
                    if (a.length === this.anchors.length) {
                        a = true
                    }
                }
            }
            for (var b = 0, c;
                (c = this.tabs[b]); b++) {
                if (a === true || m.inArray(b, a) !== -1) {
                    m(c).addClass("ui-state-disabled").attr("aria-disabled", "true")
                } else {
                    m(c).removeClass("ui-state-disabled").removeAttr("aria-disabled")
                }
            }
            this.options.disabled = a
        },
        _setupEvents: function(a) {
            var b = {
                click: function(c) {
                    c.preventDefault()
                }
            };
            if (a) {
                m.each(a.split(" "), function(c, d) {
                    b[d] = "_eventHandler"
                })
            }
            this._off(this.anchors.add(this.tabs).add(this.panels));
            this._on(this.anchors, b);
            this._on(this.tabs, {
                keydown: "_tabKeydown"
            });
            this._on(this.panels, {
                keydown: "_panelKeydown"
            });
            this._focusable(this.tabs);
            this._hoverable(this.tabs)
        },
        _setupHeightStyle: function(d) {
            var b, a, c = this.element.parent();
            if (d === "fill") {
                if (!m.support.minHeight) {
                    a = c.css("overflow");
                    c.css("overflow", "hidden")
                }
                b = c.height();
                this.element.siblings(":visible").each(function() {
                    var e = m(this),
                        f = e.css("position");
                    if (f === "absolute" || f === "fixed") {
                        return
                    }
                    b -= e.outerHeight(true)
                });
                if (a) {
                    c.css("overflow", a)
                }
                this.element.children().not(this.panels).each(function() {
                    b -= m(this).outerHeight(true)
                });
                this.panels.each(function() {
                    m(this).height(Math.max(0, b - m(this).innerHeight() + m(this).height()))
                }).css("overflow", "auto")
            } else {
                if (d === "auto") {
                    b = 0;
                    this.panels.each(function() {
                        b = Math.max(b, m(this).height("").height())
                    }).height(b)
                }
            }
        },
        _eventHandler: function(u) {
            var a = this.options,
                f = this.active,
                e = m(u.currentTarget),
                q = e.closest("li"),
                c = q[0] === f[0],
                s = c && a.collapsible,
                r = s ? m() : this._getPanelForTab(q),
                d = !f.length ? m() : this._getPanelForTab(f),
                b = {
                    oldTab: f,
                    oldPanel: d,
                    newTab: s ? m() : q,
                    newPanel: r
                };
            u.preventDefault();
            if (q.hasClass("ui-state-disabled") || q.hasClass("ui-tabs-loading") || this.running || (c && !a.collapsible) || (this._trigger("beforeActivate", u, b) === false)) {
                return
            }
            a.active = s ? false : this.tabs.index(q);
            this.active = c ? m() : q;
            if (this.xhr) {
                this.xhr.abort()
            }
            if (!d.length && !r.length) {
                m.error("jQuery UI Tabs: Mismatching fragment identifier.")
            }
            if (r.length) {
                this.load(this.tabs.index(q), u)
            }
            this._toggle(u, b)
        },
        _toggle: function(a, b) {
            var c = this,
                n = b.newPanel,
                d = b.oldPanel;
            this.running = true;

            function e() {
                c.running = false;
                c._trigger("activate", a, b)
            }

            function f() {
                b.newTab.closest("li").addClass("ui-tabs-active ui-state-active");
                if (n.length && c.options.show) {
                    c._show(n, c.options.show, e)
                } else {
                    n.show();
                    e()
                }
            }
            if (d.length && this.options.hide) {
                this._hide(d, this.options.hide, function() {
                    b.oldTab.closest("li").removeClass("ui-tabs-active ui-state-active");
                    f()
                })
            } else {
                b.oldTab.closest("li").removeClass("ui-tabs-active ui-state-active");
                d.hide();
                f()
            }
            d.attr({
                "aria-expanded": "false",
                "aria-hidden": "true"
            });
            b.oldTab.attr("aria-selected", "false");
            if (n.length && d.length) {
                b.oldTab.attr("tabIndex", -1)
            } else {
                if (n.length) {
                    this.tabs.filter(function() {
                        return m(this).attr("tabIndex") === 0
                    }).attr("tabIndex", -1)
                }
            }
            n.attr({
                "aria-expanded": "true",
                "aria-hidden": "false"
            });
            b.newTab.attr({
                "aria-selected": "true",
                tabIndex: 0
            })
        },
        _activate: function(b) {
            var c, a = this._findActive(b);
            if (a[0] === this.active[0]) {
                return
            }
            if (!a.length) {
                a = this.active
            }
            c = a.find(".ui-tabs-anchor")[0];
            this._eventHandler({
                target: c,
                currentTarget: c,
                preventDefault: m.noop
            })
        },
        _findActive: function(a) {
            return a === false ? m() : this.tabs.eq(a)
        },
        _getIndex: function(a) {
            if (typeof a === "string") {
                a = this.anchors.index(this.anchors.filter("[href$='" + a + "']"))
            }
            return a
        },
        _destroy: function() {
            if (this.xhr) {
                this.xhr.abort()
            }
            this.element.removeClass("ui-tabs ui-widget ui-widget-content ui-corner-all ui-tabs-collapsible");
            this.tablist.removeClass("ui-tabs-nav ui-helper-reset ui-helper-clearfix ui-widget-header ui-corner-all").removeAttr("role");
            this.anchors.removeClass("ui-tabs-anchor").removeAttr("role").removeAttr("tabIndex").removeData("href.tabs").removeData("load.tabs").removeUniqueId();
            this.tabs.add(this.panels).each(function() {
                if (m.data(this, "ui-tabs-destroy")) {
                    m(this).remove()
                } else {
                    m(this).removeClass("ui-state-default ui-state-active ui-state-disabled ui-corner-top ui-corner-bottom ui-widget-content ui-tabs-active ui-tabs-panel").removeAttr("tabIndex").removeAttr("aria-live").removeAttr("aria-busy").removeAttr("aria-selected").removeAttr("aria-labelledby").removeAttr("aria-hidden").removeAttr("aria-expanded").removeAttr("role")
                }
            });
            this.tabs.each(function() {
                var b = m(this),
                    a = b.data("ui-tabs-aria-controls");
                if (a) {
                    b.attr("aria-controls", a)
                } else {
                    b.removeAttr("aria-controls")
                }
            });
            if (this.options.heightStyle !== "content") {
                this.panels.css("height", "")
            }
        },
        enable: function(b) {
            var a = this.options.disabled;
            if (a === false) {
                return
            }
            if (b === k) {
                a = false
            } else {
                b = this._getIndex(b);
                if (m.isArray(a)) {
                    a = m.map(a, function(c) {
                        return c !== b ? c : null
                    })
                } else {
                    a = m.map(this.tabs, function(d, c) {
                        return c !== b ? c : null
                    })
                }
            }
            this._setupDisabled(a)
        },
        disable: function(b) {
            var a = this.options.disabled;
            if (a === true) {
                return
            }
            if (b === k) {
                a = true
            } else {
                b = this._getIndex(b);
                if (m.inArray(b, a) !== -1) {
                    return
                }
                if (m.isArray(a)) {
                    a = m.merge([b], a).sort()
                } else {
                    a = [b]
                }
            }
            this._setupDisabled(a)
        },
        load: function(e, a) {
            e = this._getIndex(e);
            var b = this,
                d = this.tabs.eq(e),
                f = d.find(".ui-tabs-anchor"),
                n = this._getPanelForTab(d),
                c = {
                    tab: d,
                    panel: n
                };
            if (g(f[0])) {
                return
            }
            this.xhr = m.ajax(this._ajaxSettings(f, a, c));
            if (this.xhr && this.xhr.statusText !== "canceled") {
                d.addClass("ui-tabs-loading");
                n.attr("aria-busy", "true");
                this.xhr.success(function(o) {
                    setTimeout(function() {
                        n.html(o);
                        b._trigger("load", a, c)
                    }, 1)
                }).complete(function(p, q) {
                    setTimeout(function() {
                        if (q === "abort") {
                            b.panels.stop(false, true)
                        }
                        d.removeClass("ui-tabs-loading");
                        n.removeAttr("aria-busy");
                        if (p === b.xhr) {
                            delete b.xhr
                        }
                    }, 1)
                })
            }
        },
        _ajaxSettings: function(d, a, b) {
            var c = this;
            return {
                url: d.attr("href"),
                beforeSend: function(e, f) {
                    return c._trigger("beforeLoad", a, m.extend({
                        jqXHR: e,
                        ajaxSettings: f
                    }, b))
                }
            }
        },
        _getPanelForTab: function(b) {
            var a = m(b).attr("aria-controls");
            return this.element.find(this._sanitizeSelector("#" + a))
        }
    });
    if (m.uiBackCompat !== false) {
        m.ui.tabs.prototype._ui = function(a, b) {
            return {
                tab: a,
                panel: b,
                index: this.anchors.index(a)
            }
        };
        m.widget("ui.tabs", m.ui.tabs, {
            url: function(a, b) {
                this.anchors.eq(a).attr("href", b)
            }
        });
        m.widget("ui.tabs", m.ui.tabs, {
            options: {
                ajaxOptions: null,
                cache: false
            },
            _create: function() {
                this._super();
                var a = this;
                this._on({
                    tabsbeforeload: function(c, b) {
                        if (m.data(b.tab[0], "cache.tabs")) {
                            c.preventDefault();
                            return
                        }
                        b.jqXHR.success(function() {
                            if (a.options.cache) {
                                m.data(b.tab[0], "cache.tabs", true)
                            }
                        })
                    }
                })
            },
            _ajaxSettings: function(c, b, a) {
                var d = this.options.ajaxOptions;
                return m.extend({}, d, {
                    error: function(e, n) {
                        try {
                            d.error(e, n, a.tab.closest("li").index(), a.tab[0])
                        } catch (f) {}
                    }
                }, this._superApply(arguments))
            },
            _setOption: function(b, a) {
                if (b === "cache" && a === false) {
                    this.anchors.removeData("cache.tabs")
                }
                this._super(b, a)
            },
            _destroy: function() {
                this.anchors.removeData("cache.tabs");
                this._super()
            },
            url: function(a) {
                this.anchors.eq(a).removeData("cache.tabs");
                this._superApply(arguments)
            }
        });
        m.widget("ui.tabs", m.ui.tabs, {
            abort: function() {
                if (this.xhr) {
                    this.xhr.abort()
                }
            }
        });
        m.widget("ui.tabs", m.ui.tabs, {
            options: {
                spinner: "<em>Loading&#8230;</em>"
            },
            _create: function() {
                this._super();
                this._on({
                    tabsbeforeload: function(b, a) {
                        if (b.target !== this.element[0] || !this.options.spinner) {
                            return
                        }
                        var c = a.tab.find("span"),
                            d = c.html();
                        c.html(this.options.spinner);
                        a.jqXHR.complete(function() {
                            c.html(d)
                        })
                    }
                })
            }
        });
        m.widget("ui.tabs", m.ui.tabs, {
            options: {
                enable: null,
                disable: null
            },
            enable: function(a) {
                var b = this.options,
                    c;
                if (a && b.disabled === true || (m.isArray(b.disabled) && m.inArray(a, b.disabled) !== -1)) {
                    c = true
                }
                this._superApply(arguments);
                if (c) {
                    this._trigger("enable", null, this._ui(this.anchors[a], this.panels[a]))
                }
            },
            disable: function(a) {
                var b = this.options,
                    c;
                if (a && b.disabled === false || (m.isArray(b.disabled) && m.inArray(a, b.disabled) === -1)) {
                    c = true
                }
                this._superApply(arguments);
                if (c) {
                    this._trigger("disable", null, this._ui(this.anchors[a], this.panels[a]))
                }
            }
        });
        m.widget("ui.tabs", m.ui.tabs, {
            options: {
                add: null,
                remove: null,
                tabTemplate: "<li><a href='#{href}'><span>#{label}</span></a></li>"
            },
            add: function(b, c, d) {
                if (d === k) {
                    d = this.anchors.length
                }
                var a, f, e = this.options,
                    o = m(e.tabTemplate.replace(/#\{href\}/g, b).replace(/#\{label\}/g, c)),
                    p = !b.indexOf("#") ? b.replace("#", "") : this._tabId(o);
                o.addClass("ui-state-default ui-corner-top").data("ui-tabs-destroy", true);
                o.attr("aria-controls", p);
                a = d >= this.tabs.length;
                f = this.element.find("#" + p);
                if (!f.length) {
                    f = this._createPanel(p);
                    if (a) {
                        if (d > 0) {
                            f.insertAfter(this.panels.eq(-1))
                        } else {
                            f.appendTo(this.element)
                        }
                    } else {
                        f.insertBefore(this.panels[d])
                    }
                }
                f.addClass("ui-tabs-panel ui-widget-content ui-corner-bottom").hide();
                if (a) {
                    o.appendTo(this.tablist)
                } else {
                    o.insertBefore(this.tabs[d])
                }
                e.disabled = m.map(e.disabled, function(n) {
                    return n >= d ? ++n : n
                });
                this.refresh();
                if (this.tabs.length === 1 && e.active === false) {
                    this.option("active", 0)
                }
                this._trigger("add", null, this._ui(this.anchors[d], this.panels[d]));
                return this
            },
            remove: function(b) {
                b = this._getIndex(b);
                var c = this.options,
                    a = this.tabs.eq(b).remove(),
                    d = this._getPanelForTab(a).remove();
                if (a.hasClass("ui-tabs-active") && this.anchors.length > 2) {
                    this._activate(b + (b + 1 < this.anchors.length ? 1 : -1))
                }
                c.disabled = m.map(m.grep(c.disabled, function(e) {
                    return e !== b
                }), function(e) {
                    return e >= b ? --e : e
                });
                this.refresh();
                this._trigger("remove", null, this._ui(a.find("a")[0], d[0]));
                return this
            }
        });
        m.widget("ui.tabs", m.ui.tabs, {
            length: function() {
                return this.anchors.length
            }
        });
        m.widget("ui.tabs", m.ui.tabs, {
            options: {
                idPrefix: "ui-tabs-"
            },
            _tabId: function(a) {
                var b = a.is("li") ? a.find("a[href]") : a;
                b = b[0];
                return m(b).closest("li").attr("aria-controls") || b.title && b.title.replace(/\s/g, "_").replace(/[^\w\u00c0-\uFFFF\-]/g, "") || this.options.idPrefix + l()
            }
        });
        m.widget("ui.tabs", m.ui.tabs, {
            options: {
                panelTemplate: "<div></div>"
            },
            _createPanel: function(a) {
                return m(this.options.panelTemplate).attr("id", a).addClass("ui-tabs-panel ui-widget-content ui-corner-bottom").data("ui-tabs-destroy", true)
            }
        });
        m.widget("ui.tabs", m.ui.tabs, {
            _create: function() {
                var a = this.options;
                if (a.active === null && a.selected !== k) {
                    a.active = a.selected === -1 ? false : a.selected
                }
                this._super();
                a.selected = a.active;
                if (a.selected === false) {
                    a.selected = -1
                }
            },
            _setOption: function(b, a) {
                if (b !== "selected") {
                    return this._super(b, a)
                }
                var c = this.options;
                this._super("active", a === -1 ? false : a);
                c.selected = c.active;
                if (c.selected === false) {
                    c.selected = -1
                }
            },
            _eventHandler: function() {
                this._superApply(arguments);
                this.options.selected = this.options.active;
                if (this.options.selected === false) {
                    this.options.selected = -1
                }
            }
        });
        m.widget("ui.tabs", m.ui.tabs, {
            options: {
                show: null,
                select: null
            },
            _create: function() {
                this._super();
                if (this.options.active !== false) {
                    this._trigger("show", null, this._ui(this.active.find(".ui-tabs-anchor")[0], this._getPanelForTab(this.active)[0]))
                }
            },
            _trigger: function(c, b, a) {
                var d = this._superApply(arguments);
                if (!d) {
                    return false
                }
                if (c === "beforeActivate" && a.newTab.length) {
                    d = this._super("select", b, {
                        tab: a.newTab.find(".ui-tabs-anchor")[0],
                        panel: a.newPanel[0],
                        index: a.newTab.closest("li").index()
                    })
                } else {
                    if (c === "activate" && a.newTab.length) {
                        d = this._super("show", b, {
                            tab: a.newTab.find(".ui-tabs-anchor")[0],
                            panel: a.newPanel[0],
                            index: a.newTab.closest("li").index()
                        })
                    }
                }
                return d
            }
        });
        m.widget("ui.tabs", m.ui.tabs, {
            select: function(a) {
                a = this._getIndex(a);
                if (a === -1) {
                    if (this.options.collapsible && this.options.selected !== -1) {
                        a = this.options.selected
                    } else {
                        return
                    }
                }
                this.anchors.eq(a).trigger(this.options.event + this.eventNamespace)
            }
        });
        (function() {
            var a = 0;
            m.widget("ui.tabs", m.ui.tabs, {
                options: {
                    cookie: null
                },
                _create: function() {
                    var c = this.options,
                        b;
                    if (c.active == null && c.cookie) {
                        b = parseInt(this._cookie(), 10);
                        if (b === -1) {
                            b = false
                        }
                        c.active = b
                    }
                    this._super()
                },
                _cookie: function(b) {
                    var c = [this.cookie || (this.cookie = this.options.cookie.name || "ui-tabs-" + (++a))];
                    if (arguments.length) {
                        c.push(b === false ? -1 : b);
                        c.push(this.options.cookie)
                    }
                    return m.cookie.apply(null, c)
                },
                _refresh: function() {
                    this._super();
                    if (this.options.cookie) {
                        this._cookie(this.options.active, this.options.cookie)
                    }
                },
                _eventHandler: function() {
                    this._superApply(arguments);
                    if (this.options.cookie) {
                        this._cookie(this.options.active, this.options.cookie)
                    }
                },
                _destroy: function() {
                    this._super();
                    if (this.options.cookie) {
                        this._cookie(null, this.options.cookie)
                    }
                }
            })
        })();
        m.widget("ui.tabs", m.ui.tabs, {
            _trigger: function(c, b, a) {
                var d = m.extend({}, a);
                if (c === "load") {
                    d.panel = d.panel[0];
                    d.tab = d.tab.find(".ui-tabs-anchor")[0]
                }
                return this._super(c, b, d)
            }
        });
        m.widget("ui.tabs", m.ui.tabs, {
            options: {
                fx: null
            },
            _getFx: function() {
                var b, c, a = this.options.fx;
                if (a) {
                    if (m.isArray(a)) {
                        b = a[0];
                        c = a[1]
                    } else {
                        b = c = a
                    }
                }
                return a ? {
                    show: c,
                    hide: b
                } : null
            },
            _toggle: function(p, a) {
                var b = this,
                    o = a.newPanel,
                    d = a.oldPanel,
                    c = this._getFx();
                if (!c) {
                    return this._super(p, a)
                }
                b.running = true;

                function e() {
                    b.running = false;
                    b._trigger("activate", p, a)
                }

                function f() {
                    a.newTab.closest("li").addClass("ui-tabs-active ui-state-active");
                    if (o.length && c.show) {
                        o.animate(c.show, c.show.duration, function() {
                            e()
                        })
                    } else {
                        o.show();
                        e()
                    }
                }
                if (d.length && c.hide) {
                    d.animate(c.hide, c.hide.duration, function() {
                        a.oldTab.closest("li").removeClass("ui-tabs-active ui-state-active");
                        f()
                    })
                } else {
                    a.oldTab.closest("li").removeClass("ui-tabs-active ui-state-active");
                    d.hide();
                    f()
                }
            }
        })
    }
})(jQuery);
(function(g) {
    var e = 0;

    function h(b, a) {
        var c = (b.attr("aria-describedby") || "").split(/\s+/);
        c.push(a);
        b.data("ui-tooltip-id", a).attr("aria-describedby", g.trim(c.join(" ")))
    }

    function f(b) {
        var a = b.data("ui-tooltip-id"),
            c = (b.attr("aria-describedby") || "").split(/\s+/),
            d = g.inArray(a, c);
        if (d !== -1) {
            c.splice(d, 1)
        }
        b.removeData("ui-tooltip-id");
        c = g.trim(c.join(" "));
        if (c) {
            b.attr("aria-describedby", c)
        } else {
            b.removeAttr("aria-describedby")
        }
    }
    g.widget("ui.tooltip", {
        version: "1.9.1",
        options: {
            content: function() {
                return g(this).attr("title")
            },
            hide: true,
            items: "[title]:not([disabled])",
            position: {
                my: "left top+15",
                at: "left bottom",
                collision: "flipfit flipfit"
            },
            show: true,
            tooltipClass: null,
            track: false,
            close: null,
            open: null
        },
        _create: function() {
            this._on({
                mouseover: "open",
                focusin: "open"
            });
            this.tooltips = {};
            this.parents = {};
            if (this.options.disabled) {
                this._disable()
            }
        },
        _setOption: function(c, a) {
            var b = this;
            if (c === "disabled") {
                this[a ? "_disable" : "_enable"]();
                this.options[c] = a;
                return
            }
            this._super(c, a);
            if (c === "content") {
                g.each(this.tooltips, function(d, j) {
                    b._updateContent(j)
                })
            }
        },
        _disable: function() {
            var a = this;
            g.each(this.tooltips, function(b, d) {
                var c = g.Event("blur");
                c.target = c.currentTarget = d[0];
                a.close(c, true)
            });
            this.element.find(this.options.items).andSelf().each(function() {
                var b = g(this);
                if (b.is("[title]")) {
                    b.data("ui-tooltip-title", b.attr("title")).attr("title", "")
                }
            })
        },
        _enable: function() {
            this.element.find(this.options.items).andSelf().each(function() {
                var a = g(this);
                if (a.data("ui-tooltip-title")) {
                    a.attr("title", a.data("ui-tooltip-title"))
                }
            })
        },
        open: function(b) {
            var c = this,
                a = g(b ? b.target : this.element).closest(this.options.items);
            if (!a.length) {
                return
            }
            if (this.options.track && a.data("ui-tooltip-id")) {
                this._find(a).position(g.extend({ of: a
                }, this.options.position));
                this._off(this.document, "mousemove");
                return
            }
            if (a.attr("title")) {
                a.data("ui-tooltip-title", a.attr("title"))
            }
            a.data("tooltip-open", true);
            if (b && b.type === "mouseover") {
                a.parents().each(function() {
                    var d;
                    if (g(this).data("tooltip-open")) {
                        d = g.Event("blur");
                        d.target = d.currentTarget = this;
                        c.close(d, true)
                    }
                    if (this.title) {
                        g(this).uniqueId();
                        c.parents[this.id] = {
                            element: this,
                            title: this.title
                        };
                        this.title = ""
                    }
                })
            }
            this._updateContent(a, b)
        },
        _updateContent: function(a, b) {
            var c, j = this.options.content,
                d = this;
            if (typeof j === "string") {
                return this._open(b, a, j)
            }
            c = j.call(a[0], function(k) {
                if (!a.data("tooltip-open")) {
                    return
                }
                d._delay(function() {
                    this._open(b, a, k)
                })
            });
            if (c) {
                this._open(b, a, c)
            }
        },
        _open: function(d, b, m) {
            var c, n, o, a = g.extend({}, this.options.position);
            if (!m) {
                return
            }
            c = this._find(b);
            if (c.length) {
                c.find(".ui-tooltip-content").html(m);
                return
            }
            if (b.is("[title]")) {
                if (d && d.type === "mouseover") {
                    b.attr("title", "")
                } else {
                    b.removeAttr("title")
                }
            }
            c = this._tooltip(b);
            h(b, c.attr("id"));
            c.find(".ui-tooltip-content").html(m);

            function p(j) {
                a.of = j;
                if (c.is(":hidden")) {
                    return
                }
                c.position(a)
            }
            if (this.options.track && d && /^mouse/.test(d.originalEvent.type)) {
                this._on(this.document, {
                    mousemove: p
                });
                p(d)
            } else {
                c.position(g.extend({ of: b
                }, this.options.position))
            }
            c.hide();
            this._show(c, this.options.show);
            if (this.options.show && this.options.show.delay) {
                o = setInterval(function() {
                    if (c.is(":visible")) {
                        p(a.of);
                        clearInterval(o)
                    }
                }, g.fx.interval)
            }
            this._trigger("open", d, {
                tooltip: c
            });
            n = {
                keyup: function(j) {
                    if (j.keyCode === g.ui.keyCode.ESCAPE) {
                        var k = g.Event(j);
                        k.currentTarget = b[0];
                        this.close(k, true)
                    }
                },
                remove: function() {
                    this._removeTooltip(c)
                }
            };
            if (!d || d.type === "mouseover") {
                n.mouseleave = "close"
            }
            if (!d || d.type === "focusin") {
                n.focusout = "close"
            }
            this._on(b, n)
        },
        close: function(c) {
            var d = this,
                a = g(c ? c.currentTarget : this.element),
                b = this._find(a);
            if (this.closing) {
                return
            }
            if (a.data("ui-tooltip-title")) {
                a.attr("title", a.data("ui-tooltip-title"))
            }
            f(a);
            b.stop(true);
            this._hide(b, this.options.hide, function() {
                d._removeTooltip(g(this))
            });
            a.removeData("tooltip-open");
            this._off(a, "mouseleave focusout keyup");
            if (a[0] !== this.element[0]) {
                this._off(a, "remove")
            }
            this._off(this.document, "mousemove");
            if (c && c.type === "mouseleave") {
                g.each(this.parents, function(k, l) {
                    l.element.title = l.title;
                    delete d.parents[k]
                })
            }
            this.closing = true;
            this._trigger("close", c, {
                tooltip: b
            });
            this.closing = false
        },
        _tooltip: function(c) {
            var a = "ui-tooltip-" + e++,
                b = g("<div>").attr({
                    id: a,
                    role: "tooltip"
                }).addClass("ui-tooltip ui-widget ui-corner-all ui-widget-content " + (this.options.tooltipClass || ""));
            g("<div>").addClass("ui-tooltip-content").appendTo(b);
            b.appendTo(this.document[0].body);
            if (g.fn.bgiframe) {
                b.bgiframe()
            }
            this.tooltips[a] = c;
            return b
        },
        _find: function(b) {
            var a = b.data("ui-tooltip-id");
            return a ? g("#" + a) : g()
        },
        _removeTooltip: function(a) {
            a.remove();
            delete this.tooltips[a.attr("id")]
        },
        _destroy: function() {
            var a = this;
            g.each(this.tooltips, function(b, d) {
                var c = g.Event("blur");
                c.target = c.currentTarget = d[0];
                a.close(c, true);
                g("#" + b).remove();
                if (d.data("ui-tooltip-title")) {
                    d.attr("title", d.data("ui-tooltip-title"));
                    d.removeData("ui-tooltip-title")
                }
            })
        }
    })
}(jQuery));
(function() {
    String.format = function() {
        var a = arguments[0];
        for (var c = 0; c < arguments.length - 1; c++) {
            var b = new RegExp("\\{" + c + "\\}", "gm");
            a = a.replace(b, arguments[c + 1])
        }
        return a
    };
    if (typeof String.prototype.trim !== "function") {
        String.prototype.trim = function() {
            return this.replace(/^\s+|\s+$/g, "")
        }
    }
    if (typeof console == "") {
        this.console = {
            log: function() {}
        }
    }
    $.fn.clearForm = function() {
        return this.each(function() {
            var a = this.type,
                b = this.tagName.toLowerCase();
            if (b == "form") {
                return $(":input", this).clearForm()
            }
            if (a == "text" || a == "password" || b == "textarea") {
                this.value = ""
            } else {
                if (a == "checkbox" || a == "radio") {
                    this.checked = false
                } else {
                    if (b == "select") {
                        this.selectedIndex = -1
                    }
                }
            }
        })
    };
    var e = this,
        h = Object.prototype;
    if (e.TT == ) {
        e.TT = {}
    }
    TT.ttGlobal = e;
    var f = true;
    for (i in {
            toString: 1
        }) {
        f = null
    }
    if (f) {
        f = ["hasOwnProperty", "valueOf", "isPrototypeOf", "propertyIsEnumerable", "toLocaleString", "toString", "constructor"]
    }
    TT.enumerables = f;
    TT.extend = function(c, d, a) {
        if (a) {
            TT.extend(c, a)
        }
        if (c && d && typeof d === "object") {
            var b, j, k;
            for (b in d) {
                c[b] = d[b]
            }
            if (f) {
                for (j = f.length; j - 1;) {
                    k = f[j];
                    if (d.hasOwnProperty(k)) {
                        c[k] = d[k]
                    }
                }
            }
        }
        return c
    };
    TT.extendIf = function(b, c) {
        var a;
        if (b) {
            for (a in c) {
                if (b[a] === ) {
                    b[a] = c[a]
                }
            }
        }
        return b
    };
    TT.namespace = function() {
        var d = arguments.length,
            m, c, o, a, b, n;
        for (m = 0; m < d; m += 1) {
            c = arguments[m];
            b = c.split(".");
            if (global.TT) {
                n = global[b[0]] = Object(global[b[0]])
            } else {
                n = arguments.callee.caller.arguments[0]
            }
            for (o = 1, a = b.length; o < a; o + 1) {
                n = n[b[o]] = Object(n[b[o]])
            }
        }
        return n
    };
    TT = $.extend({}, {
        ns: TT.namespace,
        isArray: Array.isArray || function(a) {
            return jQuery.type(a) === "array"
        },
        isEmpty: function(a, b) {
            return (a == null) || ((TT.isArray(a) && !a.length)) || (!b ? a === "" : false)
        },
        isDate: function(a) {
            return h.toString.apply(a) === "[object Date]"
        },
        isFunction: function(a) {
            return h.toString.apply(a) === "[object Function]"
        },
        isString: function(a) {
            return typeof a === "string"
        },
        isInteger: function(a) {
            return !!a.match(/^[0-9]+$/)
        },
        isBoolean: function(a) {
            if (a) {
                switch (a.toString().toLowerCase()) {
                    case "true":
                    case "yes":
                    case "1":
                        return true;
                    case "false":
                    case "no":
                    case "0":
                    case null:
                        return false;
                    default:
                        return false
                }
            }
            return false
        },
        SetEllipsis: function(d, a, b, c) {
            d.on("click", function() {
                a.toggleClass("ellipsis", "");
                var k = a.hasClass("ellipsis") ? b ? b : "View more" : c ? c : "View less";
                d.text(k)
            })
        },
        isNull: function(a) {
            return a != 
        },
        toHtmlEncode: function(a) {
            return $("<div/>").text(a).html()
        },
        getChatType: function(a) {
            var b = TT.ChatType.NotDef;
            $.each(TT.ChatType, function(d, c) {
                if (c === a) {
                    b = c;
                    return false
                }
            });
            return b
        },
        toHtmlDecode: function(a) {
            return $("<div/>").html(a).text()
        },
        getUrlParam: function(c, d) {
            d = d.replace(/[\[]/, "\\[").replace(/[\]]/, "\\]");
            var k = "[\\?&]" + d + "=([^&#]*)";
            var a = new RegExp(k);
            var b = a.exec(c);
            if (b == null) {
                return ""
            } else {
                return b[1]
            }
        },
        isValidFile: function(c, d) {
            if (!d) {
                return false
            }
            var a = false;
            while (d.indexOf("\\") != -1) {
                d = d.slice(d.indexOf("\\") + 1)
            }
            var b = d.slice(d.lastIndexOf(".")).toLowerCase();
            for (var k = 0; k < c.length; k++) {
                if (c[k] == b) {
                    a = true;
                    break
                }
            }
            return a
        },
        IsValidCaptcha: function(c) {
            var b = Recaptcha.get_challenge();
            var a = true;
            var d = Recaptcha.get_response();
            if (typeof(c) != "") {
                d = c
            }
            $("#spanReCaptchaErrorMessage").text("");
            $.ajax({
                type: "POST",
                url: "/handler/AjaxCallWebService.asmx/ValidateCaptcha",
                data: '{ challengeValue: "' + b + '", responseValue: "' + d + '" }',
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                async: false,
                success: function(k) {
                    if (k.d == false) {
                        Recaptcha.reload();
                        a = false;
                        $("#spanReCaptchaErrorMessage").text("You have entered  incorrect verification words.")
                    }
                }
            });
            return a
        },
        stepCarouselSetup: function(c) {
            var a = {
                galleryid: "tutorgallery",
                beltclass: "belt",
                panelclass: "panel",
                autostep: {
                    enable: true,
                    moveby: 1,
                    pause: 3000
                },
                panelbehavior: {
                    speed: 500,
                    wraparound: true,
                    wrapbehavior: "pushpull",
                    persist: true
                },
                defaultbuttons: {
                    enable: false,
                    moveby: 1,
                    leftnav: ["Resources/images/leftuserbtn.jpg", -20, 20],
                    rightnav: ["Resources/images/rightuserbtn.jpg", 15, 20]
                },
                statusvars: ["statusA", "statusB", "statusC"],
                contenttype: ["inline"]
            };
            var b = $.extend({}, a, c);
            stepcarousel.setup(b)
        },
        jCarouselInit: function(b) {
            var a = $("#" + b.controlID);
            if (a) {
                $(a).jcarousel(b)
            }
        },
        changeclass: function(b, a) {
            if (b == "divflag") {
                if (document.getElementById(b).className == "homeBox USAflag") {
                    document.getElementById(b).className = "homeBox "
                } else {
                    document.getElementById(b).className = "homeBox USAflag";
                    $("#" + a).hide()
                }
            } else {
                if (document.getElementById(b).className == "homeBox stisfiedstuns") {
                    document.getElementById(b).className = "homeBox "
                } else {
                    document.getElementById(b).className = "homeBox stisfiedstuns";
                    $("#" + a).hide()
                }
            }
        }
    });
    TT.ModalProgress = $.extend({}, {
        show: function(l, m) {
            if ((l !=  && m != ) && typeof($.blockUI) == "function") {
                var d = m;
                if (l instanceof jQuery || "jquery" in Object(l)) {
                    d = l
                }
                if (TT.isString(l)) {
                    $(d).block({
                        css: {
                            backgroundColor: "#fff",
                            border: "none"
                        },
                        overlayCSS: {
                            backgroundColor: "#fff"
                        },
                        message: l
                    })
                } else {
                    if (TT.isString(m)) {
                        $(d).block({
                            css: {
                                backgroundColor: "#fff",
                                border: "none"
                            },
                            overlayCSS: {
                                backgroundColor: "#fff"
                            },
                            message: m
                        })
                    } else {
                        $(d).block({
                            css: {
                                backgroundColor: "#fff",
                                border: "none"
                            },
                            overlayCSS: {
                                backgroundColor: "#fff"
                            },
                            message: null
                        });
                        if (typeof(Spinner) != "") {
                            var a = new Spinner().spin();
                            $(".blockElement").html(a.el).show()
                        }
                    }
                }
                return
            } else {
                if (l !=  && l instanceof jQuery || "jquery" in Object(l)) {
                    var d = l;
                    $(d).block({
                        css: {
                            backgroundColor: "#fff",
                            border: "none"
                        },
                        overlayCSS: {
                            backgroundColor: "#fff"
                        },
                        message: null
                    });
                    if (typeof(Spinner) != "") {
                        var a = new Spinner().spin();
                        $(".blockElement").html(a.el).show()
                    }
                    return
                }
            }
            var c = "<div id='pnlLoadingBar' style='display:none;'><div style='z-index: 1000; border: medium none; margin: 0pt; padding: 0pt; width: 100%; height: 100%; top: 0pt; left: 0pt; background-color: #fff; opacity: 0.8; -moz-opacity: 0.80;  opacity: .80; filter: alpha(opacity=80);  position: fixed;'></div><div style='z-index: 1011; position: fixed; padding: 2px; margin: 0px; width: 25%;top: 40%; left: 35%; text-align: center; color: #000; border:none; background-color: none; ' class='blockMsg'><div style='cursor: default; width: 100%;' id='infoMessage' ><div id='imgLoading' style='width:10px; height:10px; margin:25px auto;' ></div></div><p style='padding-bottom: 5px; text-align: center; font-family:Tahoma; font-size:12px;'>{0}</p></div></div>";
            $("#pnlLoadingBar").fadeOut("slow");
            $("#pnlLoadingBar").remove();
            var b = "";
            if (l == ) {
                b = String.format(c, "")
            } else {
                b = String.format(c, l)
            }
            $("body").prepend(b);
            $("#pnlLoadingBar").fadeIn("slow");
            if (typeof(Spinner) != "") {
                var a = new Spinner().spin();
                $("#imgLoading")[0].appendChild(a.el)
            } 
        },
        hide: function(b) {
            var a = b;
            if (a) {
                $(a).unblock()
            }
            $("#pnlLoadingBar").fadeOut("slow");
            $("#pnlLoadingBar").remove()
        }
    });
    TT.callBack = function() {};
    TT.ModalPopup = $.extend({}, {
        show: function(r, p, s, q) {
            TT.ModalPopup.hide();
            var c = "<div class='alertBg' id='dvPopupMessage' style='display:none;'><div class='alert'><div class='closeAlrt closepopup' id='dvClose'><a href='javascript:void(0);'>X</a></div><div class='heading'>{0}</div><p>{1}</p><div class='btnCont'><input name='' style='display:none;' type='button' value='Cancel' class='btn'/><input name='' type='button' id='btnOk' value='Ok' class='btn closepopup'/></div></div></div>";
            var b = "<div class='alertFadeBg' id='dvOverlay' style='display:none;'></div>";
            var u = b;
            var d = "";
            if (typeof q == "function") {
                TT.callBack = q
            } else {
                if (typeof p == "function") {
                    TT.callBack = p;
                    p = ""
                } else {
                    if (typeof s == "function") {
                        TT.callBack = s;
                        s = ""
                    }
                }
            }
            if (!p || p == "") {
                p = "Transtutors"
            }
            if (!s || s == "") {
                s = true
            }
            
            d = String.format(c, p, r);
            if (s) {
                d = u + d
            }
            $("body").prepend(d);
            var v = $("#dvPopupMessage");
            var a = $("#dvOverlay");
            a.fadeIn("fast");
            v.fadeIn("fast");
            $(document).on("click", ".closepopup", function(j) {
                TT.ModalPopup.hide(TT.callBack);
                j.preventDefault();
                return false
            }).on("keydown", function(j) {
                if (j.which == 27) {
                    TT.ModalPopup.hide(TT.callBack);
                    j.preventDefault();
                    return false
                }
                return true
            });
            $("#btnOk").focus()
        },
        hide: function() {
            var a = $("#dvPopupMessage");
            var b = $("#dvOverlay");
            if (a) {
                a.fadeOut("fast", function() {
                    a.remove()
                })
            }
            if (b) {
                b.fadeOut("fast", function() {
                    b.remove()
                })
            }
            if (typeof TT.callBack == "function") {
                TT.callBack.apply();
                TT.callBack = null
            }
        }
    });
    TT.Base64 = $.extend({}, {
        _keyStr: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=",
        encode: function(s) {
            var v = "";
            var a, c, p, b, d, q, r;
            var u = 0;
            s = TT.Base64._utf8_encode(s);
            while (u < s.length) {
                a = s.charCodeAt(u++);
                c = s.charCodeAt(u++);
                p = s.charCodeAt(u++);
                b = a >> 2;
                d = ((a & 3) << 4) | (c >> 4);
                q = ((c & 15) << 2) | (p >> 6);
                r = p & 63;
                if (isNaN(c)) {
                    q = r = 64
                } else {
                    if (isNaN(p)) {
                        r = 64
                    }
                }
                v = v + this._keyStr.charAt(b) + this._keyStr.charAt(d) + this._keyStr.charAt(q) + this._keyStr.charAt(r)
            }
            return v
        },
        decode: function(s) {
            var v = "";
            var a, c, p;
            var b, d, q, r;
            var u = 0;
            s = s.replace(/[^A-Za-z0-9\+\/\=]/g, "");
            while (u < s.length) {
                b = this._keyStr.indexOf(s.charAt(u++));
                d = this._keyStr.indexOf(s.charAt(u++));
                q = this._keyStr.indexOf(s.charAt(u++));
                r = this._keyStr.indexOf(s.charAt(u++));
                a = (b << 2) | (d >> 4);
                c = ((d & 15) << 4) | (q >> 2);
                p = ((q & 3) << 6) | r;
                v = v + String.fromCharCode(a);
                if (q != 64) {
                    v = v + String.fromCharCode(c)
                }
                if (r != 64) {
                    v = v + String.fromCharCode(p)
                }
            }
            v = TT.Base64._utf8_decode(v);
            return v
        },
        _utf8_encode: function(c) {
            c = c.replace(/\r\n/g, "\n");
            var d = "";
            for (var a = 0; a < c.length; a++) {
                var b = c.charCodeAt(a);
                if (b < 128) {
                    d += String.fromCharCode(b)
                } else {
                    if ((b > 127) && (b < 2048)) {
                        d += String.fromCharCode((b >> 6) | 192);
                        d += String.fromCharCode((b & 63) | 128)
                    } else {
                        d += String.fromCharCode((b >> 12) | 224);
                        d += String.fromCharCode(((b >> 6) & 63) | 128);
                        d += String.fromCharCode((b & 63) | 128)
                    }
                }
            }
            return d
        },
        _utf8_decode: function(d) {
            var c = "";
            var b = 0;
            var a = c1 = c2 = 0;
            while (b < d.length) {
                a = d.charCodeAt(b);
                if (a < 128) {
                    c += String.fromCharCode(a);
                    b++
                } else {
                    if ((a > 191) && (a < 224)) {
                        c2 = d.charCodeAt(b + 1);
                        c += String.fromCharCode(((a & 31) << 6) | (c2 & 63));
                        b += 2
                    } else {
                        c2 = d.charCodeAt(b + 1);
                        c3 = d.charCodeAt(b + 2);
                        c += String.fromCharCode(((a & 15) << 12) | ((c2 & 63) << 6) | (c3 & 63));
                        b += 3
                    }
                }
            }
            return c
        }
    });
    TT.ChatType = Object.freeze({
        NotDef: 0,
        QuestionPage: 1,
        MyAccount: 2,
        TutorAccount: 3
    });
    TT.Object = {
        keyOf: function(c, a) {
            var b;
            for (b in c) {
                if (c.hasOwnProperty(b) && c[b] == a) {
                    return b
                }
            }
            return null
        },
        getValues: function(b) {
            var c = [],
                a;
            for (a in b) {
                if (b.hasOwnProperty(a)) {
                    c.push(b[a])
                }
            }
            return c
        },
        getKeys: function(c) {
            var a = [],
                b;
            for (b in c) {
                if (c.hasOwnProperty(b)) {
                    a.push(b)
                }
            }
            return a
        }
    };
    String.prototype.toCapitalize = function() {
        return this.toLowerCase().replace(/^.|\s\S/g, function(a) {
            return a.toUpperCase()
        })
    };
    String.prototype.ellipsis = function(c) {
        var a = this;
        if (a.length <= c) {
            return a.toString()
        }
        var k = a.substr(0, c + 1);
        var b = k.split(" ");
        if (b.length == 1) {
            return k.substr(0, c) + "..."
        }
        var d = k;
        while (d.length > c) {
            b.pop();
            d = b.join(" ") + "..."
        }
        return d
    };
    var g = function(a) {
        return a.replace(/(?:^|\s)\w/g, function(b) {
            return b.toUpperCase()
        })
    };
    jQuery.fn.escapeScriptTag = function() {
        return this.each(function() {
            $(this).val().replace("<script", "[script").replace("<\/script>", "[/script]")
        })
    };
    $.fn.ConfirmPopup = function(r, w, q) {
        var s = $(this);
        r.stopImmediatePropagation();
        r.preventDefault();
        var c = "<div class='alertBg' id='dvPopupMessage' style='display:none;'><div class='alert'><div class='closeAlrt closepopup' id='dvClose'><a href='javascript:void(0);'>X</a></div><div class='heading'>{0}</div><p>{1}</p><div class='btnCont'><input name='' id='btnCancel' type='button' value='Cancel' class='btn'/><input name='' type='button' id='btnOk'  value='Ok' class='btn'/></div></div></div>";
        var b = "<div class='alertFadeBg' id='dvOverlay' style='display:none;'></div>";
        var u = b;
        var d = String.format(c, "Transtutors", w);
        d = u + d;
        $("body").prepend(d);
        var v = $("#dvPopupMessage");
        var a = $("#dvOverlay");
        a.fadeIn("fast");
        v.fadeIn("fast");
        v.find("#btnOk").data("initiator", s);
        $(document).on("click", "#btnOk", function() {
            var j = $(this).data("initiator");
            if (typeof q == "function") {
                q.apply()
            } else {
                if (j) {
                    j.off("click");
                    j.trigger("click")
                }
            }
            a.fadeOut("fast");
            v.fadeOut("fast");
            TT.ModalProgress.show()
        });
        $(document).on("click", "#btnCancel,div.closeAlrt", function() {
            s = null;
            q = null;
            if (v) {
                v.fadeOut("fast", function() {
                    v.remove()
                })
            }
            if (a) {
                a.fadeOut("fast", function() {
                    a.remove()
                })
            }
        })
    }
})();
$(function() {
    $("#hypChat").on("click", function() {
        $("<script type='text/javascript'>var __lc = {};__lc.license = 1096614;(function () {var lc = document.createElement('script'); lc.type = 'text/javascript'; lc.async = true;lc.src = ('https:' == document.location.protocol ? 'https://' : 'http://') + 'cdn.livechatinc.com/tracking.js';var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(lc, s);})();<\/script>").appendTo("body");
        var a = setInterval(function() {
           
        }, 50);
        setTimeout(function() {
            clearInterval(a)
        }, 3000);
        return false
    })
});
jQuery.fn.contentChange = function(c) {
    var d = jQuery(this);
    d.each(function(b) {
        var a = jQuery(this);
        a.data("lastContents", a.html());
        window.watchContentChange = window.watchContentChange ? window.watchContentChange : [];
        window.watchContentChange.push({
            element: a,
            callback: c
        })
    });
    return d
}, setInterval(function() {
    if (window.watchContentChange) {
        for (i in window.watchContentChange) {
            if (window.watchContentChange[i].element.data("lastContents") != window.watchContentChange[i].element.html()) {
                window.watchContentChange[i].callback.apply(window.watchContentChange[i].element);
                window.watchContentChange[i].element.data("lastContents", window.watchContentChange[i].element.html())
            }
        }
    }
}, 500);
var showModalPopup = function(e, g, h, f) {
    TT.ModalPopup.show(e, g, h, f)
};
var showModalProgress = function(c, d) {
    TT.ModalProgress.show(c, d)
};
var getParameterByName = function(e) {
    e = e.replace(/[\[]/, "\\[").replace(/[\]]/, "\\]");
    var f = new RegExp("[\\?&]" + e + "=([^&#]*)", "i"),
        d = f.exec(location.search);
    return d == null ? "" : decodeURIComponent(d[1].replace(/\+/g, " "))
};
var isValidEmail = function(d) {
    var c = d.match(/^\w[\w\.\_\-]*\w\@\w[\w\-\.]*\w\.[a-zA-z]{2,3}$/g);
    if (d != c) {
        return false
    }
    return true
};
$.urlParam = function(d, e) {
    var f = new RegExp("[?&amp;]" + d + "=([^&amp;#]*)").exec(e);
    return f[1] || 0
};
$.extend($.expr[":"], {
    inView: function(h) {
        var g = (document.documentElement.scrollTop || document.body.scrollTop),
            f = $(h).offset().top,
            a = (window.innerHeight && window.innerHeight < $(window).height()) ? window.innerHeight : $(window).height();
        return f > g && ($(h).height() + f) < (g + a)
    }
});
$.fn.hasAttr = function(b) {
    return this.att
};
var getQueryStringParameterByName = function(e) {
    e = e.replace(/[\[]/, "\\[").replace(/[\]]/, "\\]");
    var f = new RegExp("[\\?&]" + e + "=([^&#]*)"),
        d = f.exec(parent.location.search);
    return d == null ? "" : decodeURIComponent(d[1].replace(/\+/g, " "))
};
var SetCookie = function(g, h, f) {
    var e = new Date();
    e.setDate(e.getDate() + f);
    document.cookie = g + "=" + escape(h) + ((f == null) ? "" : ";expires=" + e.toUTCString()) + ";path=/"
};
var ReadCookie = function(f) {
    if (document.cookie.length > 0) {
        var e = document.cookie.indexOf(f + "=");
        if (e != -1) {
            e = e + f.length + 1;
            var d = document.cookie.indexOf(";", e);
            if (d == -1) {
                d = document.cookie.length
            }
            return unescape(document.cookie.substring(e, d))
        }
    }
    return ""
};
(function(b) {
    b.ttAjax = function(a) {
        var d = b.extend({}, b.ttAjax.defaults, a || {});
        b.ajax({
            type: d.type,
            url: d.url,
            data: d.data,
            contentType: d.contentType,
            dataType: d.dataType,
            async: d.async,
            beforeSend: d.beforeSend ? d.beforeSend : function(c) {
                TT.ModalProgress.show()
            },
            complete: d.complete ? d.complete : function(c) {
                TT.ModalProgress.hide()
            },
            success: function(c) {
                if (c.hasOwnProperty("d")) {
                    a.success(c.d)
                } else {
                    a.success(c)
                }
            },
            error: d.error ? d.error : function(c, h, g) {
                TT.ModalPopup.show(d.globalErrorWhileProcessingText)
            }
        })
    };
    b.ttAjax.defaults = {
        type: "POST",
        data: "{}",
        contentType: "application/json; charset=utf-8",
        dataType: "json",
        async: true,
        success: function() {},
        globalErrorWhileProcessingText: "Oops! There is a problem while processing your request"
    }
})(jQuery);
(function(a) {
    a.fn.unveil = function(h, s) {
        var e = a(window),
            b = h || 0,
            d = window.devicePixelRatio > 1,
            f = d ? "data-src-retina" : "data-src",
            j = this,
            g;
        this.one("unveil", function() {
            var k = this.getAttribute(f);
            k = k || this.getAttribute("data-src");
            if (k) {
                this.setAttribute("src", k);
                if (typeof s === "function") {
                    s.call(this)
                }
            }
        });

        function c() {
            var k = j.filter(function() {
                var p = a(this);
                if (p.is(":hidden")) {
                    return
                }
                var o = e.scrollTop(),
                    m = o + e.height(),
                    n = p.offset().top,
                    l = n + p.height();
                return l >= o - b && n <= m + b
            });
            g = k.trigger("unveil");
            j = j.not(g)
        }
        e.on("scroll.unveil resize.unveil lookup.unveil", c);
        c();
        return this
    }
})(window.jQuery || window.Zepto);
var bkExtend = function() {
    var d = arguments;
    if (d.length == 1) {
        d = [this, d[0]]
    }
    for (var c in d[1]) {
        d[0][c] = d[1][c]
    }
    return d[0]
};

function bkClass() {}
bkClass.prototype.construct = function() {};
bkClass.extend = function(f) {
    var e = function() {
        if (arguments[0] !== bkClass) {
            return this.construct.apply(this, arguments)
        }
    };
    var d = new this(bkClass);
    bkExtend(d, f);
    e.prototype = d;
    e.extend = this.extend;
    return e
};
var bkElement = bkClass.extend({
    construct: function(c, d) {
        if (typeof(c) == "string") {
            c = (d || document).createElement(c)
        }
        c = $BK(c);
        return c
    },
    appendTo: function(b) {
        b.appendChild(this);
        return this
    },
    appendBefore: function(b) {
        b.parentNode.insertBefore(this, b);
        return this
    },
    addEvent: function(c, d) {
        bkLib.addEvent(this, c, d);
        return this
    },
    setContent: function(b) {
        this.innerHTML = b;
        return this
    },
    pos: function() {
        var e = curtop = 0;
        var f = obj = this;
        if (obj.offsetParent) {
            do {
                e += obj.offsetLeft;
                curtop += obj.offsetTop
            } while (obj = obj.offsetParent)
        }
        var b = (!window.opera) ? parseInt(this.getStyle("border-width") || this.style.border) || 0 : 0;
        return [e + b, curtop + b + this.offsetHeight]
    },
    noSelect: function() {
        bkLib.noSelect(this);
        return this
    },
    parentTag: function(d) {
        var c = this;
        do {
            if (c && c.nodeName && c.nodeName.toUpperCase() == d) {
                return c
            }
            c = c.parentNode
        } while (c);
        return false
    },
    hasClass: function(b) {
        return this.className.match(new RegExp("(\\s|^)nicEdit-" + b + "(\\s|$)"))
    },
    addClass: function(b) {
        if (!this.hasClass(b)) {
            this.className += " nicEdit-" + b
        }
        return this
    },
    removeClass: function(b) {
        if (this.hasClass(b)) {
            this.className = this.className.replace(new RegExp("(\\s|^)nicEdit-" + b + "(\\s|$)"), " ")
        }
        return this
    },
    setStyle: function(e) {
        var d = this.style;
        for (var f in e) {
            switch (f) {
                case "float":
                    d.cssFloat = d.styleFloat = e[f];
                    break;
                case "opacity":
                    d.opacity = e[f];
                    d.filter = "alpha(opacity=" + Math.round(e[f] * 100) + ")";
                    break;
                case "className":
                    this.className = e[f];
                    break;
                default:
                    d[f] = e[f]
            }
        }
        return this
    },
    getStyle: function(e, f) {
        var d = (!f) ? document.defaultView : f;
        if (this.nodeType == 1) {
            return (d && d.getComputedStyle) ? d.getComputedStyle(this, null).getPropertyValue(e) : this.currentStyle[bkLib.camelize(e)]
        }
    },
    remove: function() {
        this.parentNode.removeChild(this);
        return this
    },
    setAttributes: function(d) {
        for (var c in d) {
            this[c] = d[c]
        }
        return this
    }
});
var bkLib = {
    isMSIE: (navigator.appVersion.indexOf("MSIE") != -1),
    addEvent: function(f, d, e) {
        (f.addEventListener) ? f.addEventListener(d, e, false): f.attachEvent("on" + d, e)
    },
    toArray: function(f) {
        var d = f.length,
            e = new Array(d);
        while (d--) {
            e[d] = f[d]
        }
        return e
    },
    noSelect: function(c) {
        if (c.setAttribute && c.nodeName.toLowerCase() != "input" && c.nodeName.toLowerCase() != "textarea") {
            c.setAttribute("unselectable", "on")
        }
        for (var d = 0; d < c.childNodes.length; d++) {
            bkLib.noSelect(c.childNodes[d])
        }
    },
    camelize: function(b) {
        return b.replace(/\-(.)/g, function(a, d) {
            return d.toUpperCase()
        })
    },
    inArray: function(d, c) {
        return (bkLib.search(d, c) != null)
    },
    search: function(e, f) {
        for (var d = 0; d < e.length; d++) {
            if (e[d] == f) {
                return d
            }
        }
        return null
    },
    cancelEvent: function(b) {
        b = b || window.event;
        if (b.preventDefault && b.stopPropagation) {
            b.preventDefault();
            b.stopPropagation()
        }
        return false
    },
    domLoad: [],
    domLoaded: function() {
        if (arguments.callee.done) {
            return
        }
        arguments.callee.done = true;
        for (i = 0; i < bkLib.domLoad.length; i++) {
            bkLib.domLoad[i]()
        }
    },
    onDomLoaded: function(b) {
        this.domLoad.push(b);
        if (document.addEventListener) {
            document.addEventListener("DOMContentLoaded", bkLib.domLoaded, null)
        } else {
            if (bkLib.isMSIE) {
                document.write("<style>.nicEdit-main p { margin: 0; }</style><script id=__ie_onload defer " + ((location.protocol == "index5c01.html") ? "src='javascript:void(0)'" : "src=//0") + "><\/script>");
                $BK("__ie_onload").onreadystatechange = function() {
                    if (this.readyState == "complete") {
                        bkLib.domLoaded()
                    }
                }
            }
        }
        window.onload = bkLib.domLoaded
    }
};

function $BK(b) {
    if (typeof(b) == "string") {
        b = document.getElementById(b)
    }
    return (b && !b.appendTo) ? bkExtend(b, bkElement.prototype) : b
}
var bkEvent = {
    addEvent: function(d, c) {
        if (c) {
            this.eventList = this.eventList || {};
            this.eventList[d] = this.eventList[d] || [];
            this.eventList[d].push(c)
        }
        return this
    },
    fireEvent: function() {
        var e = bkLib.toArray(arguments),
            f = e.shift();
        if (this.eventList && this.eventList[f]) {
            for (var d = 0; d < this.eventList[f].length; d++) {
                this.eventList[f][d].apply(this, e)
            }
        }
    }
};

function __(b) {
    return b
}
Function.prototype.closure = function() {
    var e = this,
        d = bkLib.toArray(arguments),
        f = d.shift();
    return function() {
        if (typeof(bkLib) != "") {
            return e.apply(f, d.concat(bkLib.toArray(arguments)))
        }
    }
};
Function.prototype.closureListener = function() {
    var e = this,
        f = bkLib.toArray(arguments),
        d = f.shift();
    return function(a) {
        a = a || window.event;
        if (a.target) {
            var b = a.target
        } else {
            var b = a.srcElement
        }
        return e.apply(d, [a, b].concat(f))
    }
};
var nicEditorConfig = bkClass.extend({
    buttons: {
        bold: {
            name: __("Click to Bold"),
            command: "Bold",
            tags: ["B", "STRONG"],
            css: {
                "font-weight": "bold"
            },
            key: "b"
        },
        italic: {
            name: __("Click to Italic"),
            command: "Italic",
            tags: ["EM", "I"],
            css: {
                "font-style": "italic"
            },
            key: "i"
        },
        underline: {
            name: __("Click to Underline"),
            command: "Underline",
            tags: ["U"],
            css: {
                "text-decoration": "underline"
            },
            key: "u"
        },
        left: {
            name: __("Left Align"),
            command: "justifyleft",
            noActive: true
        },
        center: {
            name: __("Center Align"),
            command: "justifycenter",
            noActive: true
        },
        right: {
            name: __("Right Align"),
            command: "justifyright",
            noActive: true
        },
        justify: {
            name: __("Justify Align"),
            command: "justifyfull",
            noActive: true
        },
        ol: {
            name: __("Insert Ordered List"),
            command: "insertorderedlist",
            tags: ["OL"]
        },
        ul: {
            name: __("Insert Unordered List"),
            command: "insertunorderedlist",
            tags: ["UL"]
        },
        subscript: {
            name: __("Click to Subscript"),
            command: "subscript",
            tags: ["SUB"]
        },
        superscript: {
            name: __("Click to Superscript"),
            command: "superscript",
            tags: ["SUP"]
        },
        strikethrough: {
            name: __("Click to Strike Through"),
            command: "strikeThrough",
            css: {
                "text-decoration": "line-through"
            }
        },
        removeformat: {
            name: __("Remove Formatting"),
            command: "removeformat",
            noActive: true
        },
        indent: {
            name: __("Indent Text"),
            command: "indent",
            noActive: true
        },
        outdent: {
            name: __("Remove Indent"),
            command: "outdent",
            noActive: true
        },
        hr: {
            name: __("Horizontal Rule"),
            command: "insertHorizontalRule",
            noActive: true
        }
    },
    iconsPath: "/Resources/js/Nicedit/nicEditorIcons.gif",
    buttonList: ["save", "bold", "italic", "underline", "left", "center", "right", "justify", "ol", "ul", "fontSize", "fontFamily", "fontFormat", "indent", "outdent", "image", "upload", "link", "unlink", "forecolor", "bgcolor"],
    iconList: {
        xhtml: 1,
        bgcolor: 2,
        forecolor: 3,
        bold: 4,
        center: 5,
        hr: 6,
        indent: 7,
        italic: 8,
        justify: 9,
        left: 10,
        ol: 11,
        outdent: 12,
        removeformat: 13,
        right: 14,
        save: 25,
        strikethrough: 16,
        subscript: 17,
        superscript: 18,
        ul: 19,
        underline: 20,
        image: 21,
        link: 22,
        unlink: 23,
        close: 24,
        arrow: 26,
        upload: 27
    }
});
var nicEditors = {
    nicPlugins: [],
    editors: [],
    registerPlugin: function(c, d) {
        this.nicPlugins.push({
            p: c,
            o: d
        })
    },
    allTextAreas: function(f) {
        var e = document.getElementsByTagName("textarea");
        for (var d = 0; d < e.length; d++) {
            nicEditors.editors.push(new nicEditor(f).panelInstance(e[d]))
        }
        return nicEditors.editors
    },
    findEditor: function(f) {
        var d = nicEditors.editors;
        for (var e = 0; e < d.length; e++) {
            if (d[e].instanceById(f)) {
                return d[e].instanceById(f)
            }
        }
    }
};
var nicEditor = bkClass.extend({
    construct: function(f) {
        this.options = new nicEditorConfig();
        bkExtend(this.options, f);
        this.nicInstances = new Array();
        this.loadedPlugins = new Array();
        var e = nicEditors.nicPlugins;
        for (var d = 0; d < e.length; d++) {
            this.loadedPlugins.push(new e[d].p(this, e[d].o))
        }
        nicEditors.editors.push(this);
        bkLib.addEvent(document.body, "mousedown", this.selectCheck.closureListener(this))
    },
    panelInstance: function(d, f) {
        d = this.checkReplace($BK(d));
        var e = new bkElement("DIV").setStyle({
            width: (parseInt(d.getStyle("width")) || d.clientWidth) + "px"
        }).appendBefore(d);
        this.setPanel(e);
        return this.addInstance(d, f)
    },
    checkReplace: function(c) {
        var d = nicEditors.findEditor(c);
        if (d) {
            d.removeInstance(c);
            d.removePanel()
        }
        return c
    },
    addInstance: function(d, f) {
        d = this.checkReplace($BK(d));
        if (d.contentEditable || !!window.opera) {
            var e = new nicEditorInstance(d, f, this)
        } else {
            var e = new nicEditorIFrameInstance(d, f, this)
        }
        this.nicInstances.push(e);
        return this
    },
    removeInstance: function(f) {
        f = $BK(f);
        var d = this.nicInstances;
        for (var e = 0; e < d.length; e++) {
            if (d[e].e == f) {
                d[e].remove();
                this.nicInstances.splice(e, 1)
            }
        }
    },
    removePanel: function(b) {
        if (this.nicPanel) {
            this.nicPanel.remove();
            this.nicPanel = null
        }
    },
    instanceById: function(f) {
        f = $BK(f);
        var d = this.nicInstances;
        for (var e = 0; e < d.length; e++) {
            if (d[e].e == f) {
                return d[e]
            }
        }
    },
    setPanel: function(b) {
        this.nicPanel = new nicEditorPanel($BK(b), this.options, this);
        this.fireEvent("panel", this.nicPanel);
        return this
    },
    nicCommand: function(c, d) {
        if (this.selectedInstance) {
            this.selectedInstance.nicCommand(c, d)
        }
    },
    getIcon: function(g, f) {
        var h = this.options.iconList[g];
        var e = (f.iconFiles) ? f.iconFiles[g] : "";
        return {
            backgroundImage: "url('" + ((h) ? this.options.iconsPath : e) + "')",
            backgroundPosition: ((h) ? ((h - 1) * -18) : 0) + "px 0px"
        }
    },
    selectCheck: function(f, e) {
        var d = false;
        do {
            if (e.className && e.className.indexOf("nicEdit") != -1) {
                return false
            }
        } while (e = e.parentNode);
        this.fireEvent("blur", this.selectedInstance, e);
        this.lastSelectedInstance = this.selectedInstance;
        this.selectedInstance = null;
        return false
    }
});
nicEditor = nicEditor.extend(bkEvent);
var nicEditorInstance = bkClass.extend({
    isSelected: false,
    construct: function(m, p, q) {
        this.ne = q;
        this.elm = this.e = m;
        this.options = p || {};
        newX = parseInt(m.getStyle("width")) || m.clientWidth;
        newY = parseInt(m.getStyle("height")) || m.clientHeight;
        this.initialHeight = newY - 8;
        var l = (m.nodeName.toLowerCase() == "textarea");
        if (l || this.options.hasPanel) {
            var e = (bkLib.isMSIE && !((typeof document.body.style.maxHeight != "") && document.compatMode == "CSS1Compat"));
            var o = {
                width: newX + "px",
                border: "1px solid #ccc",
                borderTop: 0,
                overflowY: "auto",
                overflowX: "hidden"
            };
            o[(e) ? "height" : "maxHeight"] = (this.ne.options.maxHeight) ? this.ne.options.maxHeight + "px" : null;
            this.editorContain = new bkElement("DIV").setStyle(o).appendBefore(m);
            var f = new bkElement("DIV").setStyle({
                width: (newX - 8) + "px",
                margin: "4px",
                minHeight: newY + "px"
            }).addClass("main").appendTo(this.editorContain);
            m.setStyle({
                display: "none"
            });
            f.innerHTML = m.innerHTML;
            if (l) {
                f.setContent(m.value);
                this.copyElm = m;
                var n = m.parentTag("FORM");
                if (n) {
                    bkLib.addEvent(n, "submit", this.saveContent.closure(this))
                }
            }
            f.setStyle((e) ? {
                height: newY + "px"
            } : {
                overflow: "hidden"
            });
            this.elm = f
        }
        this.ne.addEvent("blur", this.blur.closure(this));
        this.init();
        this.blur()
    },
    init: function() {
        this.elm.setAttribute("contentEditable", "true");
        if (this.getContent() == "") {
            this.setContent("<br />")
        }
        this.instanceDoc = document.defaultView;
        this.elm.addEvent("mousedown", this.selected.closureListener(this)).addEvent("keypress", this.keyDown.closureListener(this)).addEvent("focus", this.selected.closure(this)).addEvent("blur", this.blur.closure(this)).addEvent("keyup", this.selected.closure(this));
        this.ne.fireEvent("add", this);
        this.elm.addEvent("paste", this.initPasteClean.closureListener(this))
    },
    initPasteClean: function() {
        this.pasteCache = this.getElm().innerHTML;
        setTimeout(this.pasteClean.closure(this), 100)
    },
    pasteClean: function() {
        this.pasteCache = this.pasteCache || "";
        var p = "";
        var r = "";
        var m = this.getElm().innerHTML;
        this.ne.fireEvent("get", this);
        var n = 0;
        var k = 0;
        var s = "";
        var q = document.createElement("div");
        if (m.replace(/(<br\s*\/?>\s*)+/g, "").trim() == "") {
            return
        }
        for (n = 0; m.charAt(n) == this.pasteCache.charAt(n); n++) {
            p += this.pasteCache.charAt(n)
        }
        for (var o = n; o >= 0; o--) {
            if (this.pasteCache.charAt(o) == "<") {
                n = o;
                p = this.pasteCache.substring(0, n);
                break
            } else {
                if (this.pasteCache.charAt(o) == ">") {
                    break
                }
            }
        }
        m = this.reverse(m);
        this.pasteCache = this.reverse(this.pasteCache);
        for (k = 0; m.charAt(k) == this.pasteCache.charAt(k); k++) {
            r += this.pasteCache.charAt(k)
        }
        for (var o = k; o >= 0; o--) {
            if (this.pasteCache.charAt(o) == ">") {
                k = o;
                r = this.pasteCache.substring(0, k);
                break
            } else {
                if (this.pasteCache.charAt(o) == "<") {
                    break
                }
            }
        }
        r = this.reverse(r);
        if (n == m.length - k) {
            return false
        }
        m = this.reverse(m);
        s = m.substring(n, m.length - k);
        s = this.validTags(s);
        s = s.replace(/<b(\s+|>)/g, "<strong$1");
        s = s.replace(/<\/b(\s+|>)/g, "</strong$1");
        s = s.replace(/<i(\s+|>)/g, "<em$1");
        s = s.replace(/<\/i(\s+|>)/g, "</em$1");
        s = s.replace(/<!(?:--[\s\S]*?--\s*)?>\s*/g, "");
        s = s.replace(/&nbsp;/gi, " ");
        s = s.replace(/ <\//gi, "</");
        while (s.indexOf("  ") != -1) {
            var l = s.split("  ");
            s = l.join(" ")
        }
        s = s.replace(/^\s*|\s*$/g, "");
        s = s.replace(/<[^>]*>/g, function(a) {
            a = a.replace(/ ([^=]+)="[^"]*"/g, function(b, c) {
                if (c == "alt" || c == "align" || c == "colspan" || c == "rowspan" || c == "href" || c == "src" || c == "title") {
                    return b
                }
                return ""
            });
            return a
        });
        s = s.replace(/<\?xml[^>]*>/g, "");
        s = s.replace(/<[^ >]+:[^>]*>/g, "");
        s = s.replace(/<\/[^ >]+:[^>]*>/g, "");
        s = s.replace(/<(div|span|style|meta|link){1}.*?>/gi, "");
        s = s.replace(/<colgroup(\s+|>)/g, "");
        s = s.replace(/<col(\s+|>)/g, "");
        s = s.replace(/\n\n/g, "\n");
        this.content = p + s + r;
        this.ne.fireEvent("set", this);
        this.elm.innerHTML = this.content;
        this.contentCleaned = true
    },
    reverse: function(f) {
        var e = "";
        for (var d = f.length - 1; d >= 0; d--) {
            e += f.charAt(d)
        }
        return e
    },
    validTags: function(c) {
        var d = c;
        d = d.replace(/<[^> ]*/g, function(a) {
            return a.toLowerCase()
        });
        d = d.replace(/<[^>]*>/g, function(a) {
            a = a.replace(/ [^=]+=/g, function(b) {
                return b.toLowerCase()
            });
            return a
        });
        d = d.replace(/<[^>]*>/g, function(a) {
            a = a.replace(/( [^=]+=)([^"][^ >]*)/g, '$1"$2"');
            return a
        });
        return d
    },
    remove: function() {
        this.saveContent();
        if (this.copyElm || this.options.hasPanel) {
            this.editorContain.remove();
            this.e.setStyle({
                display: "block"
            });
            this.ne.removePanel()
        }
        this.disable();
        this.ne.fireEvent("remove", this)
    },
    disable: function() {
        this.elm.setAttribute("contentEditable", "false")
    },
    getSel: function() {
        return (window.getSelection) ? window.getSelection() : document.selection
    },
    getRng: function() {
        var b = this.getSel();
        if (!b || b.rangeCount === 0) {
            return
        }
        return (b.rangeCount > 0) ? b.getRangeAt(0) : b.createRange()
    },
    selRng: function(d, c) {
        if (window.getSelection) {
            c.removeAllRanges();
            c.addRange(d)
        } else {
            d.select()
        }
    },
    selElm: function() {
        var h = this.getRng();
        if (!h) {
            return
        }
        if (h.startContainer) {
            var g = h.startContainer;
            if (h.cloneContents().childNodes.length == 1) {
                for (var e = 0; e < g.childNodes.length; e++) {
                    var f = g.childNodes[e].ownerDocument.createRange();
                    f.selectNode(g.childNodes[e]);
                    if (h.compareBoundaryPoints(Range.START_TO_START, f) != 1 && h.compareBoundaryPoints(Range.END_TO_END, f) != -1) {
                        return $BK(g.childNodes[e])
                    }
                }
            }
            return $BK(g)
        } else {
            return $BK((this.getSel().type == "Control") ? h.item(0) : h.parentElement())
        }
    },
    saveRng: function() {
        this.savedRange = this.getRng();
        this.savedSel = this.getSel()
    },
    restoreRng: function() {
        if (this.savedRange) {
            this.selRng(this.savedRange, this.savedSel)
        }
    },
    keyDown: function(c, d) {
        if (c.ctrlKey) {
            this.ne.fireEvent("key", this, c)
        }
    },
    selected: function(f, e) {
        if (!e && !(e = this.selElm)) {
            e = this.selElm()
        }
        if (!f.ctrlKey) {
            var d = this.ne.selectedInstance;
            if (d != this) {
                if (d) {
                    this.ne.fireEvent("blur", d, e)
                }
                this.ne.selectedInstance = this;
                this.ne.fireEvent("focus", d, e)
            }
            this.ne.fireEvent("selected", d, e);
            this.isFocused = true;
            this.elm.addClass("selected")
        }
        return false
    },
    blur: function() {
        this.isFocused = false;
        this.elm.removeClass("selected")
    },
    saveContent: function() {
        if (this.copyElm || this.options.hasPanel) {
            this.ne.fireEvent("save", this);
            (this.copyElm) ? this.copyElm.value = this.getContent(): this.e.innerHTML = this.getContent()
        }
    },
    getElm: function() {
        return this.elm
    },
    getContent: function() {
        this.content = this.getElm().innerHTML;
        this.ne.fireEvent("get", this);
        return this.content
    },
    setContent: function(b) {
        this.content = b;
        this.ne.fireEvent("set", this);
        this.elm.innerHTML = this.content
    },
    nicCommand: function(c, d) {
        document.execCommand(c, false, d)
    }
});
var nicEditorIFrameInstance = nicEditorInstance.extend({
    savedStyles: [],
    init: function() {
        var c = this.elm.innerHTML.replace(/^\s+|\s+$/g, "");
        this.elm.innerHTML = "";
        (!c) ? c = "<br />": c;
        this.initialContent = c;
        this.elmFrame = new bkElement("iframe").setAttributes({
            src: "javascript:;",
            frameBorder: 0,
            allowTransparency: "true",
            scrolling: "no"
        }).setStyle({
            height: "100px",
            width: "100%"
        }).addClass("frame").appendTo(this.elm);
        if (this.copyElm) {
            this.elmFrame.setStyle({
                width: (this.elm.offsetWidth - 4) + "px"
            })
        }
        var d = ["font-size", "font-family", "font-weight", "color"];
        for (itm in d) {
            this.savedStyles[bkLib.camelize(itm)] = this.elm.getStyle(itm)
        }
        setTimeout(this.initFrame.closure(this), 50)
    },
    disable: function() {
        this.elm.innerHTML = this.getContent()
    },
    initFrame: function() {
        var c = $BK(this.elmFrame.contentWindow.document);
        c.designMode = "on";
        c.open();
        var d = this.ne.options.externalCSS;
        c.write("<html><head>" + ((d) ? '<link href="' + d + '" rel="stylesheet" type="text/css" />' : "") + '</head><body id="nicEditContent" style="margin: 0 !important; background-color: transparent !important;">' + this.initialContent + "</body></html>");
        c.close();
        this.frameDoc = c;
        this.frameWin = $BK(this.elmFrame.contentWindow);
        this.frameContent = $BK(this.frameWin.document.body).setStyle(this.savedStyles);
        this.instanceDoc = this.frameWin.document.defaultView;
        this.heightUpdate();
        this.frameDoc.addEvent("mousedown", this.selected.closureListener(this)).addEvent("keyup", this.heightUpdate.closureListener(this)).addEvent("keydown", this.keyDown.closureListener(this)).addEvent("keyup", this.selected.closure(this));
        this.ne.fireEvent("add", this)
    },
    getElm: function() {
        return this.frameContent
    },
    setContent: function(b) {
        this.content = b;
        this.ne.fireEvent("set", this);
        this.frameContent.innerHTML = this.content;
        this.heightUpdate()
    },
    getSel: function() {
        return (this.frameWin) ? this.frameWin.getSelection() : this.frameDoc.selection
    },
    heightUpdate: function() {
        this.elmFrame.style.height = Math.max(this.frameContent.offsetHeight, this.initialHeight) + "px"
    },
    nicCommand: function(c, d) {
        this.frameDoc.execCommand(c, false, d);
        setTimeout(this.heightUpdate.closure(this), 100)
    }
});
var nicEditorPanel = bkClass.extend({
    construct: function(h, e, g) {
        this.elm = h;
        this.options = e;
        this.ne = g;
        this.panelButtons = new Array();
        this.buttonList = bkExtend([], this.ne.options.buttonList);
        this.panelContain = new bkElement("DIV").setStyle({
            overflow: "hidden",
            width: "100%",
            border: "1px solid #cccccc",
            backgroundColor: "#efefef"
        }).addClass("panelContain");
        this.panelElm = new bkElement("DIV").setStyle({
            margin: "2px",
            marginTop: "0px",
            zoom: 1,
            overflow: "hidden"
        }).addClass("panel").appendTo(this.panelContain);
        this.panelContain.appendTo(h);
        var k = this.ne.options;
        var j = k.buttons;
        for (button in j) {
            this.addButton(button, k, true)
        }
        this.reorder();
        h.noSelect()
    },
    addButton: function(buttonName, options, noOrder) {
        var button = options.buttons[buttonName];
        var type = (button.type) ? eval("(typeof(" + button.type + ') == "") ? null : ' + button.type + ";") : nicEditorButton;
        var hasButton = bkLib.inArray(this.buttonList, buttonName);
        if (type && (hasButton || this.ne.options.fullPanel)) {
            this.panelButtons.push(new type(this.panelElm, buttonName, options, this.ne));
            if (!hasButton) {
                this.buttonList.push(buttonName)
            }
        }
    },
    findButton: function(c) {
        for (var d = 0; d < this.panelButtons.length; d++) {
            if (this.panelButtons[d].name == c) {
                return this.panelButtons[d]
            }
        }
    },
    reorder: function() {
        var f = this.buttonList;
        for (var d = 0; d < f.length; d++) {
            var e = this.findButton(f[d]);
            if (e) {
                this.panelElm.appendChild(e.margin)
            }
        }
    },
    remove: function() {
        this.elm.remove()
    }
});
var nicEditorButton = bkClass.extend({
    construct: function(g, f, h, e) {
        this.options = h.buttons[f];
        this.name = f;
        this.ne = e;
        this.elm = g;
        this.margin = new bkElement("DIV").setStyle({
            "float": "left",
            marginTop: "2px"
        }).appendTo(g);
        this.contain = new bkElement("DIV").setStyle({
            width: "20px",
            height: "20px"
        }).addClass("buttonContain").appendTo(this.margin);
        this.border = new bkElement("DIV").setStyle({
            backgroundColor: "#efefef",
            border: "1px solid #efefef"
        }).appendTo(this.contain);
        this.button = new bkElement("DIV").setStyle({
            width: "18px",
            height: "18px",
            overflow: "hidden",
            zoom: 1,
            cursor: "pointer"
        }).addClass("button").setStyle(this.ne.getIcon(f, h)).appendTo(this.border);
        this.button.addEvent("mouseover", this.hoverOn.closure(this)).addEvent("mouseout", this.hoverOff.closure(this)).addEvent("mousedown", this.mouseClick.closure(this)).noSelect();
        if (!window.opera) {
            this.button.onmousedown = this.button.onclick = bkLib.cancelEvent
        }
        e.addEvent("selected", this.enable.closure(this)).addEvent("blur", this.disable.closure(this)).addEvent("key", this.key.closure(this));
        this.disable();
        this.init()
    },
    init: function() {},
    hide: function() {
        this.contain.setStyle({
            display: "none"
        })
    },
    updateState: function() {
        if (this.isDisabled) {
            this.setBg()
        } else {
            if (this.isHover) {
                this.setBg("hover")
            } else {
                if (this.isActive) {
                    this.setBg("active")
                } else {
                    this.setBg()
                }
            }
        }
    },
    setBg: function(d) {
        switch (d) {
            case "hover":
                var c = {
                    border: "1px solid #666",
                    backgroundColor: "#ddd"
                };
                break;
            case "active":
                var c = {
                    border: "1px solid #666",
                    backgroundColor: "#ccc"
                };
                break;
            default:
                var c = {
                    border: "1px solid #efefef",
                    backgroundColor: "#efefef"
                }
        }
        this.border.setStyle(c).addClass("button-" + d)
    },
    checkNodes: function(d) {
        var c = d;
        do {
            if (this.options.tags && bkLib.inArray(this.options.tags, c.nodeName)) {
                this.activate();
                return true
            }
        } while (c = c.parentNode && c.className != "nicEdit");
        c = $BK(d);
        while (c.nodeType == 3) {
            c = $BK(c.parentNode)
        }
        if (this.options.css) {
            for (itm in this.options.css) {
                if (c.getStyle(itm, this.ne.selectedInstance.instanceDoc) == this.options.css[itm]) {
                    this.activate();
                    return true
                }
            }
        }
        this.deactivate();
        return false
    },
    activate: function() {
        if (!this.isDisabled) {
            this.isActive = true;
            this.updateState();
            this.ne.fireEvent("buttonActivate", this)
        }
    },
    deactivate: function() {
        this.isActive = false;
        this.updateState();
        if (!this.isDisabled) {
            this.ne.fireEvent("buttonDeactivate", this)
        }
    },
    enable: function(d, c) {
        this.isDisabled = false;
        this.contain.setStyle({
            opacity: 1
        }).addClass("buttonEnabled");
        this.updateState();
        this.checkNodes(c)
    },
    disable: function(d, c) {
        this.isDisabled = true;
        this.contain.setStyle({
            opacity: 0.6
        }).removeClass("buttonEnabled");
        this.updateState()
    },
    toggleActive: function() {
        (this.isActive) ? this.deactivate(): this.activate()
    },
    hoverOn: function() {
        if (!this.isDisabled) {
            this.isHover = true;
            this.updateState();
            this.ne.fireEvent("buttonOver", this)
        }
    },
    hoverOff: function() {
        this.isHover = false;
        this.updateState();
        this.ne.fireEvent("buttonOut", this)
    },
    mouseClick: function() {
        if (this.options.command) {
            this.ne.nicCommand(this.options.command, this.options.commandArgs);
            if (!this.options.noActive) {
                this.toggleActive()
            }
        }
        this.ne.fireEvent("buttonClick", this)
    },
    key: function(d, c) {
        if (this.options.key && c.ctrlKey && String.fromCharCode(c.keyCode || c.charCode).toLowerCase() == this.options.key) {
            this.mouseClick();
            if (c.preventDefault) {
                c.preventDefault()
            }
        }
    }
});
var nicPlugin = bkClass.extend({
    construct: function(c, d) {
        this.options = d;
        this.ne = c;
        this.ne.addEvent("panel", this.loadPanel.closure(this));
        this.init()
    },
    loadPanel: function(f) {
        var d = this.options.buttons;
        for (var e in d) {
            f.addButton(e, this.options)
        }
        f.reorder()
    },
    init: function() {}
});
var nicPaneOptions = {};
var nicEditorPane = bkClass.extend({
    construct: function(g, h, e, f) {
        this.ne = h;
        this.elm = g;
        this.pos = g.pos();
        this.contain = new bkElement("div").setStyle({
            zIndex: "99999",
            overflow: "hidden",
            position: "absolute",
            left: this.pos[0] + "px",
            top: this.pos[1] + "px"
        });
        this.pane = new bkElement("div").setStyle({
            fontSize: "12px",
            border: "1px solid #ccc",
            overflow: "hidden",
            padding: "4px",
            textAlign: "left",
            backgroundColor: "#ffffc9"
        }).addClass("pane").setStyle(e).appendTo(this.contain);
        if (f && !f.options.noClose) {
            this.close = new bkElement("div").setStyle({
                "float": "right",
                height: "16px",
                width: "16px",
                cursor: "pointer"
            }).setStyle(this.ne.getIcon("close", nicPaneOptions)).addEvent("mousedown", f.removePane.closure(this)).appendTo(this.pane)
        }
        this.contain.noSelect().appendTo(document.body);
        this.position();
        this.init()
    },
    init: function() {},
    position: function() {
        if (this.ne.nicPanel) {
            var d = this.ne.nicPanel.elm;
            var e = d.pos();
            var f = e[0] + parseInt(d.getStyle("width")) - (parseInt(this.pane.getStyle("width")) + 8);
            if (f < this.pos[0]) {
                this.contain.setStyle({
                    left: f + "px"
                })
            }
        }
    },
    toggle: function() {
        this.isVisible = !this.isVisible;
        this.contain.setStyle({
            display: ((this.isVisible) ? "block" : "none")
        })
    },
    remove: function() {
        if (this.contain) {
            this.contain.remove();
            this.contain = null
        }
    },
    append: function(b) {
        b.appendTo(this.pane)
    },
    setContent: function(b) {
        this.pane.setContent(b)
    }
});
var nicEditorAdvancedButton = nicEditorButton.extend({
    init: function() {
        this.ne.addEvent("selected", this.removePane.closure(this)).addEvent("blur", this.removePane.closure(this))
    },
    mouseClick: function() {
        if (!this.isDisabled) {
            if (this.pane && this.pane.pane) {
                this.removePane()
            } else {
                this.pane = new nicEditorPane(this.contain, this.ne, {
                    width: (this.width || "270px"),
                    backgroundColor: "#fff"
                }, this);
                this.addPane();
                this.ne.selectedInstance.saveRng()
            }
        }
    },
    addForm: function(o, k) {
        this.form = new bkElement("form").addEvent("submit", this.submit.closureListener(this));
        this.pane.append(this.form);
        this.inputs = {};
        for (itm in o) {
            var n = o[itm];
            var l = "";
            if (k) {
                l = k.getAttribute(itm)
            }
            if (!l) {
                l = n.value || ""
            }
            var j = o[itm].type;
            if (j == "title") {
                new bkElement("div").setContent(n.txt).setStyle({
                    fontSize: "14px",
                    fontWeight: "bold",
                    padding: "0px",
                    margin: "2px 0"
                }).appendTo(this.form)
            } else {
                var f = new bkElement("div").setStyle({
                    overflow: "hidden",
                    clear: "both"
                }).appendTo(this.form);
                if (n.txt) {
                    new bkElement("label").setAttributes({
                        "for": itm
                    }).setContent(n.txt).setStyle({
                        margin: "2px 4px",
                        fontSize: "13px",
                        width: "50px",
                        lineHeight: "20px",
                        textAlign: "right",
                        "float": "left"
                    }).appendTo(f)
                }
                switch (j) {
                    case "text":
                        this.inputs[itm] = new bkElement("input").setAttributes({
                            id: itm,
                            value: l,
                            type: "text"
                        }).setStyle({
                            margin: "2px 0",
                            fontSize: "13px",
                            "float": "left",
                            height: "20px",
                            border: "1px solid #ccc",
                            overflow: "hidden"
                        }).setStyle(n.style).appendTo(f);
                        break;
                    case "select":
                        this.inputs[itm] = new bkElement("select").setAttributes({
                            id: itm
                        }).setStyle({
                            border: "1px solid #ccc",
                            "float": "left",
                            margin: "2px 0"
                        }).appendTo(f);
                        for (opt in n.options) {
                            var m = new bkElement("option").setAttributes({
                                value: opt,
                                selected: (opt == l) ? "selected" : ""
                            }).setContent(n.options[opt]).appendTo(this.inputs[itm])
                        }
                        break;
                    case "content":
                        this.inputs[itm] = new bkElement("textarea").setAttributes({
                            id: itm
                        }).setStyle({
                            border: "1px solid #ccc",
                            "float": "left"
                        }).setStyle(n.style).appendTo(f);
                        this.inputs[itm].value = l
                }
            }
        }
        new bkElement("input").setAttributes({
            type: "submit"
        }).setStyle({
            backgroundColor: "#efefef",
            border: "1px solid #ccc",
            margin: "3px 0",
            "float": "left",
            clear: "both"
        }).appendTo(this.form);
        this.form.onsubmit = bkLib.cancelEvent
    },
    submit: function() {},
    findElm: function(f, g, h) {
        var j = this.ne.selectedInstance.getElm().getElementsByTagName(f);
        for (var k = 0; k < j.length; k++) {
            if (j[k].getAttribute(g) == h) {
                return $BK(j[k])
            }
        }
    },
    removePane: function() {
        if (this.pane) {
            this.pane.remove();
            this.pane = null;
            this.ne.selectedInstance.restoreRng()
        }
    }
});
var nicButtonTips = bkClass.extend({
    construct: function(b) {
        this.ne = b;
        b.addEvent("buttonOver", this.show.closure(this)).addEvent("buttonOut", this.hide.closure(this))
    },
    show: function(b) {
        this.timer = setTimeout(this.create.closure(this, b), 400)
    },
    create: function(b) {
        this.timer = null;
        if (!this.pane) {
            this.pane = new nicEditorPane(b.button, this.ne, {
                fontSize: "12px",
                marginTop: "5px"
            });
            this.pane.setContent(b.options.name)
        }
    },
    hide: function(b) {
        if (this.timer) {
            clearTimeout(this.timer)
        }
        if (this.pane) {
            this.pane = this.pane.remove()
        }
    }
});
nicEditors.registerPlugin(nicButtonTips);
var nicSelectOptions = {
    buttons: {
        fontSize: {
            name: __("Select Font Size"),
            type: "nicEditorFontSizeSelect",
            command: "fontsize"
        },
        fontFamily: {
            name: __("Select Font Family"),
            type: "nicEditorFontFamilySelect",
            command: "fontname"
        },
        fontFormat: {
            name: __("Select Font Format"),
            type: "nicEditorFontFormatSelect",
            command: "formatBlock"
        }
    }
};
var nicEditorSelect = bkClass.extend({
    construct: function(g, f, h, e) {
        this.options = h.buttons[f];
        this.elm = g;
        this.ne = e;
        this.name = f;
        this.selOptions = new Array();
        this.margin = new bkElement("div").setStyle({
            "float": "left",
            margin: "2px 1px 0 1px"
        }).appendTo(this.elm);
        this.contain = new bkElement("div").setStyle({
            width: "90px",
            height: "20px",
            cursor: "pointer",
            overflow: "hidden"
        }).addClass("selectContain").addEvent("click", this.toggle.closure(this)).appendTo(this.margin);
        this.items = new bkElement("div").setStyle({
            overflow: "hidden",
            zoom: 1,
            border: "1px solid #ccc",
            paddingLeft: "3px",
            backgroundColor: "#fff"
        }).appendTo(this.contain);
        this.control = new bkElement("div").setStyle({
            overflow: "hidden",
            "float": "right",
            height: "18px",
            width: "16px"
        }).addClass("selectControl").setStyle(this.ne.getIcon("arrow", h)).appendTo(this.items);
        this.txt = new bkElement("div").setStyle({
            overflow: "hidden",
            "float": "left",
            width: "66px",
            height: "14px",
            marginTop: "1px",
            fontFamily: "sans-serif",
            textAlign: "center",
            fontSize: "12px"
        }).addClass("selectTxt").appendTo(this.items);
        if (!window.opera) {
            this.contain.onmousedown = this.control.onmousedown = this.txt.onmousedown = bkLib.cancelEvent
        }
        this.margin.noSelect();
        this.ne.addEvent("selected", this.enable.closure(this)).addEvent("blur", this.disable.closure(this));
        this.disable();
        this.init()
    },
    disable: function() {
        this.isDisabled = true;
        this.close();
        this.contain.setStyle({
            opacity: 0.6
        })
    },
    enable: function(b) {
        this.isDisabled = false;
        this.close();
        this.contain.setStyle({
            opacity: 1
        })
    },
    setDisplay: function(b) {
        this.txt.setContent(b)
    },
    toggle: function() {
        if (!this.isDisabled) {
            (this.pane) ? this.close(): this.open()
        }
    },
    open: function() {
        this.pane = new nicEditorPane(this.items, this.ne, {
            width: "88px",
            padding: "0px",
            borderTop: 0,
            borderLeft: "1px solid #ccc",
            borderRight: "1px solid #ccc",
            borderBottom: "0px",
            backgroundColor: "#fff"
        });
        for (var h = 0; h < this.selOptions.length; h++) {
            var e = this.selOptions[h];
            var f = new bkElement("div").setStyle({
                overflow: "hidden",
                borderBottom: "1px solid #ccc",
                width: "88px",
                textAlign: "left",
                overflow: "hidden",
                cursor: "pointer"
            });
            var g = new bkElement("div").setStyle({
                padding: "0px 4px"
            }).setContent(e[1]).appendTo(f).noSelect();
            g.addEvent("click", this.update.closure(this, e[0])).addEvent("mouseover", this.over.closure(this, g)).addEvent("mouseout", this.out.closure(this, g)).setAttributes("id", e[0]);
            this.pane.append(f);
            if (!window.opera) {
                g.onmousedown = bkLib.cancelEvent
            }
        }
    },
    close: function() {
        if (this.pane) {
            this.pane = this.pane.remove()
        }
    },
    over: function(b) {
        b.setStyle({
            backgroundColor: "#ccc"
        })
    },
    out: function(b) {
        b.setStyle({
            backgroundColor: "#fff"
        })
    },
    add: function(c, d) {
        this.selOptions.push(new Array(c, d))
    },
    update: function(b) {
        this.ne.nicCommand(this.options.command, b);
        this.close()
    }
});
var nicEditorFontSizeSelect = nicEditorSelect.extend({
    sel: {
        1: "1&nbsp;(8pt)",
        2: "2&nbsp;(10pt)",
        3: "3&nbsp;(12pt)",
        4: "4&nbsp;(14pt)",
        5: "5&nbsp;(18pt)",
        6: "6&nbsp;(24pt)"
    },
    init: function() {
        this.setDisplay("Font&nbsp;Size...");
        for (itm in this.sel) {
            this.add(itm, '<font size="' + itm + '">' + this.sel[itm] + "</font>")
        }
    }
});
var nicEditorFontFamilySelect = nicEditorSelect.extend({
    sel: {
        arial: "Arial",
        "comic sans ms": "Comic Sans",
        "courier new": "Courier New",
        georgia: "Georgia",
        helvetica: "Helvetica",
        impact: "Impact",
        "times new roman": "Times",
        "trebuchet ms": "Trebuchet",
        verdana: "Verdana"
    },
    init: function() {
        this.setDisplay("Font&nbsp;Family...");
        for (itm in this.sel) {
            this.add(itm, '<font face="' + itm + '">' + this.sel[itm] + "</font>")
        }
    }
});
var nicEditorFontFormatSelect = nicEditorSelect.extend({
    sel: {
        p: "Paragraph",
        pre: "Pre",
        h6: "Heading&nbsp;6",
        h5: "Heading&nbsp;5",
        h4: "Heading&nbsp;4",
        h3: "Heading&nbsp;3",
        h2: "Heading&nbsp;2",
        h1: "Heading&nbsp;1"
    },
    init: function() {
        this.setDisplay("Font&nbsp;Format...");
        for (itm in this.sel) {
            var b = itm.toUpperCase();
            this.add("<" + b + ">", "<" + itm + ' style="padding: 0px; margin: 0px;">' + this.sel[itm] + "</" + b + ">")
        }
    }
});
nicEditors.registerPlugin(nicPlugin, nicSelectOptions);
var nicLinkOptions = {
    buttons: {
        link: {
            name: "Add Link",
            type: "nicLinkButton",
            tags: ["A"]
        },
        unlink: {
            name: "Remove Link",
            command: "unlink",
            noActive: true
        }
    }
};
var nicLinkButton = nicEditorAdvancedButton.extend({
    addPane: function() {
        this.ln = this.ne.selectedInstance.selElm().parentTag("A");
        this.addForm({
            "": {
                type: "title",
                txt: "Add/Edit Link"
            },
            href: {
                type: "text",
                txt: "URL",
                value: "http://",
                style: {
                    width: "150px"
                }
            },
            title: {
                type: "text",
                txt: "Title"
            },
            target: {
                type: "select",
                txt: "Open In",
                options: {
                    "": "Current Window",
                    _blank: "New Window"
                },
                style: {
                    width: "100px"
                }
            }
        }, this.ln)
    },
    submit: function(f) {
        var e = this.inputs.href.value;
        if (e == "http://" || e == "") {
            alert("You must enter a URL to Create a Link");
            return false
        }
        this.removePane();
        if (!this.ln) {
            var d = "javascript:nicTemp();";
            this.ne.nicCommand("createlink", d);
            this.ln = this.findElm("A", "href", d)
        }
        if (this.ln) {
            this.ln.setAttributes({
                href: this.inputs.href.value,
                title: this.inputs.title.value,
                target: this.inputs.target.options[this.inputs.target.selectedIndex].value
            })
        }
    }
});
nicEditors.registerPlugin(nicPlugin, nicLinkOptions);
var nicColorOptions = {
    buttons: {
        forecolor: {
            name: __("Change Text Color"),
            type: "nicEditorColorButton",
            noClose: true
        },
        bgcolor: {
            name: __("Change Background Color"),
            type: "nicEditorBgColorButton",
            noClose: true
        }
    }
};
var nicEditorColorButton = nicEditorAdvancedButton.extend({
    addPane: function() {
        var p = {
            0: "00",
            1: "33",
            2: "66",
            3: "99",
            4: "CC",
            5: "FF"
        };
        var g = new bkElement("DIV").setStyle({
            width: "270px"
        });
        for (var s in p) {
            for (var n in p) {
                for (var o in p) {
                    var b = "#" + p[s] + p[o] + p[n];
                    var q = new bkElement("DIV").setStyle({
                        cursor: "pointer",
                        height: "15px",
                        "float": "left"
                    }).appendTo(g);
                    var m = new bkElement("DIV").setStyle({
                        border: "2px solid " + b
                    }).appendTo(q);
                    var r = new bkElement("DIV").setStyle({
                        backgroundColor: b,
                        overflow: "hidden",
                        width: "11px",
                        height: "11px"
                    }).addEvent("click", this.colorSelect.closure(this, b)).addEvent("mouseover", this.on.closure(this, m)).addEvent("mouseout", this.off.closure(this, m, b)).appendTo(m);
                    if (!window.opera) {
                        q.onmousedown = r.onmousedown = bkLib.cancelEvent
                    }
                }
            }
        }
        this.pane.append(g.noSelect())
    },
    colorSelect: function(b) {
        this.ne.nicCommand("foreColor", b);
        this.removePane()
    },
    on: function(b) {
        b.setStyle({
            border: "2px solid #000"
        })
    },
    off: function(d, c) {
        d.setStyle({
            border: "2px solid " + c
        })
    }
});
var nicEditorBgColorButton = nicEditorColorButton.extend({
    colorSelect: function(b) {
        this.ne.nicCommand("hiliteColor", b);
        this.removePane()
    }
});
nicEditors.registerPlugin(nicPlugin, nicColorOptions);
var nicImageOptions = {
    buttons: {
        image: {
            name: "Add Image",
            type: "nicImageButton",
            tags: ["IMG"]
        }
    }
};
var nicImageButton = nicEditorAdvancedButton.extend({
    addPane: function() {
        this.im = this.ne.selectedInstance.selElm().parentTag("IMG");
        this.addForm({
            "": {
                type: "title",
                txt: "Add/Edit Image"
            },
            src: {
                type: "text",
                txt: "URL",
                value: "http://",
                style: {
                    width: "150px"
                }
            },
            alt: {
                type: "text",
                txt: "Alt Text",
                style: {
                    width: "100px"
                }
            },
            align: {
                type: "select",
                txt: "Align",
                options: {
                    none: "Default",
                    left: "Left",
                    right: "Right"
                }
            }
        }, this.im)
    },
    submit: function(d) {
        var f = this.inputs.src.value;
        if (f == "" || f == "http://") {
            alert("You must enter a Image URL to insert");
            return false
        }
        this.removePane();
        if (!this.im) {
            var e = "javascript:nicImTemp();";
            this.ne.nicCommand("insertImage", e);
            this.im = this.findElm("IMG", "src", e)
        }
        if (this.im) {
            this.im.setAttributes({
                src: this.inputs.src.value,
                alt: this.inputs.alt.value,
                align: this.inputs.align.value
            })
        }
    }
});
nicEditors.registerPlugin(nicPlugin, nicImageOptions);
var nicSaveOptions = {
    buttons: {
        save: {
            name: __("Save this content"),
            type: "nicEditorSaveButton"
        }
    }
};
var nicEditorSaveButton = nicEditorButton.extend({
    init: function() {
        if (!this.ne.options.onSave) {
            this.margin.setStyle({
                display: "none"
            })
        }
    },
    mouseClick: function() {
        var c = this.ne.options.onSave;
        var d = this.ne.selectedInstance;
        c(d.getContent(), d.elm.id, d)
    }
});
nicEditors.registerPlugin(nicPlugin, nicSaveOptions);
var nicUploadOptions = {
    buttons: {
        upload: {
            name: "Upload Image",
            type: "nicUploadButton"
        }
    }
};
var nicUploadButton = nicEditorAdvancedButton.extend({
    nicURI: "http://api.imgur.com/2/upload.json",
    errorText: "Failed to upload image",
    addPane: function() {
        if (typeof window.FormData === "") {
            return this.onError("Image uploads are not supported in this browser, use Chrome, Firefox, or Safari instead.")
        }
        this.im = this.ne.selectedInstance.selElm().parentTag("IMG");
        var b = new bkElement("div").setStyle({
            padding: "10px"
        }).appendTo(this.pane.pane);
        new bkElement("div").setStyle({
            fontSize: "14px",
            fontWeight: "bold",
            paddingBottom: "5px"
        }).setContent("Insert an Image").appendTo(b);
        this.fileInput = new bkElement("input").setAttributes({
            type: "file"
        }).appendTo(b);
        this.progress = new bkElement("progress").setStyle({
            width: "100%",
            display: "none"
        }).setAttributes("max", 100).appendTo(b);
        this.fileInput.onchange = this.uploadFile.closure(this)
    },
    onError: function(b) {
        this.removePane();
        alert(b || "Failed to upload image")
    },
    uploadFile: function() {
        var d = this.fileInput.files[0];
        if (!d || !d.type.match(/image.*/)) {
            this.onError("Only image files can be uploaded");
            return
        }
        this.fileInput.setStyle({
            display: "none"
        });
        this.setProgress(0);
        var e = new FormData();
        e.append("image", d);
        e.append("key", "b7ea18a4ecbda8e92203fa4968d10660");
        var f = new XMLHttpRequest();
        f.open("POST.html", this.ne.options.uploadURI || this.nicURI);
        f.onload = function() {
            try {
                var b = JSON.parse(f.responseText)
            } catch (a) {
                return this.onError()
            }
            this.onUploaded(b.upload)
        }.closure(this);
        f.onerror = this.onError.closure(this);
        f.upload.onprogress = function(a) {
            this.setProgress(a.loaded / a.total)
        }.closure(this);
        f.send(e)
    },
    setProgress: function(b) {
        this.progress.setStyle({
            display: "block"
        });
        if (b < 0.98) {
            this.progress.value = b
        } else {
            this.progress.removeAttribute("value")
        }
    },
    onUploaded: function(e) {
        this.removePane();
        var g = e.links.original;
        if (!this.im) {
            this.ne.selectedInstance.restoreRng();
            var h = "javascript:nicImTemp();";
            this.ne.nicCommand("insertImage", g);
            this.im = this.findElm("IMG", "src", g)
        }
        var f = parseInt(this.ne.selectedInstance.elm.getStyle("width"));
        if (this.im) {
            this.im.setAttributes({
                src: g,
                width: (f && e.image.width) ? Math.min(f, e.image.width) : ""
            })
        }
    }
});
nicEditors.registerPlugin(nicPlugin, nicUploadOptions);
var nicXHTML = bkClass.extend({
    stripAttributes: ["_moz_dirty", "_moz_resizing", "_extended"],
    noShort: ["style", "title", "script", "textarea", "a"],
    cssReplace: {
        "font-weight:bold;": "strong",
        "font-style:italic;": "em"
    },
    sizes: {
        1: "xx-small",
        2: "x-small",
        3: "small",
        4: "medium",
        5: "large",
        6: "x-large"
    },
    construct: function(b) {
        this.ne = b;
        if (this.ne.options.xhtml) {
            b.addEvent("get", this.cleanup.closure(this))
        }
    },
    cleanup: function(e) {
        var d = e.getElm();
        var f = this.toXHTML(d);
        e.content = f
    },
    toXHTML: function(D, F, r) {
        var z = "";
        var I = "";
        var H = "";
        var x = D.nodeType;
        var G = D.nodeName.toLowerCase();
        var d = D.hasChildNodes && D.hasChildNodes();
        var E = new Array();
        switch (x) {
            case 1:
                var y = D.attributes;
                switch (G) {
                    case "b":
                        G = "strong";
                        break;
                    case "i":
                        G = "em";
                        break;
                    case "font":
                        G = "span";
                        break
                }
                if (F) {
                    for (var A = 0; A < y.length; A++) {
                        var v = y[A];
                        var n = v.nodeName.toLowerCase();
                        var C = v.nodeValue;
                        if (!v.specified || !C || bkLib.inArray(this.stripAttributes, n) || typeof(C) == "function") {
                            continue
                        }
                        switch (n) {
                            case "style":
                                var w = C.replace(/ /g, "");
                                for (itm in this.cssReplace) {
                                    if (w.indexOf(itm) != -1) {
                                        E.push(this.cssReplace[itm]);
                                        w = w.replace(itm, "")
                                    }
                                }
                                H += w;
                                C = "";
                                break;
                            case "class":
                                C = C.replace("Apple-style-span", "");
                                break;
                            case "size":
                                H += "font-size:" + this.sizes[C] + ";";
                                C = "";
                                break
                        }
                        if (C) {
                            I += " " + n + '="' + C + '"'
                        }
                    }
                    if (H) {
                        I += ' style="' + H + '"'
                    }
                    for (var A = 0; A < E.length; A++) {
                        z += "<" + E[A] + ">"
                    }
                    if (I == "" && G == "span") {
                        F = false
                    }
                    if (F) {
                        z += "<" + G;
                        if (G != "br") {
                            z += I
                        }
                    }
                }
                if (!d && !bkLib.inArray(this.noShort, n)) {
                    if (F) {
                        z += " />"
                    }
                } else {
                    if (F) {
                        z += ">"
                    }
                    for (var A = 0; A < D.childNodes.length; A++) {
                        var B = this.toXHTML(D.childNodes[A], true, true);
                        if (B) {
                            z += B
                        }
                    }
                }
                if (F && d) {
                    z += "</" + G + ">"
                }
                for (var A = 0; A < E.length; A++) {
                    z += "</" + E[A] + ">"
                }
                break;
            case 3:
                z += D.nodeValue;
                break
        }
        return z
    }
});
nicEditors.registerPlugin(nicXHTML);
var nicBBCode = bkClass.extend({
    construct: function(d) {
        this.ne = d;
        if (this.ne.options.bbCode) {
            d.addEvent("get", this.bbGet.closure(this));
            d.addEvent("set", this.bbSet.closure(this));
            var c = this.ne.loadedPlugins;
            for (itm in c) {
                if (c[itm].toXHTML) {
                    this.xhtml = c[itm]
                }
            }
        }
    },
    bbGet: function(d) {
        var c = this.xhtml.toXHTML(d.getElm());
        d.content = this.toBBCode(c)
    },
    bbSet: function(b) {
        b.content = this.fromBBCode(b.content)
    },
    toBBCode: function(c) {
        function d(a, b) {
            c = c.replace(a, b)
        }
        d(/\n/gi, "");
        d(/<strong>(.*?)<\/strong>/gi, "[b]$1[/b]");
        d(/<em>(.*?)<\/em>/gi, "[i]$1[/i]");
        d(/<span.*?style="text-decoration:underline;">(.*?)<\/span>/gi, "[u]$1[/u]");
        d(/<ul>(.*?)<\/ul>/gi, "[list]$1[/list]");
        d(/<li>(.*?)<\/li>/gi, "[*]$1[/*]");
        d(/<ol>(.*?)<\/ol>/gi, "[list=1]$1[/list]");
        d(/<img.*?src="(.*?)".*?>/gi, "[img]$1[/img]");
        d(/<a.*?href="(.*?)".*?>(.*?)<\/a>/gi, "[url=$1]$2[/url]");
        d(/<br.*?>/gi, "\n");
        d(/<.*?>.*?<\/.*?>/gi, "");
        return c
    },
    fromBBCode: function(d) {
        function c(a, b) {
            d = d.replace(a, b)
        }
        c(/\[b\](.*?)\[\/b\]/gi, "<strong>$1</strong>");
        c(/\[i\](.*?)\[\/i\]/gi, "<em>$1</em>");
        c(/\[u\](.*?)\[\/u\]/gi, '<span style="text-decoration:underline;">$1</span>');
        c(/\[list\](.*?)\[\/list\]/gi, "<ul>$1</ul>");
        c(/\[list=1\](.*?)\[\/list\]/gi, "<ol>$1</ol>");
        c(/\[\*\](.*?)\[\/\*\]/gi, "<li>$1</li>");
        c(/\[img\](.*?)\[\/img\]/gi, '<img src="$1" />');
        c(/\[url=(.*?)\](.*?)\[\/url\]/gi, '<a href="$1">$2</a>');
        c(/\n/gi, "<br />");
        return d
    }
});
nicEditors.registerPlugin(nicBBCode);
nicEditor = nicEditor.extend({
    floatingPanel: function() {
        this.floating = new bkElement("DIV").setStyle({
            position: "absolute",
            top: "-1000px"
        }).appendTo(document.body);
        this.addEvent("focus", this.reposition.closure(this)).addEvent("blur", this.hide.closure(this));
        this.setPanel(this.floating)
    },
    reposition: function() {
        var c = this.selectedInstance.e;
        this.floating.setStyle({
            width: (parseInt(c.getStyle("width")) || c.clientWidth) + "px"
        });
        var d = c.offsetTop - this.floating.offsetHeight;
        if (d < 0) {
            d = c.offsetTop + c.offsetHeight
        }
        this.floating.setStyle({
            top: d + "px",
            left: c.offsetLeft + "px",
            display: "block"
        })
    },
    hide: function() {
        this.floating.setStyle({
            top: "-1000px"
        })
    }
});
var nicCodeOptions = {
    buttons: {
        xhtml: {
            name: "Edit HTML",
            type: "nicCodeButton"
        }
    }
};
var nicCodeButton = nicEditorAdvancedButton.extend({
    width: "350px",
    addPane: function() {
        this.addForm({
            "": {
                type: "title",
                txt: "Edit HTML"
            },
            code: {
                type: "content",
                value: this.ne.selectedInstance.getContent(),
                style: {
                    width: "340px",
                    height: "200px"
                }
            }
        })
    },
    submit: function(c) {
        var d = this.inputs.code.value;
        this.ne.selectedInstance.setContent(d);
        this.removePane()
    }
});
nicEditors.registerPlugin(nicPlugin, nicCodeOptions);
$(document).ready(function() {
    $.fn.anim_progressbar = function(m) {
        var q = 1000;
        var n = 60 * q;
        var p = 3600 * q;
        var l = 24 * 3600 * q;
        var k = {
            start: new Date(),
            finish: new Date().setTime(new Date().getTime() + 60 * q),
            interval: 100
        };
        var j = jQuery.extend(k, m);
        var o = this;
        return this.each(function() {
            var b = j.finish - j.start;
            $(o).find(".pbar").progressbar();
            var a = setInterval(function() {
                var g = j.finish - new Date();
                var e = new Date() - j.start,
                    f = parseInt(g / l),
                    d = parseInt((g - (f * l)) / p),
                    r = parseInt((g - (f * l) - (d * p)) / n),
                    h = parseInt((g - (f * l) - (r * n) - (d * p)) / q),
                    c = (e > 0) ? e / b * 100 : 0;
                $(o).find(".percent").html("<b>" + c.toFixed(1) + "%</b>");
                $(o).find(".pbar").find(".ui-progressbar-value").css("width", c + "%").css("display", "block");
                if (c >= 100) {
                    clearInterval(a);
                    $(o).find(".percent").html("<b>100%</b>")
                }
            }, j.interval)
        })
    }
});
(function(b) {
    b.fn.extend({
        slimScroll: function(a) {
            var f = {
                width: "auto",
                height: "88px",
                size: "7px",
                color: "#000",
                position: "right",
                distance: "1px",
                start: "top",
                opacity: 0.4,
                alwaysVisible: false,
                disableFadeOut: false,
                railVisible: false,
                railColor: "#333",
                railOpacity: 0.2,
                railDraggable: true,
                railClass: "slimScrollRail",
                barClass: "slimScrollBar",
                wrapperClass: "slimScrollDiv",
                allowPageScroll: false,
                wheelStep: 20,
                touchScrollStep: 200,
                borderRadius: "7px",
                railBorderRadius: "7px"
            };
            var e = b.extend(f, a);
            this.each(function() {
                var c, J, U, O, L, H, Q, V, T = "<div></div>",
                    F = 30,
                    M = false;
                var K = b(this);
                if (K.parent().hasClass(e.wrapperClass)) {
                    var X = K.scrollTop();
                    h = K.siblings("." + e.barClass);
                    aa = K.siblings("." + e.railClass);
                    I();
                    if (b.isPlainObject(a)) {
                        if ("height" in a && a.height == "auto") {
                            K.parent().css("height", "auto");
                            K.css("height", "auto");
                            var R = K.parent().parent().height();
                            K.parent().css("height", R);
                            K.css("height", R)
                        } else {
                            if ("height" in a) {
                                var G = a.height;
                                K.parent().css("height", G);
                                K.css("height", G)
                            }
                        }
                        if ("scrollTo" in a) {
                            X = parseInt(e.scrollTo)
                        } else {
                            if ("scrollBy" in a) {
                                X += parseInt(e.scrollBy)
                            } else {
                                if ("destroy" in a) {
                                    h.remove();
                                    aa.remove();
                                    K.unwrap();
                                    return
                                }
                            }
                        }
                        d(X, false, true)
                    }
                    return
                } else {
                    if (b.isPlainObject(a)) {
                        if ("destroy" in a) {
                            return
                        }
                    }
                }
                e.height = (e.height == "auto") ? K.parent().height() : e.height;
                var W = b(T).addClass(e.wrapperClass).css({
                    position: "relative",
                    overflow: "hidden",
                    width: e.width,
                    height: e.height
                });
                K.css({
                    overflow: "hidden",
                    width: e.width,
                    height: e.height
                });
                var aa = b(T).addClass(e.railClass).css({
                    width: e.size,
                    height: "100%",
                    position: "absolute",
                    top: 0,
                    display: (e.alwaysVisible && e.railVisible) ? "block" : "none",
                    "border-radius": e.railBorderRadius,
                    background: e.railColor,
                    opacity: e.railOpacity,
                    zIndex: 90
                });
                var h = b(T).addClass(e.barClass).css({
                    background: e.color,
                    width: e.size,
                    position: "absolute",
                    top: 0,
                    opacity: e.opacity,
                    display: e.alwaysVisible ? "block" : "none",
                    "border-radius": e.borderRadius,
                    BorderRadius: e.borderRadius,
                    MozBorderRadius: e.borderRadius,
                    WebkitBorderRadius: e.borderRadius,
                    zIndex: 99
                });
                var Z = (e.position == "right") ? {
                    right: e.distance
                } : {
                    left: e.distance
                };
                aa.css(Z);
                h.css(Z);
                K.wrap(W);
                K.parent().append(h);
                K.parent().append(aa);
                if (e.railDraggable) {
                    h.bind("mousedown", function(g) {
                        var j = b(document);
                        U = true;
                        t = parseFloat(h.css("top"));
                        pageY = g.pageY;
                        j.bind("mousemove.slimscroll", function(k) {
                            currTop = t + k.pageY - pageY;
                            h.css("top", currTop);
                            d(0, h.position().top, false)
                        });
                        j.bind("mouseup.slimscroll", function(k) {
                            U = false;
                            S();
                            j.unbind(".slimscroll")
                        });
                        return false
                    }).bind("selectstart.slimscroll", function(g) {
                        g.stopPropagation();
                        g.preventDefault();
                        return false
                    })
                }
                aa.hover(function() {
                    Y()
                }, function() {
                    S()
                });
                h.hover(function() {
                    J = true
                }, function() {
                    J = false
                });
                K.hover(function() {
                    c = true;
                    Y();
                    S()
                }, function() {
                    c = false;
                    S()
                });
                K.bind("touchstart", function(j, g) {
                    if (j.originalEvent.touches.length) {
                        L = j.originalEvent.touches[0].pageY
                    }
                });
                K.bind("touchmove", function(j) {
                    if (!M) {
                        j.originalEvent.preventDefault()
                    }
                    if (j.originalEvent.touches.length) {
                        var g = (L - j.originalEvent.touches[0].pageY) / e.touchScrollStep;
                        d(g, true);
                        L = j.originalEvent.touches[0].pageY
                    }
                });
                I();
                if (e.start === "bottom") {
                    h.css({
                        top: K.outerHeight() - h.outerHeight()
                    });
                    d(0, true)
                } else {
                    if (e.start !== "top") {
                        d(b(e.start).position().top, null, true);
                        if (!e.alwaysVisible) {
                            h.hide()
                        }
                    }
                }
                P(this);

                function N(k) {
                    if (!c) {
                        return
                    }
                    var k = k || window.event;
                    var j = 0;
                    if (k.wheelDelta) {
                        j = -k.wheelDelta / 120
                    }
                    if (k.detail) {
                        j = k.detail / 3
                    }
                    var g = k.target || k.srcTarget || k.srcElement;
                    if (b(g).closest("." + e.wrapperClass).is(K.parent())) {
                        d(j, true)
                    }
                    if (k.preventDefault && !M) {
                        k.preventDefault()
                    }
                    if (!M) {
                        k.returnValue = false
                    }
                }

                function d(g, m, l) {
                    M = false;
                    var j = g;
                    var k = K.outerHeight() - h.outerHeight();
                    if (m) {
                        j = parseInt(h.css("top")) + g * parseInt(e.wheelStep) / 100 * h.outerHeight();
                        j = Math.min(Math.max(j, 0), k);
                        j = (g > 0) ? Math.ceil(j) : Math.floor(j);
                        h.css({
                            top: j + "px"
                        })
                    }
                    Q = parseInt(h.css("top")) / (K.outerHeight() - h.outerHeight());
                    j = Q * (K[0].scrollHeight - K.outerHeight());
                    if (l) {
                        j = g;
                        var n = j / K[0].scrollHeight * K.outerHeight();
                        n = Math.min(Math.max(n, 0), k);
                        h.css({
                            top: n + "px"
                        })
                    }
                    K.scrollTop(j);
                    K.trigger("slimscrolling", ~~j);
                    Y();
                    S()
                }

                function P(g) {
                    if (window.addEventListener) {
                        g.addEventListener("DOMMouseScroll", N, false);
                        g.addEventListener("mousewheel", N, false)
                    } else {
                        document.attachEvent("onmousewheel", N)
                    }
                }

                function I() {
                    H = Math.max((K.outerHeight() / K[0].scrollHeight) * K.outerHeight(), F);
                    h.css({
                        height: H + "px"
                    });
                    var g = H == K.outerHeight() ? "none" : "block";
                    h.css({
                        display: g
                    })
                }

                function Y() {
                    I();
                    clearTimeout(O);
                    if (Q == ~~Q) {
                        M = e.allowPageScroll;
                        if (V != Q) {
                            var g = (~~Q == 0) ? "top" : "bottom";
                            K.trigger("slimscroll", g)
                        }
                    } else {
                        M = false
                    }
                    V = Q;
                    if (H >= K.outerHeight()) {
                        M = true;
                        return
                    }
                    h.stop(true, true).fadeIn("fast");
                    if (e.railVisible) {
                        aa.stop(true, true).fadeIn("fast")
                    }
                }

                function S() {
                    if (!e.alwaysVisible) {
                        O = setTimeout(function() {
                            if (!(e.disableFadeOut && c) && !J && !U) {
                                h.fadeOut("slow");
                                aa.fadeOut("slow")
                            }
                        }, 1000)
                    }
                }
            });
            return this
        }
    });
    b.fn.extend({
        slimscroll: b.fn.slimScroll
    })
})(jQuery);
! function(A, G, k) {
    function j(d, f) {
        var c = G.createElement(d || "div"),
            a;
        for (a in f) {
            c[a] = f[a]
        }
        return c
    }

    function F(c) {
        for (var a = 1, d = arguments.length; a < d; a++) {
            c.appendChild(arguments[a])
        }
        return c
    }

    function z(s, J, h, a) {
        var d = ["opacity", J, ~~(s * 100), h, a].join("-"),
            I = 0.01 + h / a * 100,
            p = Math.max(1 - (1 - s) / J * (100 - I), s),
            m = H.substring(0, H.indexOf("Animation")).toLowerCase(),
            v = m && "-" + m + "-" || "";
        return x[d] || (D.insertRule("@" + v + "keyframes " + d + "{0%{opacity:" + p + "}" + I + "%{opacity:" + s + "}" + (I + 0.01) + "%{opacity:1}" + (I + J) % 100 + "%{opacity:" + s + "}100%{opacity:" + p + "}}", D.cssRules.length), x[d] = 1), d
    }

    function w(f, c) {
        var a = f.style,
            d, h;
        if (a[c] !== k) {
            return c
        }
        c = c.charAt(0).toUpperCase() + c.slice(1);
        for (h = 0; h < b.length; h++) {
            d = b[h] + c;
            if (a[d] !== k) {
                return d
            }
        }
    }

    function C(c, a) {
        for (var d in a) {
            c.style[w(c, d) || d] = a[d]
        }
        return c
    }

    function y(f) {
        for (var c = 1; c < arguments.length; c++) {
            var d = arguments[c];
            for (var a in d) {
                f[a] === k && (f[a] = d[a])
            }
        }
        return f
    }

    function g(c) {
        var a = {
            x: c.offsetLeft,
            y: c.offsetTop
        };
        while (c = c.offsetParent) {
            a.x += c.offsetLeft, a.y += c.offsetTop
        }
        return a
    }
    var b = ["webkit", "Moz", "ms", "O"],
        x = {},
        H, D = function() {
            var a = j("style", {
                type: "text/css"
            });
            return F(G.getElementsByTagName("head")[0], a), a.sheet || a.styleSheet
        }(),
        B = {
            lines: 12,
            length: 7,
            width: 5,
            radius: 10,
            rotate: 0,
            corners: 1,
            color: "#000",
            speed: 1,
            trail: 100,
            opacity: 0.25,
            fps: 20,
            zIndex: 2000000000,
            className: "spinner",
            top: "auto",
            left: "auto",
            position: "relative"
        },
        E = function q(a) {
            if (!this.spin) {
                return new q(a)
            }
            this.opts = y(a || {}, q.defaults, B)
        };
    E.defaults = {}, y(E.prototype, {
            spin: function(L) {
                this.stop();
                var Q = this,
                    o = Q.opts,
                    c = Q.el = C(j(0, {
                        className: o.className
                    }), {
                        position: o.position,
                        width: 0,
                        zIndex: o.zIndex
                    }),
                    I = o.radius + o.length + o.width,
                    P, N;
                L && (L.insertBefore(c, L.firstChild || null), N = g(L), P = g(c), C(c, {
                    left: (o.left == "auto" ? N.x - P.x + (L.offsetWidth >> 1) : parseInt(o.left, 10) + I) + "px",
                    top: (o.top == "auto" ? N.y - P.y + (L.offsetHeight >> 1) : parseInt(o.top, 10) + I) + "px"
                })), c.setAttribute("aria-role", "progressbar"), Q.lines(c, Q.opts);
                if (!H) {
                    var K = 0,
                        s = o.fps,
                        J = s / o.speed,
                        M = (1 - o.opacity) / (J * o.trail / 100),
                        O = J / o.lines;
                    (function p() {
                        K++;
                        for (var d = o.lines; d; d--) {
                            var a = Math.max(1 - (K + d * O) % J * M, o.opacity);
                            Q.opacity(c, o.lines - d, a, o)
                        }
                        Q.timeout = Q.el && setTimeout(p, ~~(1000 / s))
                    })()
                }
                return Q
            },
            stop: function() {
                var a = this.el;
                return a && (clearTimeout(this.timeout), a.parentNode && a.parentNode.removeChild(a), this.el = k), this
            },
            lines: function(f, c) {
                function a(m, l) {
                    return C(j(), {
                        position: "absolute",
                        width: c.length + c.width + "px",
                        height: c.width + "px",
                        background: m,
                        boxShadow: l,
                        transformOrigin: "left",
                        transform: "rotate(" + ~~(360 / c.lines * h + c.rotate) + "deg) translate(" + c.radius + "px,0)",
                        borderRadius: (c.corners * c.width >> 1) + "px"
                    })
                }
                var h = 0,
                    d;
                for (; h < c.lines; h++) {
                    d = C(j(), {
                        position: "absolute",
                        top: 1 + ~(c.width / 2) + "px",
                        transform: c.hwaccel ? "translate3d(0,0,0)" : "",
                        opacity: c.opacity,
                        animation: H && z(c.opacity, c.trail, h, c.lines) + " " + 1 / c.speed + "s linear infinite"
                    }), c.shadow && F(d, C(a("#000", "0 0 4px #000"), {
                        top: "2px"
                    })), F(f, F(d, a(c.color, "0 0 1px rgba(0,0,0,.1)")))
                }
                return f
            },
            opacity: function(c, a, d) {
                a < c.childNodes.length && (c.childNodes[a].style.opacity = d)
            }
        }),
        function() {
            function c(f, d) {
                return j("<" + f + ' xmlns="urn:schemas-microsoft.com:vml" class="spin-vml">', d)
            }
            var a = C(j("group"), {
                behavior: "url(#default#VML)"
            });
            !w(a, "transform") && a.adj ? (D.addRule(".spin-vml", "behavior:url(#default#VML)"), E.prototype.lines = function(I, h) {
                function J() {
                    return C(c("group", {
                        coordsize: p + " " + p,
                        coordorigin: -d + " " + -d
                    }), {
                        width: p,
                        height: p
                    })
                }

                function m(l, f, n) {
                    F(v, F(C(J(), {
                        rotation: 360 / h.lines * l + "deg",
                        left: ~~f
                    }), F(C(c("roundrect", {
                        arcsize: h.corners
                    }), {
                        width: d,
                        height: h.width,
                        left: h.radius,
                        top: -h.width >> 1,
                        filter: n
                    }), c("fill", {
                        color: h.color,
                        opacity: h.opacity
                    }), c("stroke", {
                        opacity: 0
                    }))))
                }
                var d = h.length + h.width,
                    p = 2 * d,
                    e = -(h.width + h.length) * 2 + "px",
                    v = C(J(), {
                        position: "absolute",
                        top: e,
                        left: e
                    }),
                    u;
                if (h.shadow) {
                    for (u = 1; u <= h.lines; u++) {
                        m(u, -2, "progid:DXImageTransform.Microsoft.Blur(pixelradius=2,makeshadow=1,shadowopacity=.3)")
                    }
                }
                for (u = 1; u <= h.lines; u++) {
                    m(u)
                }
                return F(I, v)
            }, E.prototype.opacity = function(l, f, m, h) {
                var d = l.firstChild;
                h = h.shadow && h.lines || 0, d && f + h < d.childNodes.length && (d = d.childNodes[f + h], d = d && d.firstChild, d = d && d.firstChild, d && (d.opacity = m))
            }) : H = w(a, "animation")
        }(), typeof define == "function" && define.amd ? define(function() {
            return E
        }) : A.Spinner = E
}(window, document);
var DateFormatter;
! function() {
    var k, m, a, l, e, j;
    e = 86400000, j = 3600, k = function(c, b) {
        return "string" == typeof c && "string" == typeof b && c.toLowerCase() === b.toLowerCase()
    }, m = function(d, g, f) {
        var b = f || "0",
            c = d.toString();
        return c.length < g ? m(b + c, g) : c
    }, a = function(d) {
        var b, f;
        for (d = d || {}, b = 1; b < arguments.length; b++) {
            if (f = arguments[b]) {
                for (var c in f) {
                    f.hasOwnProperty(c) && ("object" == typeof f[c] ? a(d[c], f[c]) : d[c] = f[c])
                }
            }
        }
        return d
    }, l = {
        dateSettings: {
            days: ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"],
            daysShort: ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"],
            months: ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"],
            monthsShort: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"],
            meridiem: ["AM", "PM"],
            ordinal: function(b) {
                var c = b % 10,
                    d = {
                        1: "st",
                        2: "nd",
                        3: "rd"
                    };
                return 1 !== Math.floor(b % 100 / 10) && d[c] ? d[c] : "th"
            }
        },
        separators: /[ \-+\/\.T:@]/g,
        validParts: /[dDjlNSwzWFmMntLoYyaABgGhHisueTIOPZcrU]/g,
        intParts: /[djwNzmnyYhHgGis]/g,
        tzParts: /\b(?:[PMCEA][SDP]T|(?:Pacific|Mountain|Central|Eastern|Atlantic) (?:Standard|Daylight|Prevailing) Time|(?:GMT|UTC)(?:[-+]\d{4})?)\b/g,
        tzClip: /[^-+\dA-Z]/g
    }, DateFormatter = function(d) {
        var b = this,
            c = a(l, d);
        b.dateSettings = c.dateSettings, b.separators = c.separators, b.validParts = c.validParts, b.intParts = c.intParts, b.tzParts = c.tzParts, b.tzClip = c.tzClip
    }, DateFormatter.prototype = {
        constructor: DateFormatter,
        parseDate: function(J, L) {
            var o, d, h, r, u, c, K, s, f, b, y = this,
                p = !1,
                g = !1,
                n = y.dateSettings,
                M = {
                    date: null,
                    year: null,
                    month: null,
                    day: null,
                    hour: 0,
                    min: 0,
                    sec: 0
                };
            if (!J) {
                return void 0
            }
            if (J instanceof Date) {
                return J
            }
            if ("number" == typeof J) {
                return new Date(J)
            }
            if ("U" === L) {
                return h = parseInt(J), h ? new Date(1000 * h) : J
            }
            if ("string" != typeof J) {
                return ""
            }
            if (o = L.match(y.validParts), !o || 0 === o.length) {
                throw new Error("Invalid date format definition.")
            }
            for (d = J.replace(y.separators, "\x00").split("\x00"), h = 0; h < d.length; h++) {
                switch (r = d[h], u = parseInt(r), o[h]) {
                    case "y":
                    case "Y":
                        f = r.length, 2 === f ? M.year = parseInt((70 > u ? "20" : "19") + r) : 4 === f && (M.year = u), p = !0;
                        break;
                    case "m":
                    case "n":
                    case "M":
                    case "F":
                        isNaN(r) ? (c = n.monthsShort.indexOf(r), c > -1 && (M.month = c + 1), c = n.months.indexOf(r), c > -1 && (M.month = c + 1)) : u >= 1 && 12 >= u && (M.month = u), p = !0;
                        break;
                    case "d":
                    case "j":
                        u >= 1 && 31 >= u && (M.day = u), p = !0;
                        break;
                    case "g":
                    case "h":
                        K = o.indexOf("a") > -1 ? o.indexOf("a") : o.indexOf("A") > -1 ? o.indexOf("A") : -1, b = d[K], K > -1 ? (s = k(b, n.meridiem[0]) ? 0 : k(b, n.meridiem[1]) ? 12 : -1, u >= 1 && 12 >= u && s > -1 ? M.hour = u + s : u >= 0 && 23 >= u && (M.hour = u)) : u >= 0 && 23 >= u && (M.hour = u), g = !0;
                        break;
                    case "G":
                    case "H":
                        u >= 0 && 23 >= u && (M.hour = u), g = !0;
                        break;
                    case "i":
                        u >= 0 && 59 >= u && (M.min = u), g = !0;
                        break;
                    case "s":
                        u >= 0 && 59 >= u && (M.sec = u), g = !0
                }
            }
            if (p === !0 && M.year && M.month && M.day) {
                M.date = new Date(M.year, M.month - 1, M.day, M.hour, M.min, M.sec, 0)
            } else {
                if (g !== !0) {
                    return !1
                }
                M.date = new Date(0, 0, 0, M.hour, M.min, M.sec, 0)
            }
            return M.date
        },
        guessDate: function(u, f) {
            if ("string" != typeof u) {
                return u
            }
            var r, n, g, h, b = this,
                d = u.replace(b.separators, "\x00").split("\x00"),
                s = /^[djmn]/g,
                o = f.match(b.validParts),
                c = new Date,
                C = 0;
            if (!s.test(o[0])) {
                return u
            }
            for (n = 0; n < d.length; n++) {
                switch (C = 2, g = d[n], h = parseInt(g.substr(0, 2)), n) {
                    case 0:
                        "m" === o[0] || "n" === o[0] ? c.setMonth(h - 1) : c.setDate(h);
                        break;
                    case 1:
                        "m" === o[0] || "n" === o[0] ? c.setDate(h) : c.setMonth(h - 1);
                        break;
                    case 2:
                        r = c.getFullYear(), g.length < 4 ? (c.setFullYear(parseInt(r.toString().substr(0, 4 - g.length) + g)), C = g.length) : (c.setFullYear = parseInt(g.substr(0, 4)), C = 4);
                        break;
                    case 3:
                        c.setHours(h);
                        break;
                    case 4:
                        c.setMinutes(h);
                        break;
                    case 5:
                        c.setSeconds(h)
                }
                g.substr(C).length > 0 && d.splice(n + 1, 0, g.substr(C))
            }
            return c
        },
        parseFormat: function(h, f) {
            var q, c = this,
                b = c.dateSettings,
                g = /\\?(.?)/gi,
                d = function(o, n) {
                    return q[o] ? q[o]() : n
                };
            return q = {
                d: function() {
                    return m(q.j(), 2)
                },
                D: function() {
                    return b.daysShort[q.w()]
                },
                j: function() {
                    return f.getDate()
                },
                l: function() {
                    return b.days[q.w()]
                },
                N: function() {
                    return q.w() || 7
                },
                w: function() {
                    return f.getDay()
                },
                z: function() {
                    var o = new Date(q.Y(), q.n() - 1, q.j()),
                        n = new Date(q.Y(), 0, 1);
                    return Math.round((o - n) / e)
                },
                W: function() {
                    var o = new Date(q.Y(), q.n() - 1, q.j() - q.N() + 3),
                        n = new Date(o.getFullYear(), 0, 4);
                    return m(1 + Math.round((o - n) / e / 7), 2)
                },
                F: function() {
                    return b.months[f.getMonth()]
                },
                m: function() {
                    return m(q.n(), 2)
                },
                M: function() {
                    return b.monthsShort[f.getMonth()]
                },
                n: function() {
                    return f.getMonth() + 1
                },
                t: function() {
                    return new Date(q.Y(), q.n(), 0).getDate()
                },
                L: function() {
                    var n = q.Y();
                    return n % 4 === 0 && n % 100 !== 0 || n % 400 === 0 ? 1 : 0
                },
                o: function() {
                    var o = q.n(),
                        p = q.W(),
                        n = q.Y();
                    return n + (12 === o && 9 > p ? 1 : 1 === o && p > 9 ? -1 : 0)
                },
                Y: function() {
                    return f.getFullYear()
                },
                y: function() {
                    return q.Y().toString().slice(-2)
                },
                a: function() {
                    return q.A().toLowerCase()
                },
                A: function() {
                    var n = q.G() < 12 ? 0 : 1;
                    return b.meridiem[n]
                },
                B: function() {
                    var o = f.getUTCHours() * j,
                        n = 60 * f.getUTCMinutes(),
                        p = f.getUTCSeconds();
                    return m(Math.floor((o + n + p + j) / 86.4) % 1000, 3)
                },
                g: function() {
                    return q.G() % 12 || 12
                },
                G: function() {
                    return f.getHours()
                },
                h: function() {
                    return m(q.g(), 2)
                },
                H: function() {
                    return m(q.G(), 2)
                },
                i: function() {
                    return m(f.getMinutes(), 2)
                },
                s: function() {
                    return m(f.getSeconds(), 2)
                },
                u: function() {
                    return m(1000 * f.getMilliseconds(), 6)
                },
                e: function() {
                    var n = /\((.*)\)/.exec(String(f))[1];
                    return n || "Coordinated Universal Time"
                },
                T: function() {
                    var n = (String(f).match(c.tzParts) || [""]).pop().replace(c.tzClip, "");
                    return n || "UTC"
                },
                I: function() {
                    var p = new Date(q.Y(), 0),
                        u = Date.UTC(q.Y(), 0),
                        n = new Date(q.Y(), 6),
                        o = Date.UTC(q.Y(), 6);
                    return p - u !== n - o ? 1 : 0
                },
                O: function() {
                    var o = f.getTimezoneOffset(),
                        n = Math.abs(o);
                    return (o > 0 ? "-" : "+") + m(100 * Math.floor(n / 60) + n % 60, 4)
                },
                P: function() {
                    var n = q.O();
                    return n.substr(0, 3) + ":" + n.substr(3, 2)
                },
                Z: function() {
                    return 60 * -f.getTimezoneOffset()
                },
                c: function() {
                    return "Y-m-d\\TH:i:sP".replace(g, d)
                },
                r: function() {
                    return "D, d M Y H:i:s O".replace(g, d)
                },
                U: function() {
                    return f.getTime() / 1000 || 0
                }
            }, d(h, h)
        },
        formatDate: function(c, o) {
            var r, h, f, g, d, n = this,
                b = "";
            if ("string" == typeof c && (c = n.parseDate(c, o), c === !1)) {
                return !1
            }
            if (c instanceof Date) {
                for (f = o.length, r = 0; f > r; r++) {
                    d = o.charAt(r), "S" !== d && (g = n.parseFormat(d, c), r !== f - 1 && n.intParts.test(d) && "S" === o.charAt(r + 1) && (h = parseInt(g), g += n.dateSettings.ordinal(h)), b += g)
                }
                return b
            }
            return ""
        }
    }
}(),
function(b) {
    "function" == typeof define && define.amd ? define(["jquery", "jquery-mousewheel"], b) : "object" == typeof exports ? module.exports = b : b(jQuery)
}(function(m) {
    function p(b, c, d) {
        this.date = b, this.desc = c, this.style = d
    }
    var a = {
            i18n: {
                ar: {
                    months: ["كانون الثاني", "شباط", "آذار", "نيسان", "مايو", "حزيران", "تموز", "آب", "أيلول", "تشرين الأول", "تشرين الثاني", "كانون الأول"],
                    dayOfWeekShort: ["ن", "ث", "ع", "خ", "ج", "س", "ح"],
                    dayOfWeek: ["الأحد", "الاثنين", "الثلاثاء", "الأربعاء", "الخميس", "الجمعة", "السبت", "الأحد"]
                },
                ro: {
                    months: ["Ianuarie", "Februarie", "Martie", "Aprilie", "Mai", "Iunie", "Iulie", "August", "Septembrie", "Octombrie", "Noiembrie", "Decembrie"],
                    dayOfWeekShort: ["Du", "Lu", "Ma", "Mi", "Jo", "Vi", "Sâ"],
                    dayOfWeek: ["Duminică", "Luni", "Marţi", "Miercuri", "Joi", "Vineri", "Sâmbătă"]
                },
                id: {
                    months: ["Januari", "Februari", "Maret", "April", "Mei", "Juni", "Juli", "Agustus", "September", "Oktober", "November", "Desember"],
                    dayOfWeekShort: ["Min", "Sen", "Sel", "Rab", "Kam", "Jum", "Sab"],
                    dayOfWeek: ["Minggu", "Senin", "Selasa", "Rabu", "Kamis", "Jumat", "Sabtu"]
                },
                is: {
                    months: ["Janúar", "Febrúar", "Mars", "Apríl", "Maí", "Júní", "Júlí", "Ágúst", "September", "Október", "Nóvember", "Desember"],
                    dayOfWeekShort: ["Sun", "Mán", "Þrið", "Mið", "Fim", "Fös", "Lau"],
                    dayOfWeek: ["Sunnudagur", "Mánudagur", "Þriðjudagur", "Miðvikudagur", "Fimmtudagur", "Föstudagur", "Laugardagur"]
                },
                bg: {
                    months: ["Януари", "Февруари", "Март", "Април", "Май", "Юни", "Юли", "Август", "Септември", "Октомври", "Ноември", "Декември"],
                    dayOfWeekShort: ["Нд", "Пн", "Вт", "Ср", "Чт", "Пт", "Сб"],
                    dayOfWeek: ["Неделя", "Понеделник", "Вторник", "Сряда", "Четвъртък", "Петък", "Събота"]
                },
                fa: {
                    months: ["فروردین", "اردیبهشت", "خرداد", "تیر", "مرداد", "شهریور", "مهر", "آبان", "آذر", "دی", "بهمن", "اسفند"],
                    dayOfWeekShort: ["یکشنبه", "دوشنبه", "سه شنبه", "چهارشنبه", "پنجشنبه", "جمعه", "شنبه"],
                    dayOfWeek: ["یکشنبه", "دوشنبه", "سهشنبه", "چهارشنبه", "پنجشنبه", "جمعه", "شنبه", "یکشنبه"]
                },
                ru: {
                    months: ["Январь", "Февраль", "Март", "Апрель", "Май", "Июнь", "Июль", "Август", "Сентябрь", "Октябрь", "Ноябрь", "Декабрь"],
                    dayOfWeekShort: ["Вс", "Пн", "Вт", "Ср", "Чт", "Пт", "Сб"],
                    dayOfWeek: ["Воскресенье", "Понедельник", "Вторник", "Среда", "Четверг", "Пятница", "Суббота"]
                },
                uk: {
                    months: ["Січень", "Лютий", "Березень", "Квітень", "Травень", "Червень", "Липень", "Серпень", "Вересень", "Жовтень", "Листопад", "Грудень"],
                    dayOfWeekShort: ["Ндл", "Пнд", "Втр", "Срд", "Чтв", "Птн", "Сбт"],
                    dayOfWeek: ["Неділя", "Понеділок", "Вівторок", "Середа", "Четвер", "П'ятниця", "Субота"]
                },
                en: {
                    months: ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"],
                    dayOfWeekShort: ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"],
                    dayOfWeek: ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]
                },
                el: {
                    months: ["Ιανουάριος", "Φεβρουάριος", "Μάρτιος", "Απρίλιος", "Μάιος", "Ιούνιος", "Ιούλιος", "Αύγουστος", "Σεπτέμβριος", "Οκτώβριος", "Νοέμβριος", "Δεκέμβριος"],
                    dayOfWeekShort: ["Κυρ", "Δευ", "Τρι", "Τετ", "Πεμ", "Παρ", "Σαβ"],
                    dayOfWeek: ["Κυριακή", "Δευτέρα", "Τρίτη", "Τετάρτη", "Πέμπτη", "Παρασκευή", "Σάββατο"]
                },
                de: {
                    months: ["Januar", "Februar", "März", "April", "Mai", "Juni", "Juli", "August", "September", "Oktober", "November", "Dezember"],
                    dayOfWeekShort: ["So", "Mo", "Di", "Mi", "Do", "Fr", "Sa"],
                    dayOfWeek: ["Sonntag", "Montag", "Dienstag", "Mittwoch", "Donnerstag", "Freitag", "Samstag"]
                },
                nl: {
                    months: ["januari", "februari", "maart", "april", "mei", "juni", "juli", "augustus", "september", "oktober", "november", "december"],
                    dayOfWeekShort: ["zo", "ma", "di", "wo", "do", "vr", "za"],
                    dayOfWeek: ["zondag", "maandag", "dinsdag", "woensdag", "donderdag", "vrijdag", "zaterdag"]
                },
                tr: {
                    months: ["Ocak", "Şubat", "Mart", "Nisan", "Mayıs", "Haziran", "Temmuz", "Ağustos", "Eylül", "Ekim", "Kasım", "Aralık"],
                    dayOfWeekShort: ["Paz", "Pts", "Sal", "Çar", "Per", "Cum", "Cts"],
                    dayOfWeek: ["Pazar", "Pazartesi", "Salı", "Çarşamba", "Perşembe", "Cuma", "Cumartesi"]
                },
                fr: {
                    months: ["Janvier", "Février", "Mars", "Avril", "Mai", "Juin", "Juillet", "Août", "Septembre", "Octobre", "Novembre", "Décembre"],
                    dayOfWeekShort: ["Dim", "Lun", "Mar", "Mer", "Jeu", "Ven", "Sam"],
                    dayOfWeek: ["dimanche", "lundi", "mardi", "mercredi", "jeudi", "vendredi", "samedi"]
                },
                es: {
                    months: ["Enero", "Febrero", "Marzo", "Abril", "Mayo", "Junio", "Julio", "Agosto", "Septiembre", "Octubre", "Noviembre", "Diciembre"],
                    dayOfWeekShort: ["Dom", "Lun", "Mar", "Mié", "Jue", "Vie", "Sáb"],
                    dayOfWeek: ["Domingo", "Lunes", "Martes", "Miércoles", "Jueves", "Viernes", "Sábado"]
                },
                th: {
                    months: ["มกราคม", "กุมภาพันธ์", "มีนาคม", "เมษายน", "พฤษภาคม", "มิถุนายน", "กรกฎาคม", "สิงหาคม", "กันยายน", "ตุลาคม", "พฤศจิกายน", "ธันวาคม"],
                    dayOfWeekShort: ["อา.", "จ.", "อ.", "พ.", "พฤ.", "ศ.", "ส."],
                    dayOfWeek: ["อาทิตย์", "จันทร์", "อังคาร", "พุธ", "พฤหัส", "ศุกร์", "เสาร์", "อาทิตย์"]
                },
                pl: {
                    months: ["styczeń", "luty", "marzec", "kwiecień", "maj", "czerwiec", "lipiec", "sierpień", "wrzesień", "październik", "listopad", "grudzień"],
                    dayOfWeekShort: ["nd", "pn", "wt", "śr", "cz", "pt", "sb"],
                    dayOfWeek: ["niedziela", "poniedziałek", "wtorek", "środa", "czwartek", "piątek", "sobota"]
                },
                pt: {
                    months: ["Janeiro", "Fevereiro", "Março", "Abril", "Maio", "Junho", "Julho", "Agosto", "Setembro", "Outubro", "Novembro", "Dezembro"],
                    dayOfWeekShort: ["Dom", "Seg", "Ter", "Qua", "Qui", "Sex", "Sab"],
                    dayOfWeek: ["Domingo", "Segunda", "Terça", "Quarta", "Quinta", "Sexta", "Sábado"]
                },
                ch: {
                    months: ["一月", "二月", "三月", "四月", "五月", "六月", "七月", "八月", "九月", "十月", "十一月", "十二月"],
                    dayOfWeekShort: ["日", "一", "二", "三", "四", "五", "六"]
                },
                se: {
                    months: ["Januari", "Februari", "Mars", "April", "Maj", "Juni", "Juli", "Augusti", "September", "Oktober", "November", "December"],
                    dayOfWeekShort: ["Sön", "Mån", "Tis", "Ons", "Tor", "Fre", "Lör"]
                },
                kr: {
                    months: ["1월", "2월", "3월", "4월", "5월", "6월", "7월", "8월", "9월", "10월", "11월", "12월"],
                    dayOfWeekShort: ["일", "월", "화", "수", "목", "금", "토"],
                    dayOfWeek: ["일요일", "월요일", "화요일", "수요일", "목요일", "금요일", "토요일"]
                },
                it: {
                    months: ["Gennaio", "Febbraio", "Marzo", "Aprile", "Maggio", "Giugno", "Luglio", "Agosto", "Settembre", "Ottobre", "Novembre", "Dicembre"],
                    dayOfWeekShort: ["Dom", "Lun", "Mar", "Mer", "Gio", "Ven", "Sab"],
                    dayOfWeek: ["Domenica", "Lunedì", "Martedì", "Mercoledì", "Giovedì", "Venerdì", "Sabato"]
                },
                da: {
                    months: ["January", "Februar", "Marts", "April", "Maj", "Juni", "July", "August", "September", "Oktober", "November", "December"],
                    dayOfWeekShort: ["Søn", "Man", "Tir", "Ons", "Tor", "Fre", "Lør"],
                    dayOfWeek: ["søndag", "mandag", "tirsdag", "onsdag", "torsdag", "fredag", "lørdag"]
                },
                no: {
                    months: ["Januar", "Februar", "Mars", "April", "Mai", "Juni", "Juli", "August", "September", "Oktober", "November", "Desember"],
                    dayOfWeekShort: ["Søn", "Man", "Tir", "Ons", "Tor", "Fre", "Lør"],
                    dayOfWeek: ["Søndag", "Mandag", "Tirsdag", "Onsdag", "Torsdag", "Fredag", "Lørdag"]
                },
                ja: {
                    months: ["1月", "2月", "3月", "4月", "5月", "6月", "7月", "8月", "9月", "10月", "11月", "12月"],
                    dayOfWeekShort: ["日", "月", "火", "水", "木", "金", "土"],
                    dayOfWeek: ["日曜", "月曜", "火曜", "水曜", "木曜", "金曜", "土曜"]
                },
                vi: {
                    months: ["Tháng 1", "Tháng 2", "Tháng 3", "Tháng 4", "Tháng 5", "Tháng 6", "Tháng 7", "Tháng 8", "Tháng 9", "Tháng 10", "Tháng 11", "Tháng 12"],
                    dayOfWeekShort: ["CN", "T2", "T3", "T4", "T5", "T6", "T7"],
                    dayOfWeek: ["Chủ nhật", "Thứ hai", "Thứ ba", "Thứ tư", "Thứ năm", "Thứ sáu", "Thứ bảy"]
                },
                sl: {
                    months: ["Januar", "Februar", "Marec", "April", "Maj", "Junij", "Julij", "Avgust", "September", "Oktober", "November", "December"],
                    dayOfWeekShort: ["Ned", "Pon", "Tor", "Sre", "Čet", "Pet", "Sob"],
                    dayOfWeek: ["Nedelja", "Ponedeljek", "Torek", "Sreda", "Četrtek", "Petek", "Sobota"]
                },
                cs: {
                    months: ["Leden", "Únor", "Březen", "Duben", "Květen", "Červen", "Červenec", "Srpen", "Září", "Říjen", "Listopad", "Prosinec"],
                    dayOfWeekShort: ["Ne", "Po", "Út", "St", "Čt", "Pá", "So"]
                },
                hu: {
                    months: ["Január", "Február", "Március", "Április", "Május", "Június", "Július", "Augusztus", "Szeptember", "Október", "November", "December"],
                    dayOfWeekShort: ["Va", "Hé", "Ke", "Sze", "Cs", "Pé", "Szo"],
                    dayOfWeek: ["vasárnap", "hétfő", "kedd", "szerda", "csütörtök", "péntek", "szombat"]
                },
                az: {
                    months: ["Yanvar", "Fevral", "Mart", "Aprel", "May", "Iyun", "Iyul", "Avqust", "Sentyabr", "Oktyabr", "Noyabr", "Dekabr"],
                    dayOfWeekShort: ["B", "Be", "Ça", "Ç", "Ca", "C", "Ş"],
                    dayOfWeek: ["Bazar", "Bazar ertəsi", "Çərşənbə axşamı", "Çərşənbə", "Cümə axşamı", "Cümə", "Şənbə"]
                },
                bs: {
                    months: ["Januar", "Februar", "Mart", "April", "Maj", "Jun", "Jul", "Avgust", "Septembar", "Oktobar", "Novembar", "Decembar"],
                    dayOfWeekShort: ["Ned", "Pon", "Uto", "Sri", "Čet", "Pet", "Sub"],
                    dayOfWeek: ["Nedjelja", "Ponedjeljak", "Utorak", "Srijeda", "Četvrtak", "Petak", "Subota"]
                },
                ca: {
                    months: ["Gener", "Febrer", "Març", "Abril", "Maig", "Juny", "Juliol", "Agost", "Setembre", "Octubre", "Novembre", "Desembre"],
                    dayOfWeekShort: ["Dg", "Dl", "Dt", "Dc", "Dj", "Dv", "Ds"],
                    dayOfWeek: ["Diumenge", "Dilluns", "Dimarts", "Dimecres", "Dijous", "Divendres", "Dissabte"]
                },
                "en-GB": {
                    months: ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"],
                    dayOfWeekShort: ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"],
                    dayOfWeek: ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]
                },
                et: {
                    months: ["Jaanuar", "Veebruar", "Märts", "Aprill", "Mai", "Juuni", "Juuli", "August", "September", "Oktoober", "November", "Detsember"],
                    dayOfWeekShort: ["P", "E", "T", "K", "N", "R", "L"],
                    dayOfWeek: ["Pühapäev", "Esmaspäev", "Teisipäev", "Kolmapäev", "Neljapäev", "Reede", "Laupäev"]
                },
                eu: {
                    months: ["Urtarrila", "Otsaila", "Martxoa", "Apirila", "Maiatza", "Ekaina", "Uztaila", "Abuztua", "Iraila", "Urria", "Azaroa", "Abendua"],
                    dayOfWeekShort: ["Ig.", "Al.", "Ar.", "Az.", "Og.", "Or.", "La."],
                    dayOfWeek: ["Igandea", "Astelehena", "Asteartea", "Asteazkena", "Osteguna", "Ostirala", "Larunbata"]
                },
                fi: {
                    months: ["Tammikuu", "Helmikuu", "Maaliskuu", "Huhtikuu", "Toukokuu", "Kesäkuu", "Heinäkuu", "Elokuu", "Syyskuu", "Lokakuu", "Marraskuu", "Joulukuu"],
                    dayOfWeekShort: ["Su", "Ma", "Ti", "Ke", "To", "Pe", "La"],
                    dayOfWeek: ["sunnuntai", "maanantai", "tiistai", "keskiviikko", "torstai", "perjantai", "lauantai"]
                },
                gl: {
                    months: ["Xan", "Feb", "Maz", "Abr", "Mai", "Xun", "Xul", "Ago", "Set", "Out", "Nov", "Dec"],
                    dayOfWeekShort: ["Dom", "Lun", "Mar", "Mer", "Xov", "Ven", "Sab"],
                    dayOfWeek: ["Domingo", "Luns", "Martes", "Mércores", "Xoves", "Venres", "Sábado"]
                },
                hr: {
                    months: ["Siječanj", "Veljača", "Ožujak", "Travanj", "Svibanj", "Lipanj", "Srpanj", "Kolovoz", "Rujan", "Listopad", "Studeni", "Prosinac"],
                    dayOfWeekShort: ["Ned", "Pon", "Uto", "Sri", "Čet", "Pet", "Sub"],
                    dayOfWeek: ["Nedjelja", "Ponedjeljak", "Utorak", "Srijeda", "Četvrtak", "Petak", "Subota"]
                },
                ko: {
                    months: ["1월", "2월", "3월", "4월", "5월", "6월", "7월", "8월", "9월", "10월", "11월", "12월"],
                    dayOfWeekShort: ["일", "월", "화", "수", "목", "금", "토"],
                    dayOfWeek: ["일요일", "월요일", "화요일", "수요일", "목요일", "금요일", "토요일"]
                },
                lt: {
                    months: ["Sausio", "Vasario", "Kovo", "Balandžio", "Gegužės", "Birželio", "Liepos", "Rugpjūčio", "Rugsėjo", "Spalio", "Lapkričio", "Gruodžio"],
                    dayOfWeekShort: ["Sek", "Pir", "Ant", "Tre", "Ket", "Pen", "Šeš"],
                    dayOfWeek: ["Sekmadienis", "Pirmadienis", "Antradienis", "Trečiadienis", "Ketvirtadienis", "Penktadienis", "Šeštadienis"]
                },
                lv: {
                    months: ["Janvāris", "Februāris", "Marts", "Aprīlis ", "Maijs", "Jūnijs", "Jūlijs", "Augusts", "Septembris", "Oktobris", "Novembris", "Decembris"],
                    dayOfWeekShort: ["Sv", "Pr", "Ot", "Tr", "Ct", "Pk", "St"],
                    dayOfWeek: ["Svētdiena", "Pirmdiena", "Otrdiena", "Trešdiena", "Ceturtdiena", "Piektdiena", "Sestdiena"]
                },
                mk: {
                    months: ["јануари", "февруари", "март", "април", "мај", "јуни", "јули", "август", "септември", "октомври", "ноември", "декември"],
                    dayOfWeekShort: ["нед", "пон", "вто", "сре", "чет", "пет", "саб"],
                    dayOfWeek: ["Недела", "Понеделник", "Вторник", "Среда", "Четврток", "Петок", "Сабота"]
                },
                mn: {
                    months: ["1-р сар", "2-р сар", "3-р сар", "4-р сар", "5-р сар", "6-р сар", "7-р сар", "8-р сар", "9-р сар", "10-р сар", "11-р сар", "12-р сар"],
                    dayOfWeekShort: ["Дав", "Мяг", "Лха", "Пүр", "Бсн", "Бям", "Ням"],
                    dayOfWeek: ["Даваа", "Мягмар", "Лхагва", "Пүрэв", "Баасан", "Бямба", "Ням"]
                },
                "pt-BR": {
                    months: ["Janeiro", "Fevereiro", "Março", "Abril", "Maio", "Junho", "Julho", "Agosto", "Setembro", "Outubro", "Novembro", "Dezembro"],
                    dayOfWeekShort: ["Dom", "Seg", "Ter", "Qua", "Qui", "Sex", "Sáb"],
                    dayOfWeek: ["Domingo", "Segunda", "Terça", "Quarta", "Quinta", "Sexta", "Sábado"]
                },
                sk: {
                    months: ["Január", "Február", "Marec", "Apríl", "Máj", "Jún", "Júl", "August", "September", "Október", "November", "December"],
                    dayOfWeekShort: ["Ne", "Po", "Ut", "St", "Št", "Pi", "So"],
                    dayOfWeek: ["Nedeľa", "Pondelok", "Utorok", "Streda", "Štvrtok", "Piatok", "Sobota"]
                },
                sq: {
                    months: ["Janar", "Shkurt", "Mars", "Prill", "Maj", "Qershor", "Korrik", "Gusht", "Shtator", "Tetor", "Nëntor", "Dhjetor"],
                    dayOfWeekShort: ["Die", "Hën", "Mar", "Mër", "Enj", "Pre", "Shtu"],
                    dayOfWeek: ["E Diel", "E Hënë", "E Martē", "E Mërkurë", "E Enjte", "E Premte", "E Shtunë"]
                },
                "sr-YU": {
                    months: ["Januar", "Februar", "Mart", "April", "Maj", "Jun", "Jul", "Avgust", "Septembar", "Oktobar", "Novembar", "Decembar"],
                    dayOfWeekShort: ["Ned", "Pon", "Uto", "Sre", "čet", "Pet", "Sub"],
                    dayOfWeek: ["Nedelja", "Ponedeljak", "Utorak", "Sreda", "Četvrtak", "Petak", "Subota"]
                },
                sr: {
                    months: ["јануар", "фебруар", "март", "април", "мај", "јун", "јул", "август", "септембар", "октобар", "новембар", "децембар"],
                    dayOfWeekShort: ["нед", "пон", "уто", "сре", "чет", "пет", "суб"],
                    dayOfWeek: ["Недеља", "Понедељак", "Уторак", "Среда", "Четвртак", "Петак", "Субота"]
                },
                sv: {
                    months: ["Januari", "Februari", "Mars", "April", "Maj", "Juni", "Juli", "Augusti", "September", "Oktober", "November", "December"],
                    dayOfWeekShort: ["Sön", "Mån", "Tis", "Ons", "Tor", "Fre", "Lör"],
                    dayOfWeek: ["Söndag", "Måndag", "Tisdag", "Onsdag", "Torsdag", "Fredag", "Lördag"]
                },
                "zh-TW": {
                    months: ["一月", "二月", "三月", "四月", "五月", "六月", "七月", "八月", "九月", "十月", "十一月", "十二月"],
                    dayOfWeekShort: ["日", "一", "二", "三", "四", "五", "六"],
                    dayOfWeek: ["星期日", "星期一", "星期二", "星期三", "星期四", "星期五", "星期六"]
                },
                zh: {
                    months: ["一月", "二月", "三月", "四月", "五月", "六月", "七月", "八月", "九月", "十月", "十一月", "十二月"],
                    dayOfWeekShort: ["日", "一", "二", "三", "四", "五", "六"],
                    dayOfWeek: ["星期日", "星期一", "星期二", "星期三", "星期四", "星期五", "星期六"]
                },
                he: {
                    months: ["ינואר", "פברואר", "מרץ", "אפריל", "מאי", "יוני", "יולי", "אוגוסט", "ספטמבר", "אוקטובר", "נובמבר", "דצמבר"],
                    dayOfWeekShort: ["א'", "ב'", "ג'", "ד'", "ה'", "ו'", "שבת"],
                    dayOfWeek: ["ראשון", "שני", "שלישי", "רביעי", "חמישי", "שישי", "שבת", "ראשון"]
                },
                hy: {
                    months: ["Հունվար", "Փետրվար", "Մարտ", "Ապրիլ", "Մայիս", "Հունիս", "Հուլիս", "Օգոստոս", "Սեպտեմբեր", "Հոկտեմբեր", "Նոյեմբեր", "Դեկտեմբեր"],
                    dayOfWeekShort: ["Կի", "Երկ", "Երք", "Չոր", "Հնգ", "Ուրբ", "Շբթ"],
                    dayOfWeek: ["Կիրակի", "Երկուշաբթի", "Երեքշաբթի", "Չորեքշաբթի", "Հինգշաբթի", "Ուրբաթ", "Շաբաթ"]
                },
                kg: {
                    months: ["Үчтүн айы", "Бирдин айы", "Жалган Куран", "Чын Куран", "Бугу", "Кулжа", "Теке", "Баш Оона", "Аяк Оона", "Тогуздун айы", "Жетинин айы", "Бештин айы"],
                    dayOfWeekShort: ["Жек", "Дүй", "Шей", "Шар", "Бей", "Жум", "Ише"],
                    dayOfWeek: ["Жекшемб", "Дүйшөмб", "Шейшемб", "Шаршемб", "Бейшемби", "Жума", "Ишенб"]
                },
                rm: {
                    months: ["Schaner", "Favrer", "Mars", "Avrigl", "Matg", "Zercladur", "Fanadur", "Avust", "Settember", "October", "November", "December"],
                    dayOfWeekShort: ["Du", "Gli", "Ma", "Me", "Gie", "Ve", "So"],
                    dayOfWeek: ["Dumengia", "Glindesdi", "Mardi", "Mesemna", "Gievgia", "Venderdi", "Sonda"]
                },
                ka: {
                    months: ["იანვარი", "თებერვალი", "მარტი", "აპრილი", "მაისი", "ივნისი", "ივლისი", "აგვისტო", "სექტემბერი", "ოქტომბერი", "ნოემბერი", "დეკემბერი"],
                    dayOfWeekShort: ["კვ", "ორშ", "სამშ", "ოთხ", "ხუთ", "პარ", "შაბ"],
                    dayOfWeek: ["კვირა", "ორშაბათი", "სამშაბათი", "ოთხშაბათი", "ხუთშაბათი", "პარასკევი", "შაბათი"]
                }
            },
            value: "",
            rtl: !1,
            format: "Y/m/d H:i",
            formatTime: "H:i",
            formatDate: "Y/m/d",
            startDate: !1,
            step: 60,
            monthChangeSpinner: !0,
            closeOnDateSelect: !1,
            closeOnTimeSelect: !0,
            closeOnWithoutClick: !0,
            closeOnInputClick: !0,
            timepicker: !0,
            datepicker: !0,
            weeks: !1,
            defaultTime: !1,
            defaultDate: !1,
            minDate: !1,
            maxDate: !1,
            minTime: !1,
            maxTime: !1,
            disabledMinTime: !1,
            disabledMaxTime: !1,
            allowTimes: [],
            opened: !1,
            initTime: !0,
            inline: !1,
            theme: "",
            onSelectDate: function() {},
            onSelectTime: function() {},
            onChangeMonth: function() {},
            onGetWeekOfYear: function() {},
            onChangeYear: function() {},
            onChangeDateTime: function() {},
            onShow: function() {},
            onClose: function() {},
            onGenerate: function() {},
            withoutCopyright: !0,
            inverseButton: !1,
            hours12: !1,
            next: "xdsoft_next",
            prev: "xdsoft_prev",
            dayOfWeekStart: 0,
            parentID: "body",
            timeHeightInTimePicker: 25,
            timepickerScrollbar: !0,
            todayButton: !0,
            prevButton: !0,
            nextButton: !0,
            defaultSelect: !0,
            scrollMonth: !0,
            scrollTime: !0,
            scrollInput: !0,
            lazyInit: !1,
            mask: !1,
            validateOnBlur: !0,
            allowBlank: !0,
            yearStart: 1950,
            yearEnd: 2050,
            monthStart: 0,
            monthEnd: 11,
            style: "",
            id: "",
            fixed: !1,
            roundTime: "round",
            className: "",
            weekends: [],
            highlightedDates: [],
            highlightedPeriods: [],
            allowDates: [],
            allowDateRe: null,
            disabledDates: [],
            disabledWeekDays: [],
            yearOffset: 0,
            beforeShowDay: null,
            enterLikeTab: !0,
            showApplyButton: !1
        },
        n = null,
        e = "en",
        l = "en",
        q = {
            meridiem: ["AM", "PM"]
        },
        o = function() {
            var b = a.i18n[l],
                c = {
                    days: b.dayOfWeek,
                    daysShort: b.dayOfWeekShort,
                    months: b.months,
                    monthsShort: m.map(b.months, function(d) {
                        return d.substring(0, 3)
                    })
                };
            n = new DateFormatter({
                dateSettings: m.extend({}, q, c)
            })
        };
    m.datetimepicker = {
        setLocale: function(c) {
            var b = a.i18n[c] ? c : e;
            l != b && (l = b, o())
        },
        setDateFormatter: function(b) {
            n = b
        },
        RFC_2822: "D, d M Y H:i:s O",
        ATOM: "Y-m-dTH:i:sP",
        ISO_8601: "Y-m-dTH:i:sO",
        RFC_822: "D, d M y H:i:s O",
        RFC_850: "l, d-M-y H:i:s T",
        RFC_1036: "D, d M y H:i:s O",
        RFC_1123: "D, d M Y H:i:s O",
        RSS: "D, d M Y H:i:s O",
        W3C: "Y-m-dTH:i:sP"
    }, o(), window.getComputedStyle || (window.getComputedStyle = function(b) {
        return this.el = b, this.getPropertyValue = function(c) {
            var d = /(\-([a-z]){1})/g;
            return "float" === c && (c = "styleFloat"), d.test(c) && (c = c.replace(d, function(h, f, g) {
                return g.toUpperCase()
            })), b.currentStyle[c] || null
        }, this
    }), Array.prototype.indexOf || (Array.prototype.indexOf = function(f, c) {
        var d, b;
        for (d = c || 0, b = this.length; b > d; d += 1) {
            if (this[d] === f) {
                return d
            }
        }
        return -1
    }), Date.prototype.countDaysInMonth = function() {
        return new Date(this.getFullYear(), this.getMonth() + 1, 0).getDate()
    }, m.fn.xdsoftScroller = function(b) {
        return this.each(function() {
            var L, j, H, K, r, I = m(this),
                f = function(v) {
                    var w, x = {
                        x: 0,
                        y: 0
                    };
                    return "touchstart" === v.type || "touchmove" === v.type || "touchend" === v.type || "touchcancel" === v.type ? (w = v.originalEvent.touches[0] || v.originalEvent.changedTouches[0], x.x = w.clientX, x.y = w.clientY) : ("mousedown" === v.type || "mouseup" === v.type || "mousemove" === v.type || "mouseover" === v.type || "mouseout" === v.type || "mouseenter" === v.type || "mouseleave" === v.type) && (x.x = v.clientX, x.y = v.clientY), x
                },
                J = 100,
                s = !1,
                g = 0,
                c = 0,
                u = 0,
                k = !1,
                h = 0,
                d = function() {};
            return "hide" === b ? void I.find(".xdsoft_scrollbar").hide() : (m(this).hasClass("xdsoft_scroller_box") || (L = I.children().eq(0), j = I[0].clientHeight, H = L[0].offsetHeight, K = m('<div class="xdsoft_scrollbar"></div>'), r = m('<div class="xdsoft_scroller"></div>'), K.append(r), I.addClass("xdsoft_scroller_box").append(K), d = function(v) {
                var w = f(v).y - g + h;
                0 > w && (w = 0), w + r[0].offsetHeight > u && (w = u - r[0].offsetHeight), I.trigger("scroll_element.xdsoft_scroller", [J ? w / J : 0])
            }, r.on("touchstart.xdsoft_scroller mousedown.xdsoft_scroller", function(w) {
                j || I.trigger("resize_scroll.xdsoft_scroller", [b]), g = f(w).y, h = parseInt(r.css("margin-top"), 10), u = K[0].offsetHeight, "mousedown" === w.type || "touchstart" === w.type ? (document && m(document.body).addClass("xdsoft_noselect"), m([document.body, window]).on("touchend mouseup.xdsoft_scroller", function v() {
                    m([document.body, window]).off("touchend mouseup.xdsoft_scroller", v).off("mousemove.xdsoft_scroller", d).removeClass("xdsoft_noselect")
                }), m(document.body).on("mousemove.xdsoft_scroller", d)) : (k = !0, w.stopPropagation(), w.preventDefault())
            }).on("touchmove", function(v) {
                k && (v.preventDefault(), d(v))
            }).on("touchend touchcancel", function() {
                k = !1, h = 0
            }), I.on("scroll_element.xdsoft_scroller", function(v, w) {
                j || I.trigger("resize_scroll.xdsoft_scroller", [w, !0]), w = w > 1 ? 1 : 0 > w || isNaN(w) ? 0 : w, r.css("margin-top", J * w), setTimeout(function() {
                    L.css("marginTop", -parseInt((L[0].offsetHeight - j) * w, 10))
                }, 10)
            }).on("resize_scroll.xdsoft_scroller", function(y, v, x) {
                var w, z;
                j = I[0].clientHeight, H = L[0].offsetHeight, w = j / H, z = w * K[0].offsetHeight, w > 1 ? r.hide() : (r.show(), r.css("height", parseInt(z > 10 ? z : 10, 10)), J = K[0].offsetHeight - r[0].offsetHeight, x !== !0 && I.trigger("scroll_element.xdsoft_scroller", [v || Math.abs(parseInt(L.css("marginTop"), 10)) / (H - j)]))
            }), I.on("mousewheel", function(v) {
                var w = Math.abs(parseInt(L.css("marginTop"), 10));
                return w -= 20 * v.deltaY, 0 > w && (w = 0), I.trigger("scroll_element.xdsoft_scroller", [w / (H - j)]), v.stopPropagation(), !1
            }), I.on("touchstart", function(v) {
                s = f(v), c = Math.abs(parseInt(L.css("marginTop"), 10))
            }), I.on("touchmove", function(v) {
                if (s) {
                    v.preventDefault();
                    var w = f(v);
                    I.trigger("scroll_element.xdsoft_scroller", [(c - (w.y - s.y)) / (H - j)])
                }
            }), I.on("touchend touchcancel", function() {
                s = !1, c = 0
            })), void I.trigger("resize_scroll.xdsoft_scroller", [b]))
        })
    }, m.fn.datetimepicker = function(h, c) {
        var w, af, x = this,
            f = 48,
            ah = 57,
            ae = 96,
            g = 105,
            b = 17,
            ai = 46,
            j = 13,
            v = 27,
            A = 8,
            W = 37,
            u = 38,
            d = 39,
            O = 40,
            T = 9,
            P = 116,
            D = 65,
            F = 67,
            C = 86,
            S = 90,
            ag = 89,
            y = !1,
            s = m.isPlainObject(h) || !h ? m.extend(!0, {}, a, h) : m.extend(!0, {}, a),
            M = 0,
            k = function(r) {
                r.on("open.xdsoft focusin.xdsoft mousedown.xdsoft touchstart", function z() {
                    r.is(":disabled") || r.data("xdsoft_datetimepicker") || (clearTimeout(M), M = setTimeout(function() {
                        r.data("xdsoft_datetimepicker") || w(r), r.off("open.xdsoft focusin.xdsoft mousedown.xdsoft touchstart", z).trigger("open.xdsoft")
                    }, 100))
                })
            };
        return w = function(X) {
            function aa() {
                var ak, aj = !1;
                return s.startDate ? aj = ab.strToDate(s.startDate) : (aj = s.value || (X && X.val && X.val() ? X.val() : ""), aj ? aj = ab.strToDateTime(aj) : s.defaultDate && (aj = ab.strToDateTime(s.defaultDate), s.defaultTime && (ak = ab.strtotime(s.defaultTime), aj.setHours(ak.getHours()), aj.setMinutes(ak.getMinutes())))), aj && ab.isValidDate(aj) ? N.data("changed", !0) : aj = "", aj || 0
            }

            function r(am) {
                var an = function(ap, aq) {
                        var ar = ap.replace(/([\[\]\/\{\}\(\)\-\.\+]{1})/g, "\\$1").replace(/_/g, "{digit+}").replace(/([0-9]{1})/g, "{digit$1}").replace(/\{digit([0-9]{1})\}/g, "[0-$1_]{1}").replace(/\{digit[\+]\}/g, "[0-9_]{1}");
                        return new RegExp(ar).test(aq)
                    },
                    aj = function(ap) {
                        try {
                            if (document.selection && document.selection.createRange) {
                                var aq = document.selection.createRange();
                                return aq.getBookmark().charCodeAt(2) - 2
                            }
                            if (ap.setSelectionRange) {
                                return ap.selectionStart
                            }
                        } catch (ar) {
                            return 0
                        }
                    },
                    ak = function(ap, aq) {
                        if (ap = "string" == typeof ap || ap instanceof String ? document.getElementById(ap) : ap, !ap) {
                            return !1
                        }
                        if (ap.createTextRange) {
                            var ar = ap.createTextRange();
                            return ar.collapse(!0), ar.moveEnd("character", aq), ar.moveStart("character", aq), ar.select(), !0
                        }
                        return ap.setSelectionRange ? (ap.setSelectionRange(aq, aq), !0) : !1
                    };
                am.mask && X.off("keydown.xdsoft"), am.mask === !0 && (am.mask = "" != typeof moment ? am.format.replace(/Y{4}/g, "9999").replace(/Y{2}/g, "99").replace(/M{2}/g, "19").replace(/D{2}/g, "39").replace(/H{2}/g, "29").replace(/m{2}/g, "59").replace(/s{2}/g, "59") : am.format.replace(/Y/g, "9999").replace(/F/g, "9999").replace(/m/g, "19").replace(/d/g, "39").replace(/H/g, "29").replace(/i/g, "59").replace(/s/g, "59")), "string" === m.type(am.mask) && (an(am.mask, X.val()) || (X.val(am.mask.replace(/[0-9]/g, "_")), ak(X[0], 0)), X.on("keydown.xdsoft", function(av) {
                    var au, ar, aw = this.value,
                        at = av.which;
                    if (at >= f && ah >= at || at >= ae && g >= at || at === A || at === ai) {
                        for (au = aj(this), ar = at !== A && at !== ai ? String.fromCharCode(at >= ae && g >= at ? at - f : at) : "_", at !== A && at !== ai || !au || (au -= 1, ar = "_");
                            /[^0-9_]/.test(am.mask.substr(au, 1)) && au < am.mask.length && au > 0;) {
                            au += at === A || at === ai ? -1 : 1
                        }
                        if (aw = aw.substr(0, au) + ar + aw.substr(au + 1), "" === m.trim(aw)) {
                            aw = am.mask.replace(/[0-9]/g, "_")
                        } else {
                            if (au === am.mask.length) {
                                return av.preventDefault(), !1
                            }
                        }
                        for (au += at === A || at === ai ? 0 : 1;
                            /[^0-9_]/.test(am.mask.substr(au, 1)) && au < am.mask.length && au > 0;) {
                            au += at === A || at === ai ? -1 : 1
                        }
                        an(am.mask, aw) ? (this.value = aw, ak(this, au)) : "" === m.trim(aw) ? this.value = am.mask.replace(/[0-9]/g, "_") : X.trigger("error_input.xdsoft")
                    } else {
                        if (-1 !== [D, F, C, S, ag].indexOf(at) && y || -1 !== [v, u, O, W, d, P, b, T, j].indexOf(at)) {
                            return !0
                        }
                    }
                    return av.preventDefault(), !1
                }))
            }
            var Z, B, J, ac, Y, ab, G, N = m('<div class="xdsoft_datetimepicker xdsoft_noselect"></div>'),
                Q = m('<div class="xdsoft_copyright"><a target="_blank" href="http://xdsoft.net/jqplugins/datetimepicker/">xdsoft.net</a></div>'),
                L = m('<div class="xdsoft_datepicker active"></div>'),
                I = m('<div class="xdsoft_monthpicker"><button type="button" class="xdsoft_prev"></button><button type="button" class="xdsoft_today_button"></button><div class="xdsoft_label xdsoft_month"><span></span><i></i></div><div class="xdsoft_label xdsoft_year"><span></span><i></i></div><button type="button" class="xdsoft_next"></button></div>'),
                H = m('<div class="xdsoft_calendar"></div>'),
                z = m('<div class="xdsoft_timepicker active"><button type="button" class="xdsoft_prev"></button><div class="xdsoft_time_box"></div><button type="button" class="xdsoft_next"></button></div>'),
                K = z.find(".xdsoft_time_box").eq(0),
                ad = m('<div class="xdsoft_time_variant"></div>'),
                U = m('<button type="button" class="xdsoft_save_selected blue-gradient-button">Save Selected</button>'),
                E = m('<div class="xdsoft_select xdsoft_monthselect"><div></div></div>'),
                R = m('<div class="xdsoft_select xdsoft_yearselect"><div></div></div>'),
                al = !1,
                V = 0;
            s.id && N.attr("id", s.id), s.style && N.attr("style", s.style), s.weeks && N.addClass("xdsoft_showweeks"), s.rtl && N.addClass("xdsoft_rtl"), N.addClass("xdsoft_" + s.theme), N.addClass(s.className), I.find(".xdsoft_month span").after(E), I.find(".xdsoft_year span").after(R), I.find(".xdsoft_month,.xdsoft_year").on("touchstart mousedown.xdsoft", function(av) {
                var am, at, ak = m(this).find(".xdsoft_select").eq(0),
                    ar = 0,
                    aj = 0,
                    au = ak.is(":visible");
                for (I.find(".xdsoft_select").hide(), ab.currentTime && (ar = ab.currentTime[m(this).hasClass("xdsoft_month") ? "getMonth" : "getFullYear"]()), ak[au ? "hide" : "show"](), am = ak.find("div.xdsoft_option"), at = 0; at < am.length && am.eq(at).data("value") !== ar; at += 1) {
                    aj += am[0].offsetHeight
                }
                return ak.xdsoftScroller(aj / (ak.children()[0].offsetHeight - ak[0].clientHeight)), av.stopPropagation(), !1
            }), I.find(".xdsoft_select").xdsoftScroller().on("touchstart mousedown.xdsoft", function(aj) {
                aj.stopPropagation(), aj.preventDefault()
            }).on("touchstart mousedown.xdsoft", ".xdsoft_option", function() {
                (void 0 === ab.currentTime || null === ab.currentTime) && (ab.currentTime = ab.now());
                var aj = ab.currentTime.getFullYear();
                ab && ab.currentTime && ab.currentTime[m(this).parent().parent().hasClass("xdsoft_monthselect") ? "setMonth" : "setFullYear"](m(this).data("value")), m(this).parent().parent().hide(), N.trigger("xchange.xdsoft"), s.onChangeMonth && m.isFunction(s.onChangeMonth) && s.onChangeMonth.call(N, ab.currentTime, N.data("input")), aj !== ab.currentTime.getFullYear() && m.isFunction(s.onChangeYear) && s.onChangeYear.call(N, ab.currentTime, N.data("input"))
            }), N.getValue = function() {
                return ab.getCurrentTime()
            }, N.setOptions = function(ak) {
                var aj = {};
                s = m.extend(!0, {}, s, ak), ak.allowTimes && m.isArray(ak.allowTimes) && ak.allowTimes.length && (s.allowTimes = m.extend(!0, [], ak.allowTimes)), ak.weekends && m.isArray(ak.weekends) && ak.weekends.length && (s.weekends = m.extend(!0, [], ak.weekends)), ak.allowDates && m.isArray(ak.allowDates) && ak.allowDates.length && (s.allowDates = m.extend(!0, [], ak.allowDates)), ak.allowDateRe && "[object String]" === Object.prototype.toString.call(ak.allowDateRe) && (s.allowDateRe = new RegExp(ak.allowDateRe)), ak.highlightedDates && m.isArray(ak.highlightedDates) && ak.highlightedDates.length && (m.each(ak.highlightedDates, function(am, ar) {
                    var av, au = m.map(ar.split(","), m.trim),
                        at = new p(n.parseDate(au[0], s.formatDate), au[1], au[2]),
                        aw = n.formatDate(at.date, s.formatDate);
                    void 0 !== aj[aw] ? (av = aj[aw].desc, av && av.length && at.desc && at.desc.length && (aj[aw].desc = av + "\n" + at.desc)) : aj[aw] = at
                }), s.highlightedDates = m.extend(!0, [], aj)), ak.highlightedPeriods && m.isArray(ak.highlightedPeriods) && ak.highlightedPeriods.length && (aj = m.extend(!0, [], s.highlightedDates), m.each(ak.highlightedPeriods, function(ay, ax) {
                    var aC, am, aA, aw, aD, aB, az;
                    if (m.isArray(ax)) {
                        aC = ax[0], am = ax[1], aA = ax[2], az = ax[3]
                    } else {
                        var aE = m.map(ax.split(","), m.trim);
                        aC = n.parseDate(aE[0], s.formatDate), am = n.parseDate(aE[1], s.formatDate), aA = aE[2], az = aE[3]
                    }
                    for (; am >= aC;) {
                        aw = new p(aC, aA, az), aD = n.formatDate(aC, s.formatDate), aC.setDate(aC.getDate() + 1), void 0 !== aj[aD] ? (aB = aj[aD].desc, aB && aB.length && aw.desc && aw.desc.length && (aj[aD].desc = aB + "\n" + aw.desc)) : aj[aD] = aw
                    }
                }), s.highlightedDates = m.extend(!0, [], aj)), ak.disabledDates && m.isArray(ak.disabledDates) && ak.disabledDates.length && (s.disabledDates = m.extend(!0, [], ak.disabledDates)), ak.disabledWeekDays && m.isArray(ak.disabledWeekDays) && ak.disabledWeekDays.length && (s.disabledWeekDays = m.extend(!0, [], ak.disabledWeekDays)), !s.open && !s.opened || s.inline || X.trigger("open.xdsoft"), s.inline && (al = !0, N.addClass("xdsoft_inline"), X.after(N).hide()), s.inverseButton && (s.next = "xdsoft_prev", s.prev = "xdsoft_next"), s.datepicker ? L.addClass("active") : L.removeClass("active"), s.timepicker ? z.addClass("active") : z.removeClass("active"), s.value && (ab.setCurrentTime(s.value), X && X.val && X.val(ab.str)), s.dayOfWeekStart = isNaN(s.dayOfWeekStart) ? 0 : parseInt(s.dayOfWeekStart, 10) % 7, s.timepickerScrollbar || K.xdsoftScroller("hide"), s.minDate && /^[\+\-](.*)$/.test(s.minDate) && (s.minDate = n.formatDate(ab.strToDateTime(s.minDate), s.formatDate)), s.maxDate && /^[\+\-](.*)$/.test(s.maxDate) && (s.maxDate = n.formatDate(ab.strToDateTime(s.maxDate), s.formatDate)), U.toggle(s.showApplyButton), I.find(".xdsoft_today_button").css("visibility", s.todayButton ? "visible" : "hidden"), I.find("." + s.prev).css("visibility", s.prevButton ? "visible" : "hidden"), I.find("." + s.next).css("visibility", s.nextButton ? "visible" : "hidden"), r(s), s.validateOnBlur && X.off("blur.xdsoft").on("blur.xdsoft", function() {
                    if (s.allowBlank && (!m.trim(m(this).val()).length || "string" == typeof s.mask && m.trim(m(this).val()) === s.mask.replace(/[0-9]/g, "_"))) {
                        m(this).val(null), N.data("xdsoft_datetime").empty()
                    } else {
                        var am = n.parseDate(m(this).val(), s.format);
                        if (am) {
                            m(this).val(n.formatDate(am, s.format))
                        } else {
                            var an = +[m(this).val()[0], m(this).val()[1]].join(""),
                                ao = +[m(this).val()[2], m(this).val()[3]].join("");
                            m(this).val(!s.datepicker && s.timepicker && an >= 0 && 24 > an && ao >= 0 && 60 > ao ? [an, ao].map(function(ap) {
                                return ap > 9 ? ap : "0" + ap
                            }).join(":") : n.formatDate(ab.now(), s.format))
                        }
                        N.data("xdsoft_datetime").setCurrentTime(m(this).val())
                    }
                    N.trigger("changedatetime.xdsoft"), N.trigger("close.xdsoft")
                }), s.dayOfWeekStartPrev = 0 === s.dayOfWeekStart ? 6 : s.dayOfWeekStart - 1, N.trigger("xchange.xdsoft").trigger("afterOpen.xdsoft")
            }, N.data("options", s).on("touchstart mousedown.xdsoft", function(aj) {
                return aj.stopPropagation(), aj.preventDefault(), R.hide(), E.hide(), !1
            }), K.append(ad), K.xdsoftScroller(), N.on("afterOpen.xdsoft", function() {
                K.xdsoftScroller()
            }), N.append(L).append(z), s.withoutCopyright !== !0 && N.append(Q), L.append(I).append(H).append(U), m(s.parentID).append(N), Z = function() {
                var aj = this;
                aj.now = function(ak) {
                    var an, am, ao = new Date;
                    return !ak && s.defaultDate && (an = aj.strToDateTime(s.defaultDate), ao.setFullYear(an.getFullYear()), ao.setMonth(an.getMonth()), ao.setDate(an.getDate())), s.yearOffset && ao.setFullYear(ao.getFullYear() + s.yearOffset), !ak && s.defaultTime && (am = aj.strtotime(s.defaultTime), ao.setHours(am.getHours()), ao.setMinutes(am.getMinutes())), ao
                }, aj.isValidDate = function(ak) {
                    return "[object Date]" !== Object.prototype.toString.call(ak) ? !1 : !isNaN(ak.getTime())
                }, aj.setCurrentTime = function(ak, am) {
                    aj.currentTime = "string" == typeof ak ? aj.strToDateTime(ak) : aj.isValidDate(ak) ? ak : ak || am || !s.allowBlank ? aj.now() : null, N.trigger("xchange.xdsoft")
                }, aj.empty = function() {
                    aj.currentTime = null
                }, aj.getCurrentTime = function() {
                    return aj.currentTime
                }, aj.nextMonth = function() {
                    (void 0 === aj.currentTime || null === aj.currentTime) && (aj.currentTime = aj.now());
                    var am, ak = aj.currentTime.getMonth() + 1;
                    return 12 === ak && (aj.currentTime.setFullYear(aj.currentTime.getFullYear() + 1), ak = 0), am = aj.currentTime.getFullYear(), aj.currentTime.setDate(Math.min(new Date(aj.currentTime.getFullYear(), ak + 1, 0).getDate(), aj.currentTime.getDate())), aj.currentTime.setMonth(ak), s.onChangeMonth && m.isFunction(s.onChangeMonth) && s.onChangeMonth.call(N, ab.currentTime, N.data("input")), am !== aj.currentTime.getFullYear() && m.isFunction(s.onChangeYear) && s.onChangeYear.call(N, ab.currentTime, N.data("input")), N.trigger("xchange.xdsoft"), ak
                }, aj.prevMonth = function() {
                    (void 0 === aj.currentTime || null === aj.currentTime) && (aj.currentTime = aj.now());
                    var ak = aj.currentTime.getMonth() - 1;
                    return -1 === ak && (aj.currentTime.setFullYear(aj.currentTime.getFullYear() - 1), ak = 11), aj.currentTime.setDate(Math.min(new Date(aj.currentTime.getFullYear(), ak + 1, 0).getDate(), aj.currentTime.getDate())), aj.currentTime.setMonth(ak), s.onChangeMonth && m.isFunction(s.onChangeMonth) && s.onChangeMonth.call(N, ab.currentTime, N.data("input")), N.trigger("xchange.xdsoft"), ak
                }, aj.getWeekOfYear = function(am) {
                    if (s.onGetWeekOfYear && m.isFunction(s.onGetWeekOfYear)) {
                        var an = s.onGetWeekOfYear.call(N, am);
                        if ("" != typeof an) {
                            return an
                        }
                    }
                    var ak = new Date(am.getFullYear(), 0, 1);
                    return 4 != ak.getDay() && ak.setMonth(0, 1 + (4 - ak.getDay() + 7) % 7), Math.ceil(((am - ak) / 86400000 + ak.getDay() + 1) / 7)
                }, aj.strToDateTime = function(am) {
                    var an, ao, ak = [];
                    return am && am instanceof Date && aj.isValidDate(am) ? am : (ak = /^(\+|\-)(.*)$/.exec(am), ak && (ak[2] = n.parseDate(ak[2], s.formatDate)), ak && ak[2] ? (an = ak[2].getTime() - 60000 * ak[2].getTimezoneOffset(), ao = new Date(aj.now(!0).getTime() + parseInt(ak[1] + "1", 10) * an)) : ao = am ? n.parseDate(am, s.format) : aj.now(), aj.isValidDate(ao) || (ao = aj.now()), ao)
                }, aj.strToDate = function(ak) {
                    if (ak && ak instanceof Date && aj.isValidDate(ak)) {
                        return ak
                    }
                    var am = ak ? n.parseDate(ak, s.formatDate) : aj.now(!0);
                    return aj.isValidDate(am) || (am = aj.now(!0)), am
                }, aj.strtotime = function(ak) {
                    if (ak && ak instanceof Date && aj.isValidDate(ak)) {
                        return ak
                    }
                    var am = ak ? n.parseDate(ak, s.formatTime) : aj.now(!0);
                    return aj.isValidDate(am) || (am = aj.now(!0)), am
                }, aj.str = function() {
                    return n.formatDate(aj.currentTime, s.format)
                }, aj.currentTime = this.now()
            }, ab = new Z, U.on("touchend click", function(aj) {
                aj.preventDefault(), N.data("changed", !0), ab.setCurrentTime(aa()), X.val(ab.str()), N.trigger("close.xdsoft")
            }), I.find(".xdsoft_today_button").on("touchend mousedown.xdsoft", function() {
                N.data("changed", !0), ab.setCurrentTime(0, !0), N.trigger("afterOpen.xdsoft")
            }).on("dblclick.xdsoft", function() {
                var aj, ak, am = ab.getCurrentTime();
                am = new Date(am.getFullYear(), am.getMonth(), am.getDate()), aj = ab.strToDate(s.minDate), aj = new Date(aj.getFullYear(), aj.getMonth(), aj.getDate()), aj > am || (ak = ab.strToDate(s.maxDate), ak = new Date(ak.getFullYear(), ak.getMonth(), ak.getDate()), am > ak || (X.val(ab.str()), X.trigger("change"), N.trigger("close.xdsoft")))
            }), I.find(".xdsoft_prev,.xdsoft_next").on("touchend mousedown.xdsoft", function() {
                var an = m(this),
                    am = 0,
                    ak = !1;
                ! function ao(ap) {
                    an.hasClass(s.next) ? ab.nextMonth() : an.hasClass(s.prev) && ab.prevMonth(), s.monthChangeSpinner && (ak || (am = setTimeout(ao, ap || 100)))
                }(500), m([document.body, window]).on("touchend mouseup.xdsoft", function aj() {
                    clearTimeout(am), ak = !0, m([document.body, window]).off("touchend mouseup.xdsoft", aj)
                })
            }), z.find(".xdsoft_prev,.xdsoft_next").on("touchend mousedown.xdsoft", function() {
                var aj = m(this),
                    ap = 0,
                    ar = !1,
                    am = 110;
                ! function aq(ao) {
                    var av = K[0].clientHeight,
                        au = ad[0].offsetHeight,
                        an = Math.abs(parseInt(ad.css("marginTop"), 10));
                    aj.hasClass(s.next) && au - av - s.timeHeightInTimePicker >= an ? ad.css("marginTop", "-" + (an + s.timeHeightInTimePicker) + "px") : aj.hasClass(s.prev) && an - s.timeHeightInTimePicker >= 0 && ad.css("marginTop", "-" + (an - s.timeHeightInTimePicker) + "px"), K.trigger("scroll_element.xdsoft_scroller", [Math.abs(parseInt(ad[0].style.marginTop, 10) / (au - av))]), am = am > 10 ? 10 : am - 10, ar || (ap = setTimeout(aq, ao || am))
                }(500), m([document.body, window]).on("touchend mouseup.xdsoft", function ak() {
                    clearTimeout(ap), ar = !0, m([document.body, window]).off("touchend mouseup.xdsoft", ak)
                })
            }), B = 0, N.on("xchange.xdsoft", function(aj) {
                clearTimeout(B), B = setTimeout(function() {
                    if (void 0 === ab.currentTime || null === ab.currentTime) {
                        if (s.allowBlank) {
                            return
                        }
                        ab.currentTime = ab.now()
                    }
                    for (var aQ, am, aN, aO, aT, aH, aP, aM, aI, aU, aS = "", aJ = new Date(ab.currentTime.getFullYear(), ab.currentTime.getMonth(), 1, 12, 0, 0), aX = 0, aV = ab.now(), aK = !1, aL = !1, aG = [], aW = !0, aR = "", ak = ""; aJ.getDay() !== s.dayOfWeekStart;) {
                        aJ.setDate(aJ.getDate() - 1)
                    }
                    for (aS += "<table><thead><tr>", s.weeks && (aS += "<th></th>"), aQ = 0; 7 > aQ; aQ += 1) {
                        aS += "<th>" + s.i18n[l].dayOfWeekShort[(aQ + s.dayOfWeekStart) % 7] + "</th>"
                    }
                    for (aS += "</tr></thead>", aS += "<tbody>", s.maxDate !== !1 && (aK = ab.strToDate(s.maxDate), aK = new Date(aK.getFullYear(), aK.getMonth(), aK.getDate(), 23, 59, 59, 999)), s.minDate !== !1 && (aL = ab.strToDate(s.minDate), aL = new Date(aL.getFullYear(), aL.getMonth(), aL.getDate())); aX < ab.currentTime.countDaysInMonth() || aJ.getDay() !== s.dayOfWeekStart || ab.currentTime.getMonth() === aJ.getMonth();) {
                        aG = [], aX += 1, aN = aJ.getDay(), aO = aJ.getDate(), aT = aJ.getFullYear(), aH = aJ.getMonth(), aP = ab.getWeekOfYear(aJ), aU = "", aG.push("xdsoft_date"), aM = s.beforeShowDay && m.isFunction(s.beforeShowDay.call) ? s.beforeShowDay.call(N, aJ) : null, s.allowDateRe && "[object RegExp]" === Object.prototype.toString.call(s.allowDateRe) ? s.allowDateRe.test(n.formatDate(aJ, s.formatDate)) || aG.push("xdsoft_disabled") : s.allowDates && s.allowDates.length > 0 ? -1 === s.allowDates.indexOf(n.formatDate(aJ, s.formatDate)) && aG.push("xdsoft_disabled") : aK !== !1 && aJ > aK || aL !== !1 && aL > aJ || aM && aM[0] === !1 ? aG.push("xdsoft_disabled") : -1 !== s.disabledDates.indexOf(n.formatDate(aJ, s.formatDate)) ? aG.push("xdsoft_disabled") : -1 !== s.disabledWeekDays.indexOf(aN) ? aG.push("xdsoft_disabled") : X.is("[readonly]") && aG.push("xdsoft_disabled"), aM && "" !== aM[1] && aG.push(aM[1]), ab.currentTime.getMonth() !== aH && aG.push("xdsoft_other_month"), (s.defaultSelect || N.data("changed")) && n.formatDate(ab.currentTime, s.formatDate) === n.formatDate(aJ, s.formatDate) && aG.push("xdsoft_current"), n.formatDate(aV, s.formatDate) === n.formatDate(aJ, s.formatDate) && aG.push("xdsoft_today"), (0 === aJ.getDay() || 6 === aJ.getDay() || -1 !== s.weekends.indexOf(n.formatDate(aJ, s.formatDate))) && aG.push("xdsoft_weekend"), void 0 !== s.highlightedDates[n.formatDate(aJ, s.formatDate)] && (am = s.highlightedDates[n.formatDate(aJ, s.formatDate)], aG.push(void 0 === am.style ? "xdsoft_highlighted_default" : am.style), aU = void 0 === am.desc ? "" : am.desc), s.beforeShowDay && m.isFunction(s.beforeShowDay) && aG.push(s.beforeShowDay(aJ)), aW && (aS += "<tr>", aW = !1, s.weeks && (aS += "<th>" + aP + "</th>")), aS += '<td data-date="' + aO + '" data-month="' + aH + '" data-year="' + aT + '" class="xdsoft_date xdsoft_day_of_week' + aJ.getDay() + " " + aG.join(" ") + '" title="' + aU + '"><div>' + aO + "</div></td>", aJ.getDay() === s.dayOfWeekStartPrev && (aS += "</tr>", aW = !0), aJ.setDate(aO + 1)
                    }
                    if (aS += "</tbody></table>", H.html(aS), I.find(".xdsoft_label span").eq(0).text(s.i18n[l].months[ab.currentTime.getMonth()]), I.find(".xdsoft_label span").eq(1).text(ab.currentTime.getFullYear()), aR = "", ak = "", aH = "", aI = function(ao, aq) {
                            var ar, ap, an = ab.now(),
                                at = s.allowTimes && m.isArray(s.allowTimes) && s.allowTimes.length;
                            an.setHours(ao), ao = parseInt(an.getHours(), 10), an.setMinutes(aq), aq = parseInt(an.getMinutes(), 10), ar = new Date(ab.currentTime), ar.setHours(ao), ar.setMinutes(aq), aG = [], s.minDateTime !== !1 && s.minDateTime > ar || s.maxTime !== !1 && ab.strtotime(s.maxTime).getTime() < an.getTime() || s.minTime !== !1 && ab.strtotime(s.minTime).getTime() > an.getTime() ? aG.push("xdsoft_disabled") : s.minDateTime !== !1 && s.minDateTime > ar || s.disabledMinTime !== !1 && an.getTime() > ab.strtotime(s.disabledMinTime).getTime() && s.disabledMaxTime !== !1 && an.getTime() < ab.strtotime(s.disabledMaxTime).getTime() ? aG.push("xdsoft_disabled") : X.is("[readonly]") && aG.push("xdsoft_disabled"), ap = new Date(ab.currentTime), ap.setHours(parseInt(ab.currentTime.getHours(), 10)), at || ap.setMinutes(Math[s.roundTime](ab.currentTime.getMinutes() / s.step) * s.step), (s.initTime || s.defaultSelect || N.data("changed")) && ap.getHours() === parseInt(ao, 10) && (!at && s.step > 59 || ap.getMinutes() === parseInt(aq, 10)) && (s.defaultSelect || N.data("changed") ? aG.push("xdsoft_current") : s.initTime && aG.push("xdsoft_init_time")), parseInt(aV.getHours(), 10) === parseInt(ao, 10) && parseInt(aV.getMinutes(), 10) === parseInt(aq, 10) && aG.push("xdsoft_today"), aR += '<div class="xdsoft_time ' + aG.join(" ") + '" data-hour="' + ao + '" data-minute="' + aq + '">' + n.formatDate(an, s.formatTime) + "</div>"
                        }, s.allowTimes && m.isArray(s.allowTimes) && s.allowTimes.length) {
                        for (aX = 0; aX < s.allowTimes.length; aX += 1) {
                            ak = ab.strtotime(s.allowTimes[aX]).getHours(), aH = ab.strtotime(s.allowTimes[aX]).getMinutes(), aI(ak, aH)
                        }
                    } else {
                        for (aX = 0, aQ = 0; aX < (s.hours12 ? 12 : 24); aX += 1) {
                            for (aQ = 0; 60 > aQ; aQ += s.step) {
                                ak = (10 > aX ? "0" : "") + aX, aH = (10 > aQ ? "0" : "") + aQ, aI(ak, aH)
                            }
                        }
                    }
                    for (ad.html(aR), h = "", aX = 0, aX = parseInt(s.yearStart, 10) + s.yearOffset; aX <= parseInt(s.yearEnd, 10) + s.yearOffset; aX += 1) {
                        h += '<div class="xdsoft_option ' + (ab.currentTime.getFullYear() === aX ? "xdsoft_current" : "") + '" data-value="' + aX + '">' + aX + "</div>"
                    }
                    for (R.children().eq(0).html(h), aX = parseInt(s.monthStart, 10), h = ""; aX <= parseInt(s.monthEnd, 10); aX += 1) {
                        h += '<div class="xdsoft_option ' + (ab.currentTime.getMonth() === aX ? "xdsoft_current" : "") + '" data-value="' + aX + '">' + s.i18n[l].months[aX] + "</div>"
                    }
                    E.children().eq(0).html(h), m(N).trigger("generate.xdsoft")
                }, 10), aj.stopPropagation()
            }).on("afterOpen.xdsoft", function() {
                if (s.timepicker) {
                    var aj, an, am, ak;
                    ad.find(".xdsoft_current").length ? aj = ".xdsoft_current" : ad.find(".xdsoft_init_time").length && (aj = ".xdsoft_init_time"), aj ? (an = K[0].clientHeight, am = ad[0].offsetHeight, ak = ad.find(aj).index() * s.timeHeightInTimePicker + 1, ak > am - an && (ak = am - an), K.trigger("scroll_element.xdsoft_scroller", [parseInt(ak, 10) / (am - an)])) : K.trigger("scroll_element.xdsoft_scroller", [0])
                }
            }), J = 0, H.on("touchend click.xdsoft", "td", function(ak) {
                ak.stopPropagation(), J += 1;
                var am = m(this),
                    aj = ab.currentTime;
                return (void 0 === aj || null === aj) && (ab.currentTime = ab.now(), aj = ab.currentTime), am.hasClass("xdsoft_disabled") ? !1 : (aj.setDate(1), aj.setFullYear(am.data("year")), aj.setMonth(am.data("month")), aj.setDate(am.data("date")), N.trigger("select.xdsoft", [aj]), X.val(ab.str()), s.onSelectDate && m.isFunction(s.onSelectDate) && s.onSelectDate.call(N, ab.currentTime, N.data("input"), ak), N.data("changed", !0), N.trigger("xchange.xdsoft"), N.trigger("changedatetime.xdsoft"), (J > 1 || s.closeOnDateSelect === !0 || s.closeOnDateSelect === !1 && !s.timepicker) && !s.inline && N.trigger("close.xdsoft"), void setTimeout(function() {
                    J = 0
                }, 200))
            }), ad.on("touchend click.xdsoft", "div", function(am) {
                am.stopPropagation();
                var ak = m(this),
                    aj = ab.currentTime;
                return (void 0 === aj || null === aj) && (ab.currentTime = ab.now(), aj = ab.currentTime), ak.hasClass("xdsoft_disabled") ? !1 : (aj.setHours(ak.data("hour")), aj.setMinutes(ak.data("minute")), N.trigger("select.xdsoft", [aj]), N.data("input").val(ab.str()), s.onSelectTime && m.isFunction(s.onSelectTime) && s.onSelectTime.call(N, ab.currentTime, N.data("input"), am), N.data("changed", !0), N.trigger("xchange.xdsoft"), N.trigger("changedatetime.xdsoft"), void(s.inline !== !0 && s.closeOnTimeSelect === !0 && N.trigger("close.xdsoft")))
            }), L.on("mousewheel.xdsoft", function(aj) {
                return s.scrollMonth ? (aj.deltaY < 0 ? ab.nextMonth() : ab.prevMonth(), !1) : !0
            }), X.on("mousewheel.xdsoft", function(aj) {
                return s.scrollInput ? !s.datepicker && s.timepicker ? (ac = ad.find(".xdsoft_current").length ? ad.find(".xdsoft_current").eq(0).index() : 0, ac + aj.deltaY >= 0 && ac + aj.deltaY < ad.children().length && (ac += aj.deltaY), ad.children().eq(ac).length && ad.children().eq(ac).trigger("mousedown"), !1) : s.datepicker && !s.timepicker ? (L.trigger(aj, [aj.deltaY, aj.deltaX, aj.deltaY]), X.val && X.val(ab.str()), N.trigger("changedatetime.xdsoft"), !1) : void 0 : !0
            }), N.on("changedatetime.xdsoft", function(ak) {
                if (s.onChangeDateTime && m.isFunction(s.onChangeDateTime)) {
                    var aj = N.data("input");
                    s.onChangeDateTime.call(N, ab.currentTime, aj, ak), delete s.value, aj.trigger("change")
                }
            }).on("generate.xdsoft", function() {
                s.onGenerate && m.isFunction(s.onGenerate) && s.onGenerate.call(N, ab.currentTime, N.data("input")), al && (N.trigger("afterOpen.xdsoft"), al = !1)
            }).on("click.xdsoft", function(aj) {
                aj.stopPropagation()
            }), ac = 0, G = function(ak, aj) {
                do {
                    if (ak = ak.parentNode, aj(ak) === !1) {
                        break
                    }
                } while ("HTML" !== ak.nodeName)
            }, Y = function() {
                var aK, ak, aB, aH, aI, aE, aJ, aA, aj, aF, aC, am, aG;
                if (aA = N.data("input"), aK = aA.offset(), ak = aA[0], aF = "top", aB = aK.top + ak.offsetHeight - 1, aH = aK.left, aI = "absolute", aj = m(window).width(), am = m(window).height(), aG = m(window).scrollTop(), document.documentElement.clientWidth - aK.left < L.parent().outerWidth(!0)) {
                    var aD = L.parent().outerWidth(!0) - ak.offsetWidth;
                    aH -= aD
                }
                "rtl" === aA.parent().css("direction") && (aH -= N.outerWidth() - aA.outerWidth()), s.fixed ? (aB -= aG, aH -= m(window).scrollLeft(), aI = "fixed") : (aJ = !1, G(ak, function(an) {
                    return "fixed" === window.getComputedStyle(an).getPropertyValue("position") ? (aJ = !0, !1) : void 0
                }), aJ ? (aI = "fixed", aB + N.outerHeight() > am + aG ? (aF = "bottom", aB = am + aG - aK.top) : aB -= aG) : aB + ak.offsetHeight > am + aG && (aB = aK.top - ak.offsetHeight + 1), 0 > aB && (aB = 0), aH + ak.offsetWidth > aj && (aH = aj - ak.offsetWidth)), aE = N[0], G(aE, function(ao) {
                    var an;
                    return an = window.getComputedStyle(ao).getPropertyValue("position"), "relative" === an && aj >= ao.offsetWidth ? (aH -= (aj - ao.offsetWidth) / 2, !1) : void 0
                }), aC = {
                    position: aI,
                    left: aH,
                    top: "",
                    bottom: ""
                }, aC[aF] = aB, N.css(aC)
            }, N.on("open.xdsoft", function(am) {
                var ak = !0;
                s.onShow && m.isFunction(s.onShow) && (ak = s.onShow.call(N, ab.currentTime, N.data("input"), am)), ak !== !1 && (N.show(), Y(), m(window).off("resize.xdsoft", Y).on("resize.xdsoft", Y), s.closeOnWithoutClick && m([document.body, window]).on("touchstart mousedown.xdsoft", function aj() {
                    N.trigger("close.xdsoft"), m([document.body, window]).off("touchstart mousedown.xdsoft", aj)
                }))
            }).on("close.xdsoft", function(ak) {
                var aj = !0;
                I.find(".xdsoft_month,.xdsoft_year").find(".xdsoft_select").hide(), s.onClose && m.isFunction(s.onClose) && (aj = s.onClose.call(N, ab.currentTime, N.data("input"), ak)), aj === !1 || s.opened || s.inline || N.hide(), ak.stopPropagation()
            }).on("toggle.xdsoft", function() {
                N.trigger(N.is(":visible") ? "close.xdsoft" : "open.xdsoft")
            }).data("input", X), V = 0, N.data("xdsoft_datetime", ab), N.setOptions(s), ab.setCurrentTime(aa()), X.data("xdsoft_datetimepicker", N).on("open.xdsoft focusin.xdsoft mousedown.xdsoft touchstart", function() {
                X.is(":disabled") || X.data("xdsoft_datetimepicker").is(":visible") && s.closeOnInputClick || (clearTimeout(V), V = setTimeout(function() {
                    X.is(":disabled") || (al = !0, ab.setCurrentTime(aa(), !0), s.mask && r(s), N.trigger("open.xdsoft"))
                }, 100))
            }).on("keydown.xdsoft", function(am) {
                var ak, aj = am.which;
                return -1 !== [j].indexOf(aj) && s.enterLikeTab ? (ak = m("input:visible,textarea:visible,button:visible,a:visible"), N.trigger("close.xdsoft"), ak.eq(ak.index(this) + 1).focus(), !1) : -1 !== [T].indexOf(aj) ? (N.trigger("close.xdsoft"), !0) : void 0
            }).on("blur.xdsoft", function() {
                N.trigger("close.xdsoft")
            })
        }, af = function(r) {
            var z = r.data("xdsoft_datetimepicker");
            z && (z.data("xdsoft_datetime", null), z.remove(), r.data("xdsoft_datetimepicker", null).off(".xdsoft"), m(window).off("resize.xdsoft"), m([window, document.body]).off("mousedown.xdsoft touchstart"), r.unmousewheel && r.unmousewheel())
        }, m(document).off("keydown.xdsoftctrl keyup.xdsoftctrl").on("keydown.xdsoftctrl", function(r) {
            r.keyCode === b && (y = !0)
        }).on("keyup.xdsoftctrl", function(r) {
            r.keyCode === b && (y = !1)
        }), this.each(function() {
            var r, z = m(this).data("xdsoft_datetimepicker");
            if (z) {
                if ("string" === m.type(h)) {
                    switch (h) {
                        case "show":
                            m(this).select().focus(), z.trigger("open.xdsoft");
                            break;
                        case "hide":
                            z.trigger("close.xdsoft");
                            break;
                        case "toggle":
                            z.trigger("toggle.xdsoft");
                            break;
                        case "destroy":
                            af(m(this));
                            break;
                        case "reset":
                            this.value = this.defaultValue, this.value && z.data("xdsoft_datetime").isValidDate(n.parseDate(this.value, s.format)) || z.data("changed", !1), z.data("xdsoft_datetime").setCurrentTime(this.value);
                            break;
                        case "validate":
                            r = z.data("input"), r.trigger("blur.xdsoft");
                            break;
                        default:
                            z[h] && m.isFunction(z[h]) && (x = z[h](c))
                    }
                } else {
                    z.setOptions(h)
                }
                return 0
            }
            "string" !== m.type(h) && (!s.lazyInit || s.open || s.inline ? w(m(this)) : k(m(this)))
        }), x
    }, m.fn.datetimepicker.defaults = a
}),
function(b) {
    "function" == typeof define && define.amd ? define(["jquery"], b) : "object" == typeof exports ? module.exports = b : b(jQuery)
}(function(n) {
    function a(g) {
        var k = g || window.event,
            c = l.call(arguments, 1),
            p = 0,
            f = 0,
            b = 0,
            m = 0,
            j = 0,
            h = 0;
        if (g = n.event.fix(k), g.type = "mousewheel", "detail" in k && (b = -1 * k.detail), "wheelDelta" in k && (b = k.wheelDelta), "wheelDeltaY" in k && (b = k.wheelDeltaY), "wheelDeltaX" in k && (f = -1 * k.wheelDeltaX), "axis" in k && k.axis === k.HORIZONTAL_AXIS && (f = -1 * b, b = 0), p = 0 === b ? f : b, "deltaY" in k && (b = -1 * k.deltaY, p = b), "deltaX" in k && (f = k.deltaX, 0 === b && (p = -1 * f)), 0 !== b || 0 !== f) {
            if (1 === k.deltaMode) {
                var v = n.data(this, "mousewheel-line-height");
                p *= v, b *= v, f *= v
            } else {
                if (2 === k.deltaMode) {
                    var y = n.data(this, "mousewheel-page-height");
                    p *= y, b *= y, f *= y
                }
            }
            if (m = Math.max(Math.abs(b), Math.abs(f)), (!u || u > m) && (u = m, w(k, m) && (u /= 40)), w(k, m) && (p /= 40, f /= 40, b /= 40), p = Math[p >= 1 ? "floor" : "ceil"](p / u), f = Math[f >= 1 ? "floor" : "ceil"](f / u), b = Math[b >= 1 ? "floor" : "ceil"](b / u), r.settings.normalizeOffset && this.getBoundingClientRect) {
                var q = this.getBoundingClientRect();
                j = g.clientX - q.left, h = g.clientY - q.top
            }
            return g.deltaX = f, g.deltaY = b, g.deltaFactor = u, g.offsetX = j, g.offsetY = h, g.deltaMode = 0, c.unshift(g, p, f, b), s && clearTimeout(s), s = setTimeout(e, 200), (n.event.dispatch || n.event.handle).apply(this, c)
        }
    }

    function e() {
        u = null
    }

    function w(c, b) {
        return r.settings.adjustOldDeltas && "mousewheel" === c.type && b % 120 === 0
    }
    var s, u, o = ["wheel", "mousewheel", "DOMMouseScroll", "MozMousePixelScroll"],
        x = "onwheel" in document || document.documentMode >= 9 ? ["wheel"] : ["mousewheel", "DomMouseScroll", "MozMousePixelScroll"],
        l = Array.prototype.slice;
    if (n.event.fixHooks) {
        for (var d = o.length; d;) {
            n.event.fixHooks[o[--d]] = n.event.mouseHooks
        }
    }
    var r = n.event.special.mousewheel = {
        version: "3.1.12",
        setup: function() {
            if (this.addEventListener) {
                for (var b = x.length; b;) {
                    this.addEventListener(x[--b], a, !1)
                }
            } else {
                this.onmousewheel = a
            }
            n.data(this, "mousewheel-line-height", r.getLineHeight(this)), n.data(this, "mousewheel-page-height", r.getPageHeight(this))
        },
        teardown: function() {
            if (this.removeEventListener) {
                for (var b = x.length; b;) {
                    this.removeEventListener(x[--b], a, !1)
                }
            } else {
                this.onmousewheel = null
            }
            n.removeData(this, "mousewheel-line-height"), n.removeData(this, "mousewheel-page-height")
        },
        getLineHeight: function(c) {
            var f = n(c),
                b = f["offsetParent" in n.fn ? "offsetParent" : "parent"]();
            return b.length || (b = n("body")), parseInt(b.css("fontSize"), 10) || parseInt(f.css("fontSize"), 10) || 16
        },
        getPageHeight: function(b) {
            return n(b).height()
        },
        settings: {
            adjustOldDeltas: !0,
            normalizeOffset: !0
        }
    };
    n.fn.extend({
        mousewheel: function(b) {
            return b ? this.bind("mousewheel", b) : this.trigger("mousewheel")
        },
        unmousewheel: function(b) {
            return this.unbind("mousewheel", b)
        }
    })
});
(function(b) {
    b.QuestionBox = function(F, a) {
        var I = {},
            G = {},
            E = {
                emptyString: "",
                brString: "<br/>",
                tabDataFilePath: "/Resources/js/GABTabsContent.js",
                fiveFileInfoText: "There are already 5 attached files. Please remove any existing file to add more files.",
                titleInfoText: "Please Enter Title For Your Question (Advise:With In 0 To 100 Character )",
                descriptionDefaultText: "Copy and paste your question here...",
              //  descriptionInfoText: "Please enter your entire question",
               // topicDefaultText: "Select Topic",
               // topicInfoText: "Please select a Subject for Your Question",
                deadLineInfoText: "Please select a deadline for Your Question",
                gradeInfoText: "Please select your Grade Level",
                fileSizeError: "File size limit exceeded. Please upload a file less than 20 MB.",
                invalidDueDateText: "Invalid Due Date (Due Date should not Precede the Current Date)",
                isUserLoggedin: false,
                isSubscribedUser: false,
                eventActionPrefix: "",
                questionBoxTitle: "PLACE NEW ORDER",
                onInit: function() {}
            };
        var A = function(c, d) {
                I.hdnCategoryTopicinfo.val(c);
                I.ddlTopics.val(d);
                I.divTabDataContainer.hide()
            },
            D = function() {
                I.divTabDataContainer.load(G.tabDataFilePath, function(d, e, c) {
                    if (e == "error") {
                        console.log(c.status + " " + c.statusText)
                    } else {
                        if (e == "success") {
                            I.divTabDataContainer.find("div.tabs .tabhead:first").addClass("active").find("a");
                            I.divTabDataContainer.find(".tab_content").hide();
                            I.divTabDataContainer.find("div.tabs .tabhead:first").addClass("active").show();
                            I.divTabDataContainer.find(".tab_content:first").show();
                            if (!I.DefaultSubjectId > 0) {
                                I.DefaultSubjectId = b("#hdnSubjectId").val()
                            }
                            if (I.DefaultSubjectId > 0) {
                                I.divTabDataContainer.find('[data-id="' + I.DefaultSubjectId + '"]').click()
                            }
                        }
                    }
                })
            },
            C = function(d, c) {
                var e = b("#" + d.id);
                if (d == I.divTabDataContainer) {
                    return false
                }
                if (b(d).is(I.ddlTopics) || b(d).is(I.divTabDataContainer.find("#ullinks")) || b(d).is(I.divTabDataContainer.find("div.tab_container"))) {
                    c.preventDefault();
                    c.stopPropagation();
                    return true
                } else {
                    if (e.is(I.ddlTopics) || e.is(I.divTabDataContainer.find("#ullinks")) || e.is(I.divTabDataContainer.find("div.tab_container"))) {
                        c.preventDefault();
                        c.stopPropagation();
                        return true
                    }
                }
                return false
            },
            u = function(c) {
                var d = c.target;
                var e = C(d, c);
                if (!e) {
                    I.divTabDataContainer.hide()
                }
            },
            z = function(c) {
                var d = "#dvAttachFile" + c;
                b(d).find(".progressbar").css("border", "solid 1px #3D78A8");
                b(d + " div.browsecls1").find("input:file").val("");
                b(d).hide();
                b(d).find(".progressbar").html("");
                if (I.divFileUploadContainer.find("input:file:visible").length == 0) {
                    b(I.divFileUploadContainer).hide()
                }
            },
            H = function() {
                var c = 5;
                b(I.divFileUploadContainer).show();
                for (var d = 1; d <= c; d++) {
                    var g = I.divFileUploadContainer.find("#dvAttachFile" + d);
                    if (!b(g).is(":visible")) {
                        b(g).css("display", "block");
                        var e = b(g).find("input:file");
                        e.css("display", "block");
                        b(e).on("change", function() {
                            var l = b(this).parents(".uploadstrip");
                            var k = b(this)[0];
                            var j;
                            if (navigator.userAgent.toUpperCase().indexOf("MSIE") > 0) {
                                j = k.context.activeElement.value
                            } else {
                                var h = k.files[0].size;
                                j = k.files[0].name;
                                if (h > 20971520) {
                                    TT.ModalPopup.show(G.fileSizeError);
                                    b(this).val("");
                                    return false
                                }
                            }
                            b(l).find(".progressbar").css("border", "none").html(j)
                        });
                        var f = I.divFileUploadContainer.find("input:file:visible").length;
                        if (c == f) {
                            I.divFileUploadContainer.find("a.attachmore").hide()
                        }
                        return false
                    }
                }
            },
            v = function() {
                var c = I.txtDescription.html().trim();
                var d = c.replace(/(&nbsp;)*/g, G.emptyString).trim();
                d = d.replace(/(<br\s*\/?>\s*)+/g, G.brString).trim();
                I.hdntxtQuestion.val(d)
            },
            B = function() {
                var e = b(I.divFileUploadContainer);
                if (e.is(":visible")) {
                    for (var c = 1; c < 6; c++) {
                        var g = I.divFileUploadContainer.find("#dvAttachFile" + c);
                        var d = b(g).find(".progressbar").html().trim();
                        if (b(g).is(":visible") && d.length > 0) {
                            b(g).find(".progressbar").html("").css("display", "block").css("border", "solid 1px #3D78A8");
                            var f = new Date().setTime(new Date().getTime() + 0 * 1000);
                            var h = new Date().setTime(new Date().getTime() + 25 * 1000);
                            b(g).anim_progressbar({
                                start: f,
                                finish: h,
                                interval: 50
                            })
                        }
                    }
                }
            };
        var s = function(c) {
            var h = true;
            var e = "logout";
            if (I.isUserLoggedin) {
                e = "login"
            }
            if (I.ddlTopics.val() == G.topicDefaultText || I.hdnCategoryTopicinfo.val() == "") {
                if (h) {
                    TT.ModalPopup.show(G.topicInfoText, function() {
                        I.ddlTopics.focus();
                        I.ddlTopics.click()
                    })
                }
                h = false;
                e = e + "_notag"
            } else {
                e = e + "_tag"
            }
            if (I.IsDateEnabled) {
                var f = I.txtDeadLine.val().trim();
                if ((f == G.emptyString) || (f == "Deadline")) {
                    if (h) {
                        TT.ModalPopup.show(G.deadLineInfoText, function() {
                            I.txtDeadLine.focus()
                        })
                    }
                    h = false;
                    e = e + "_nodeadline"
                } else {
                    var g = new Date();
                    f = I.txtDeadLine.datetimepicker("getValue");
                    f.setMinutes(0);
                    if (h) {
                        if (f < g) {
                            TT.ModalPopup.show("Invalid Due Date (Due Date should not Precede the Current Date)", function() {
                                I.txtDeadLine.focus()
                            });
                            h = false
                        }
                    }
                    e = e + "_deadline"
                }
            }
            var d = I.txtDescription.html().trim();
            if ((d == G.emptyString) || (d == G.descriptionDefaultText)) {
                if (h) {
                    TT.ModalPopup.show(G.descriptionInfoText, function() {
                        I.txtDescription.focus()
                    })
                }
                h = false;
                e = e + "_nodesc"
            } else {
                e = e + "_desc"
            }
            if (!h) {
                c.preventDefault()
            }
            return h
        };
        var w = this;
        var x = function() {},
            y = function() {
                var c = new Date();
                c.setFullYear(c.getFullYear() + 2, c.getMonth(), c.getDate());
                if (I.IsDateEnabled) {
                    I.txtDeadLine.show();
                    I.txtDeadLine.datetimepicker({
                        minDate: 0,
                        format: "d/m/Y H:i",
                        yearStart: new Date().getFullYear(),
                        yearEnd: new Date().getFullYear() + 2,
                        maxDate: c,
                        onChangeDateTime: function(e, g, f) {
                            var d = new Date();
                            if (e) {
                                d = new Date(e)
                            }
                            if (d.getMinutes() > 0) {
                                d.setMinutes(d.getMinutes() + 30)
                            }
                            d.setMinutes(0);
                            d.setSeconds(0);
                            I.txtDeadLine.datetimepicker({
                                value: d
                            })
                        }
                    })
                } else {
                    I.txtDeadLine.hide()
                }
                if (I.IsSubjectEnabled) {
                    if (I.divTabDataContainer) {
                        D()
                    }
                    I.ddlTopics.val(G.topicDefaultText)
                } else {
                    I.ddlTopics.val("")
                }
                I.dvTitle.text(G.questionBoxTitle);
                I.attachFileLink.on("click", function(d) {
                    H()
                });
                I.txtDeadLine.on("keypress", function(d) {
                    d.preventDefault();
                    return false
                });
                I.divFileUploadContainer.find("a.attachmore").on("click", function() {
                    H()
                });
                I.txtDescription.slimScroll();
                I.txtDescription.on({
                    blur: function() {
                        var d = I.txtDescription.html().trim();
                        var e = d.replace(/(&nbsp;)*/g, G.emptyString).trim();
                        e = e.replace(/(<br\s*\/?>\s*)+/g, G.brString).trim();
                        if (e == G.emptyString || e == G.brString || e == "<br>") {
                            I.txtDescription.html(G.descriptionDefaultText)
                        } else {
                            I.txtDescription.html(e)
                        }
                    },
                    focus: function() {
                        var d = I.txtDescription.html().trim();
                        if (d == G.descriptionDefaultText) {
                            I.txtDescription.html("")
                        }
                    }
                });
                I.divFileUploadContainer.find("a.cancelupload").on("click", function() {
                    var d = b(this).attr("value");
                    var e = I.divFileUploadContainer.find("#dvAttachFile" + d);
                    b(e).find(".progressbar").removeClass("ui-progressbar ui-widget ui-widget-content ui-corner-all").html("");
                    b(e).find("input").val("");
                    b(I.divFileUploadContainer).find("a.attachmore").show();
                    b(e).css("display", "none");
                    if (I.divFileUploadContainer.find("input:file:visible").length == 0) {
                        console.log("0");
                        b(I.divFileUploadContainer).hide()
                    }
                });
                I.divTabDataContainer.on("click", "div.tab_container div.tab_content ul li >a", function() {
                    var d = b(this).attr("value");
                    var e = d.split("|");
                    var f = e[1];
                    A(d, f)
                });
                I.divTabDataContainer.on("click", "div.tabs .tabhead", function() {
                    I.divTabDataContainer.find("div.tabs").find(">li").each(function() {
                        b(this).removeClass("active");
                        b(this).find("a").css("color", "#fff")
                    });
                    I.divTabDataContainer.find("div.tabs .tabhead").removeClass("active");
                    b(this).find("a").css("color", "#000");
                    b(this).addClass("active");
                    I.divTabDataContainer.find(".tab_content").hide();
                    var d = b(this).find("a").attr("href");
                    I.divTabDataContainer.find(d).fadeIn();
                    return false
                });
                I.btnSubmit.on("click", function(d) {
                    var e = 0;
                    b("input:file").each(function() {
                        if (b(this)[0].files.length) {
                            e += b(this)[0].files[0].size
                        }
                    });
                    if (e > 26214400) {
                        TT.ModalPopup.show("Total file size cannot be more than 25 MB, Please upload smaller files.");
                        d.preventDefault();
                        return false
                    }
                    if (s(d)) {
                        v();
                        if (I.isSubscribedUser) {
                            b(this).ConfirmPopup(d, "This is a paid service separate from your subscription. You will soon get a price quote for this assignment.")
                        } else {
                            B();
                            TT.ModalProgress.show("Posting your question....")
                        }
                    } else {
                        d.preventDefault();
                        return false
                    }
                    return true
                });
                I.ddlTopics.on("click", function(d) {
                    I.divTabDataContainer.show();
                    d.preventDefault();
                    d.stopPropagation()
                });
                b(document).on("click", function(d) {
                    u(d)
                })
            };
        w.init = function() {
            G = b.extend({}, E, a);
            I.divGabContainer = b(F);
            I.divTabDataContainer = I.divGabContainer.find("#dvSubjectContainer").uniqueId();
            I.divFileUploadContainer = I.divGabContainer.find("#dvAttachFileContainer");
            I.ddlTopics = I.divGabContainer.find("#seltopic");
            I.hdnCategoryTopicinfo = I.divGabContainer.find("#HdnCategoryTopicinfo");
            I.btnSubmit = I.divGabContainer.find("#btnsubmit");
            I.txtDeadLine = I.divGabContainer.find("#txtDeadLine");
            I.attachFileLink = I.divGabContainer.find("#attacthfileGAB");
            I.attachMoreLinkId = I.divGabContainer.find("#Attachmore");
            I.hdntxtQuestion = I.divGabContainer.find("#HdntxtQuestion");
            I.txtDescription = I.divGabContainer.find("#txtQuestion").uniqueId();
            I.editorId = I.txtDescription.attr("id");
            I.divAttachMid = I.divGabContainer.find("#divAttachMid");
            I.dvTitle = I.divGabContainer.find("#dvTitle");
            I.hdnIsSubjectEnabled = I.divGabContainer.find("#hdnIsSubjectEnabled");
            I.hdnIsDateEnabled = I.divGabContainer.find("#hdnIsDateEnabled");
            I.DefaultSubjectId = parseInt(I.divGabContainer.find("#hdnDefaultSubjectId").val(), 10);
            I.IsSubjectEnabled = TT.isBoolean(I.hdnIsSubjectEnabled.val());
            I.IsDateEnabled = TT.isBoolean(I.hdnIsDateEnabled.val());
            I.isUserLoggedin = TT.isBoolean(b("#hdnIsUserLoggedin").val());
            I.isSubscribedUser = TT.isBoolean(b("#hdnIsSubscribedUser").val());
            if (!I.IsSubjectEnabled) {
                I.ddlTopics.hide()
            }
            y();
            if (I.txtDescription.length > 0) {
                var c = new nicEditor();
                c.addInstance(I.editorId)
            }
            x = G.onInit;
            x()
        };
        w.questionId = 0;
        w.setLoginEventData = function(d, c) {};
        w.init()
    };
    b.fn.QuestionBox = function(a) {
        return this.each(function() {
            if ( == b(this).data("questionbox")) {
                var d = new b.QuestionBox(this, a);
                b(this).data("questionbox", d)
            }
        })
    }
})(jQuery);
(function(b) {
    b.fn.uniqueId = function(e) {
        var a = "_0123456789ABCDEFGHIJKLMNOPQRSTUVWXTZabcdefghiklmnopqrstuvwxyz".split("");
        if (!e) {
            e = 10
        }
        var f = function() {
            var c = "";
            for (var d = 0; d < e; d++) {
                c += a[Math.floor(Math.random() * a.length)]
            }
            return c
        };
        return b(this).each(function() {
            var c = f();
            while (b("#" + c).length) {
                c = f()
            }
            b(this).attr("id", c)
        })
    }
})(jQuery);
$(function() {
    $("#dvAskQuestionBox").QuestionBox({
        questionBoxTitle: "PLACE NEW ORDER"
    });
   
    $("<br clear='all' /><div class='avgtime'></div>").insertAfter(".gabbtn");
    if (window.screen.width < 950) {
        $(".gab #seltopic").click(function() {
            $(".tab_container .tab_content").hide();
            $("html div.tabs .tabhead.active").removeClass("active")
        })
    }
});